@{
    ViewBag.Title = "FclBookingConfirmSetupView";
}
<style>
	.danger{background:#d9534f !important;}
	.normal{background:#fff !important;}
</style>
<script type="text/javascript" src="@Url.Content("~/Scripts/lib/bootstrap.file-input.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/SMSMI/ExportToFTP.js?20241016")"></script>
<script>
    var TranTypeSel = "@ViewBag.TranType";
    var _delayReason = "@ViewBag.DelayReason";
    var _delaySolution="@ViewBag.DelaySolution"
    $(function () {
        var gop = {};
        var numberTemplate = "2";
        var docHeight = $(document).height();
        gridHeight = docHeight - 300;
        gop.AddUrl = { "url": rootPath + "SMSMI/FclBookingConfirmSetupView", "title": "@Resources.Locale.L_SMSMI_FclBookingConfirmSetupView", "id": "FclBookingConfirmSetupView" };;
        gop.gridId = "containerInfoGrid";
        gop.gridAttr = { caption: "@Resources.Locale.L_SMSMI_FCLConfirmQueryList", height: gridHeight, refresh: true, exportexcel: true, conditions: encodeURI(loadCondition) };
        gop.gridSearchUrl = rootPath + "SMSMI/ConfirmFclQueryData";
        gop.multiselect = true;
        gop.multiboxonly = true;

        //SAVE CONDITION 為避免以後須調整畫面，ID都要傳到元件
        gop.searchFormId = "ConditionArea";
        gop.searchDivId = "SearchArea";
        gop.StatusAreaId = "StatusArea";
        gop.BtnGroupId = "BtnGroupArea";

        //gop.statusPreLoad = true;
        gop.loadCompleteFunc = function () {
            var $grid = $("#containerInfoGrid");
            if ($grid.length > 0 && $grid[0].p && !$grid[0].p.sortname)
                $grid[0].p.sortname = "CreateDate";

            var col = $grid.jqGrid('getCol', 'Priority', false);
            $.each(col, function (index, colname) {
                if (colname == "1") {
                    $grid.jqGrid('setRowData', index + 1, false, 'danger');
                }
            });

            var col = $grid.jqGrid('getCol', 'Status', false);
            $.each(col, function (index, colname) {
                switch (colname) {
                    case "D":
                    case "E":
                    case "F":
                    case "G":
                    case "P":
                    case "H":
                    case "I":
                    case "J":
                        $grid.find("tr:eq(" + (index + 1) + ")").removeClass("danger");
                }
            });
        }

        gop.gridFunc = function (map) {
            //用于回调函数，例如赋值操作等
            dblClick(map);
        }

        gop.baseConditionFunc = function () {
            return getCreateDateParams("CreateDate", gop);
        }

        gop.btnGroup = [

            {
                id: "SendToFTP",
                name: "@Resources.Locale.L_DNManage_IsExport",
                func: function () { }
            },
            {
                id: "BatchUploadEDOC",//BatchUploadEDOC
                name: "@Resources.Locale.L_DNApproveManage_Views_316" + " Edoc",
                func: function () {
                    _ExportToFTP.InitButtonHandle();
                }
            },
            {
                id: "btn15",
                name: "@Resources.Locale.L_SMICNTR_SampleExcel",
                func: function () {
                    var selRowId = $("#containerInfoGrid").jqGrid('getGridParam', 'selarrrow');
                    var responseData = [];
                    var shipmentid = "";//[];
                    $.each(selRowId, function (index, val) {
                        responseData.push(mygrid.getRowData(selRowId[index]));
                    });
                    if (responseData.length < 1) {
                        CommonFunc.Notify("", "@Resources.Locale.L_TKBLQuery_Select", 500, "warning");
                        return;
                    }
                    for (var i = 0; i < responseData.length; i++) {
                        //uid.push(responseData[i].UId);
                        if (shipmentid != "") shipmentid += ","
                        shipmentid += responseData[i].ShipmentId;
                    }
                    $.ajax({
                        async: true,
                        url: rootPath + "SMSMI/QuaryXls",
                        type: 'POST',
                        data: {
                            ShipmentId: shipmentid,
                            "IsCntr": "Y"
                        },
                        dataType: "json",
                        "complete": function (xmlHttpRequest, successMsg) {

                        },
                        "error": function (xmlHttpRequest, errMsg) {
                        },
                        success: function (result) {
                            if (result != null && result.IsOk == "Y") {
                                //window.open(rootPath + "DNManage/DownLoadXls?FileType=GwCbm&filename=" + result.file);
                                window.open(rootPath + "SMSMI/DownLoadXls?filename=" + result.file);
                            }
                            else {
                                alert(result.msg);
                            }
                        }
                    });


                }
            }, {
                id: "btn16",
                name: "@Resources.Locale.L_SMICNTR_ImportPinNo",
                func: function () {
                    $('#StatusUploadWin').modal('show');
                    resetFileInput($("#InboundUploadExcel"));
                }
            }, {
                id: "UpdateDischargeData",
                name: "@Resources.Locale.TLB_UpdateDischargeData",
                func: function () {
                    var mygrid = $("#containerInfoGrid");
                    var selRowId = mygrid.jqGrid('getGridParam', 'selarrrow');
                    var responseData = [];
                    var dnitems = "";
                    $.each(selRowId, function (index, val) {
                        responseData.push(mygrid.getRowData(selRowId[index]));
                    });
                    if (responseData.length < 1) {
                        CommonFunc.Notify("", "@Resources.Locale.L_BaseBooking_Scripts_127", 500, "warning");
                        return;
                    }
                    var shipments = "";
                    for (var i = 0; i < responseData.length; i++) {
                        dnitems += responseData[i].UId + ",";
                        if (shipments.length > 0)
                            shipments += ",";
                        shipments += responseData[i].UId;
                    }

                    $('#UpdateDischargeWindow').modal('show');
                }
            }, {
                id: "UpdateATAData",
                name: "Input ATA Date",
                func: function () {
                    var mygrid = $("#containerInfoGrid");
                    var selRowId = mygrid.jqGrid('getGridParam', 'selarrrow');
                    var responseData = [];
                    var dnitems = "";
                    $.each(selRowId, function (index, val) {
                        responseData.push(mygrid.getRowData(selRowId[index]));
                    });
                    if (responseData.length < 1) {
                        CommonFunc.Notify("", "@Resources.Locale.L_BaseBooking_Scripts_127", 500, "warning");
                        return;
                    }
                    var shipments = "";
                    for (var i = 0; i < responseData.length; i++) {
                        dnitems += responseData[i].UId + ",";
                        if (shipments.length > 0)
                            shipments += ",";
                        shipments += responseData[i].UId;
                    }

                    $('#UpdateATAWindow').modal('show');
                }
            }, {
                id: "EmptyReturnDownload",
                name: "@Resources.Locale.L_EmptyReturnDownload",
                func: function () {
                    var selRowId = $("#containerInfoGrid").jqGrid('getGridParam', 'selarrrow');
                    var responseData = [];
                    var shipmentid = "";//[];
                    $.each(selRowId, function (index, val) {
                        responseData.push(mygrid.getRowData(selRowId[index]));
                    });
                    if (responseData.length < 1) {
                        CommonFunc.Notify("", "@Resources.Locale.L_TKBLQuery_Select", 500, "warning");
                        return;
                    }
                    for (var i = 0; i < responseData.length; i++) {
                        if (shipmentid != "") shipmentid += ";"
                        shipmentid += responseData[i].ShipmentId;
                    }
                    $.ajax({
                        async: true,
                        url: rootPath + "SMSMI/DownloadEmptyReturn",
                        type: 'POST',
                        data: {
                            shipments: shipmentid
                        },
                        dataType: "json",
                        "complete": function (xmlHttpRequest, successMsg) {

                        },
                        "error": function (xmlHttpRequest, errMsg) {
                        },
                        success: function (result) {
                            if (result != null && result.IsOk == "Y") {
                                //window.open(rootPath + "DNManage/DownLoadXls?FileType=GwCbm&filename=" + result.file);
                                window.open(rootPath + "SMSMI/DownLoadXls?filename=" + result.file);
                            }
                            else {
                                alert(result.msg);
                            }
                        }
                    });
                }
            }, {
                id: "EmptyReturnUpload",
                name: "@Resources.Locale.L_EmptyReturnUpload",
                func: function () {
                    $('#EmptyReturnModel').modal('show');
                    resetFileInput($("#InboundEmptyReturnUploadExcel"));
                }
            }
        ];

        Callfunction();
        document.querySelector("#InboundUploadExcel").addEventListener("click",
            function (event) {
                $("#InboundUploadExcel").val("");
            });

        document.querySelector("#InboundEmptyReturnUploadExcel").addEventListener("click",
            function (event) {
                $("#InboundEmptyReturnUploadExcel").val("");
            });

        gop.statusGroup = [
            { "id": "B", "label": "@Resources.Locale.L_SMSMI_StatusB" },
            { "id": "C", "label": "@Resources.Locale.L_SMSMI_StatusC" },
            { "id": "D", "label": "@Resources.Locale.L_SMSMI_StatusD" },
            { "id": "H", "label": "@Resources.Locale.L_SMSMI_StatusH" },
            { "id": "I", "label": "@Resources.Locale.L_SMSMI_StatusI" },
            { "id": "G", "label": "@Resources.Locale.L_SMSMI_StatusG" },
            { "id": "P", "label": "@Resources.Locale.L_SMSMI_StatusP"},
            { "id": "O", "label": "Gate Out" },
            { "id": "Z", "label": "Finish" },
            { "id": "V", "label": "Void" },
            { "id": "", "label": "ALL" },
            { "id": "R", "label": "Archived/ETA≥3months"}
        ];

        gop.statusField = "Status";
        gop.statusDefaultId = "B";

        var colModelSetting = [
           { name: 'TranType', formatter: "select", remark: TranTypeSel, editoptions: { value: TranTypeSel } },
            { name: 'Status', formatter: "select", remark: "S:ISF Sending;A:@Resources.Locale.L_SMSMI_StatusA;B:@Resources.Locale.L_SMSMI_StatusB;C:@Resources.Locale.L_SMSMI_StatusC;D:@Resources.Locale.L_SMSMI_StatusD;E:@Resources.Locale.L_SMSMI_StatusE;F:@Resources.Locale.L_SMSMI_StatusF;G:@Resources.Locale.L_SMSMI_StatusG;H:@Resources.Locale.L_SMSMI_StatusH;I:@Resources.Locale.L_SMSMI_StatusI;P:@Resources.Locale.L_SMSMI_StatusP;X:@Resources.Locale.L_SMSMI_StatusX;O:Gate Out;Z:Finish;V:Void;R:Archived", editoptions: { value: "S:ISF Sending;A:@Resources.Locale.L_SMSMI_StatusA;B:@Resources.Locale.L_SMSMI_StatusB;C:@Resources.Locale.L_SMSMI_StatusC;D:@Resources.Locale.L_SMSMI_StatusD;E:@Resources.Locale.L_SMSMI_StatusE;F:@Resources.Locale.L_SMSMI_StatusF;G:@Resources.Locale.L_SMSMI_StatusG;H:@Resources.Locale.L_SMSMI_StatusH;I:@Resources.Locale.L_SMSMI_StatusI;P:@Resources.Locale.L_SMSMI_StatusP;X:@Resources.Locale.L_SMSMI_StatusX;O:Gate Out;Z:Finish;V:Void;R:Archived" } },
            {
                name: 'Bstatus', formatter: "select", remark: "B:@Resources.Locale.L_SMSMI_BStatusB;Y:@Resources.Locale.L_SMSMI_BstatusY;C:@Resources.Locale.L_SMSMI_StatusD;H:@Resources.Locale.L_SMSMI_StatusH;I:@Resources.Locale.L_SMSMI_StatusI", editoptions: { value: "B:@Resources.Locale.L_SMSMI_BStatusB;Y:@Resources.Locale.L_SMSMI_BstatusY;C:@Resources.Locale.L_SMSMI_StatusD;H:@Resources.Locale.L_SMSMI_StatusH;I:@Resources.Locale.L_SMSMI_StatusI" }
            },
            { name: 'DelayReason', title: '@Resources.Locale.L_BaseLookup_DelayReason', index: 'DelayReason', width: 100, align: 'left', sorttype: 'string', hidden: false, formatter: "select", editoptions: { value: _delayReason } },
            { name: 'DelaySolution', title: '@Resources.Locale.L_BaseLookup_DelaySolution', index: 'DelaySolution', width: 150, align: 'left', sorttype: 'string', hidden: false, formatter: "select", editoptions: { value: _delaySolution }  },
            { name: 'DelayRemark', title: '@Resources.Locale.L_BaseLookup_DelayRemark', index: 'DelayRemark', width: 150, align: 'left', sorttype: 'string', hidden: false}
        ];

        genColModel("SMSMI", "U_ID", "L_SMSMI", colModelSetting).done(function (result) {
            for (var i = 0; i < result.length; i++) {
                if (result[i].name == 'Light') {
                    result[i]['formatter'] = function formatLight(cellValue, options, rowObject) {

                        var htmlStr = "<ul class='light-ul'>";

                        if (cellValue != "" && cellValue != null) {
                            var array1 = cellValue.split(")*(");
                            for (var i = 0; i < array1.length; i++) {
                                var array2 = array1[i].split('(*)');
                                var li = "";
                                if (array2[2] == 1) {
                                    li = "<li><div class='grid-circle circle-green' title='" + array2[1] + "'></div></li>";
                                }
                                else {
                                    li = "<li><div class='grid-circle circle-default' title='" + array2[1] + "'></div></li>";
                                }
                                htmlStr += li;
                            }


                        }
                        else {
                            for (var i = 0; i < 5; i++) {
                                var li = "<li><div class='grid-circle circle-default' title=''></div></li>";
                                htmlStr += li;
                            }
                        }
                        htmlStr += "</ul>";

                        return htmlStr;
                    }
                }

				switch (result[i].name) {
					case "PortFreeTime":
					case "FactFreeTime":
					case "ConFreeTime":
						result[i].formatoptions = {
							decimalSeparator: ".",
							thousandsSeparator: ",",
							decimalPlaces: 0,
							defaultValue: ''
						};
						break;
                    case "Etd":
                        result[i].title = "ETD(O)(Carrier)";
                        break;
                    case "EtdL":
                        result[i].title = "ETD(O)(LSP)";
                        break;
                    case "Eta":
                        result[i].title = "ETA(D)(Carrier)";
                        break;
                    case "EtaL":
                        result[i].title = "ETA(D)(LSP)";
                        break;
                    case "AsnnoInfo":
                        result[i]["chide"] = "Y";
                        break;
                    case "DecInfo":
                        result[i].title = "Declaration No";
                        result[i]["chide"] = "Y";
                        break;
                    case "ProductType":
					case "DnNo":
                    case "CombineDet":
                    case "CntrInfo":
                        result.splice(i, 1);
                        break;
                    case "OfCost":
                        result[i]['formatter'] = function formatofcost(cellValue, options, rowObject) {
                            htmlStr = "<div>*</div>"
                            return htmlStr;
                        }
                        break;
                    case "Weekly":
                        result[i].title = "ETD Week";
                        break;
                    case "EtaWk":
                        result[i].title = "ETA Week";
                        break;
                }
            }

            var mergeColModel = [];
            gop.searchColModel = [
            { name: 'VT_PLACESmidnInvNo', title: '@Resources.Locale.L_SMIDN_InvoiceNo', sorttype: 'string' },
            { name: 'VT_PLACESmidnDivisionDescp', title: '@Resources.Locale.L_SMICNTR_DivisionDescp', sorttype: 'string' },
            { name: 'VT_PLACESmicntrCntrNo', title: 'Container No', sorttype: 'string' },
                { name: 'VT_PLACESmicntrDecNo', title: '@Resources.Locale.L_SMIDN_DecNo', sorttype: 'string' },
             { name: 'VT_PLACESmidnpAsnNo', title: '@Resources.Locale.L_SMSMI_AsnnoInfo', sorttype: 'string' },
            {
                name: 'VT_PLACESmicntrDecDate', title: '@Resources.Locale.L_SMIDN_DecDate', sorttype: 'string', formatter: 'date', formatoptions: { newformat: 'Y-m-d' }, hidden: false, editable: false,
                editoptions: myEditDateInit,
                formatter: 'date',
                formatoptions: {
                    srcformat: 'ISO8601Long',
                    newformat: 'Y-m-d',
                    defaultValue: ""
                }
            }
            ];
            $.merge(mergeColModel, result);
			$.merge(mergeColModel, gop.searchColModel);
			var newmergeColModel = $.grep(mergeColModel, function (value, index) {
				return value.name != "DecInfo";
			});
			gop.searchColumns = getSelectColumn(newmergeColModel);

            result.push(
                { name: 'EltL', title: "Estimated  Lead Time", index: 'EltL', width: 100, align: 'left', sorttype: 'string', hidden: false },
                { name: 'AltL', title: "Actual Lead Time", index: 'AltL', width: 100, align: 'right', sorttype: 'string', hidden: false },
                { name: 'EddL', title: "Estimated Delay Days", index: 'EddL', width: 100, align: 'left', sorttype: 'string', hidden: false },
                { name: 'AddL', title: "Delay Days", index: 'AddL', width: 100, align: 'right', sorttype: 'string', hidden: false },
                { name: 'CntrInfo', title: "Container Info", index: 'CntrInfo', width: 100, align: 'left', sorttype: 'string', hidden: false }
            );
            gop.gridColModel = result;

            _ExportToFTP.lang = {
                IsOk: "Send successfully, please wait 10 minutes to view FTP ",
                BeforSend: "@Resources.Locale.L_BSTQuery_Uploading",
                failed: "Uploading is failed",
                title: "@Resources.Locale.L_BSTQuery_ImpExcel",
                file: "@Resources.Locale.L_BSTQuery_SelectFile",
                submitbtn: "@Resources.Locale.L_BSTQuery_Upload",
                NoData: "@Resources.Locale.L_BaseBooking_Scripts_127"
            };
            _ExportToFTP.ExportToEdocInit();
            initSearch(gop);

            $("#Pdbtn").on("click", function () {
                var mygrid = $("#containerInfoGrid");
                var selRowId = mygrid.jqGrid('getGridParam', 'selarrrow');
                var responseData = [];
                var dnitems = "";
                $.each(selRowId, function (index, val) {
                    responseData.push(mygrid.getRowData(selRowId[index]));
                });
                if (responseData.length < 1) {
                    CommonFunc.Notify("", "@Resources.Locale.L_BaseBooking_Scripts_127", 500, "warning");
                    return;
                }
                var shipments = "";
                for (var i = 0; i < responseData.length; i++) {
                    dnitems += responseData[i].ShipmentId + ",";
                    if (shipments.length > 0)
                        shipments += ",";
                    shipments += responseData[i].ShipmentId;
                }

                CommonFunc.ToogleLoading(true);
                $.ajax({
                    async: true,
                    url: rootPath + "SMSMI/InsertPdp",
                    type: 'POST',
                    data: {
                        "shipments": dnitems,
                        "ProductionDate": $("#ProductionDate").val(),
                        "Priority": $("#Priority").val(),
                    },
                    "complete": function (xmlHttpRequest, successMsg) {
                        CommonFunc.ToogleLoading(false);
                    },
                    "error": function (xmlHttpRequest, errMsg) {
                        CommonFunc.ToogleLoading(false);
                        var resJson = $.parseJSON(errMsg)
                        CommonFunc.Notify("", resJson.message, 500, "warning");
                    },
                    success: function (result) {
                        //var resJson = $.parseJSON(result)
                        if (result.message == "success") {
                            CommonFunc.Notify("", result.message, 500, "success");
                        }
                        else {
                            alert(result.message);
                        }
                        $(".status-box.active").click();
                        $("#PdWindow").modal("hide");
                        //$("#SummarySearch").trigger("click");
                    }
                });
            });

            $("#ProductionDate").wrap('<div class="input-group">').datepicker({
                showOn: "button",
                changeYear: true,
                dateFormat: "yy/mm/dd",
                beforeShow: function () {
                    setTimeout(function () {
                        $('.ui-datepicker').css('z-index', 99999999999999);
                    }, 0);
                },
                onClose: function (text, inst) {
                    $(this).focus();
                }
            }).next("button").button({
                icons: { primary: "ui-icon-calendar" },
                label: "Select a date",
                text: false
            }).addClass("btn btn-sm btn-default").html("<span class='glyphicon glyphicon-calendar'></sapn>")
			.wrap('<span class="input-group-btn">')
			.find('.ui-button-text')
			.css({
			    'visibility': 'hidden',
			    'display': 'inline'
			});
        });

        function dblClick(map) {
            var UId = map.UId;
            top.topManager.openPage({
                href: rootPath + "SMSMI/FclBookingConfirmSetupView/" + UId,
                title: '@Resources.Locale.L_SMSMI_FclBookingConfirmSetupView',
                id: 'FclBookingConfirmSetupView',
                search: 'uid=' + UId,
                reload: true
            });
        }

        function isEmpty(val) {
            if (val === undefined || val === "" || val == null)
                return true;
            return false;
        }

        function getData(url, data, callBackFn) {
            CommonFunc.ToogleLoading(true);
            $.ajax({
                async: true,
                url: url,
                type: 'POST',
                data: data,
                "complete": function (xmlHttpRequest, successMsg) {
                    CommonFunc.ToogleLoading(false);
                },
                "error": function (xmlHttpRequest, errMsg) {
                },
                success: function (result) {
                    console.log(result);
                    var resJson = $.parseJSON(result);
                    callBackFn(resJson);
                }
            });
        }

        function Callfunction() {
            $("#STATUS_EXCEL_UPLOAD_FROM").submit(function () {
                var isconfim = $("#autoconfirm").val();
                $(this).find("input[name='IsCntr']").remove();
                $(this).append('<input type="hidden" name="IsCntr" value="Y" />');
                $(this).find("input[name='IsAuto']").remove();
                $(this).append('<input type="hidden" name="IsAuto" value="' + isconfim + '" />');

                var postData = new FormData($(this)[0]);
                $.ajax({
                    url: rootPath + "SMSMI/UploadSMICNTR",
                    type: 'POST',
                    data: postData,
                    async: false,
                    beforeSend: function () {
                        CommonFunc.ToogleLoading(true);
                    },
                    success: function (data) {
                        //alert(data)
                        resetFileInput($("#InboundUploadExcel"));
                        CommonFunc.ToogleLoading(false);
                        if (data.message != "success") {
                            $("#winmsg").html("Import Failure" + data.message)
                            $("#ShowStatusUploadWinMsg").modal("show");
                            //CommonFunc.Notify("", "汇入失败" + data.message, 1300, "warning");
                            return false;
                        }
                        CommonFunc.Notify("", "Import Success", 500, "success");
                        if (!isEmpty(data.errorMsg))
                            CommonFunc.Notify("", data.errorMsg, 1000, "warning");
                        $("#StatusUploadWin").modal("hide");
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });

                return false;
            });

            $("#EMPTY_EXCEL_UPLOAD_FROM").submit(function () {
                var postData = new FormData($(this)[0]);
                $.ajax({
                    url: rootPath + "SMSMI/UploadEmptyReturn",
                    type: 'POST',
                    data: postData,
                    async: false,
                    beforeSend: function () {
                        CommonFunc.ToogleLoading(true);
                    },
                    success: function (data) {
                        //alert(data)
                        resetFileInput($("#InboundEmptyReturnUploadExcel"));
                        CommonFunc.ToogleLoading(false);
                        if (data.message != "success") {
                            $("#winmsg").html("Import Failure" + data.message)
                            return false;
                        }
                        CommonFunc.Notify("", "Import Success", 500, "success");
                        if (!isEmpty(data.errorMsg))
                            CommonFunc.Notify("", data.errorMsg, 1000, "warning");
                        $("#EmptyReturnModel").modal("hide");
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });

                return false;
            });

            $("#EMPTY_EXCEL_UPLOAD_FROM").submit(function () {
                var postData = new FormData($(this)[0]);
                $.ajax({
                    url: rootPath + "SMSMI/UploadEmptyReturn",
                    type: 'POST',
                    data: postData,
                    async: false,
                    beforeSend: function () {
                        CommonFunc.ToogleLoading(true);
                    },
                    success: function (data) {
                        //alert(data)
                        resetFileInput($("#InboundEmptyReturnUploadExcel"));
                        CommonFunc.ToogleLoading(false);
                        if (data.message != "success") {
                            $("#winmsg").html("Import Failure" + data.message)
                            return false;
                        }
                        CommonFunc.Notify("", "Import Success", 500, "success");
                        if (!isEmpty(data.errorMsg))
                            CommonFunc.Notify("", data.errorMsg, 1000, "warning");
                        $("#EmptyReturnModel").modal("hide");
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });

                return false;
            });
        }

        _ExportToFTP.initBathSendToFTP();
        _ExportToFTP.RegisterUploadDischargeBtn();
        _ExportToFTP.RegisterATABtn();
    });
</script>
<div id="wrapper" class='@Html.Raw(ViewBag.MenuBar)'>
    <div id="page-wrapper">
        <div class="container-fluid">
            <div class="panel panel-default">
                <div class="panel-body">
                    <!--SAVE CONDITION 固定以下排版，不可在此區植入SCRIPT-->
                    <div class="condition-layout">
                        <form class="pure-g" id="ConditionArea"></form>
                        <div class="pure-g" id="SearchArea">

                        </div>
                        <div class="pure-g" id="val">
                            <label style="color:red">@Resources.Locale.L_CreateDateSixMonthMsg</label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="pure-g" id="BtnGroupArea">

                    </div>
                    <div class="pure-g" id="StatusArea">

                    </div>
                    <div class="form-group">
                        <div class="pure-g">
                            <div class="pure-u-sm-60-60">
                                <table id="containerInfoGrid" class="_tableGrid" style="width: 100%">
                                    <tr></tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Excel匯入視窗(NEW_BOOKING_CINFIRM)-->
<div class="modal fade" id="StatusUploadWin" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Upload Confirm Information</h4>
            </div>
            <form name="STATUS_EXCEL_UPLOAD_FROM" id="STATUS_EXCEL_UPLOAD_FROM" method="post" enctype="multipart/form-data">
                <div class="modal-body">
                    <div class="pure-g">
                        <div class="pure-u-sm-20-60">
                            <label for="autoconfirm" class="control-label">Auto Confirm</label>
                        </div>
                        <div class="pure-u-sm-10-60 control-group">
                            <select name="autoconfirm" id="autoconfirm" class="form-control input-sm">
                                <option value="Y">Yes</option>
                                <option value="N">No</option>
                            </select>
                        </div>
                    </div>
                    <div class="pure-g">
                        <div class="pure-u-sm-60-60">
                            <input type="file" title="选择文件" id="InboundUploadExcel" name="file" />
                            <input type="hidden" id="uploadKeyId" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-sm btn-info" id="modalUploadBtn">Upload</button>
                    <button type="button" class="btn btn-sm btn-danger" data-dismiss="modal" id="ModalClose">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div class="modal fade" id="EmptyReturnModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Upload Empty Return</h4>
            </div>
            <form name="EMPTY_EXCEL_UPLOAD_FROM" id="EMPTY_EXCEL_UPLOAD_FROM" method="post" enctype="multipart/form-data">
                <div class="modal-body">
                    <div class="pure-g">
                        <div class="pure-u-sm-60-60">
                            <input type="file" title="选择文件" id="InboundEmptyReturnUploadExcel" name="file" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-sm btn-info" id="modalUploadBtn">Upload</button>
                    <button type="button" class="btn btn-sm btn-danger" data-dismiss="modal" id="ModalClose">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>