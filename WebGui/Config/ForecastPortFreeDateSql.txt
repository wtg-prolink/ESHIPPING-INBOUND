drop trigger [UP_SMORD_FORECAST_BY_END_DATE]
drop trigger [dbo].[UP_SMORD_FORECAST_BY_DUE_DATE]

CREATE TRIGGER [dbo].[UP_SMORD_FORECAST_BY_END_DATE]
   ON  [dbo].[SMORD_FORECAST]
   AFTER INSERT,UPDATE
AS 
BEGIN
	DECLARE @Total INT,@Line INT = 1
	DECLARE @u_id nvarchar(50),@shipment_id nvarchar(20),@cntr_no nvarchar(20),@combine_det nvarchar(2),@showcombine_det nvarchar(1),@port_free_time int,
	@fact_free_time int,@con_free_time int,@lspno nvarchar(20)
	DECLARE @dem_due_date date,@det_due_date date,@sto_due_date date
	DECLARE @dep_date date,@arv_date date,@cmp nvarchar(10),@pod_cd nvarchar(5),@carrier nvarchar(20),@tran_type nvarchar(10),
			@eta date,@discharge_date date,@emp_pick_date date,@pickup_cdate date
	DECLARE @Table TABLE(ID INT IDENTITY(1,1),U_ID NVARCHAR(50),SHIPMENT_ID NVARCHAR(20),CNTR_NO NVARCHAR(20),
	PICKUP_CDATE DATE,EMPTY_TIME DATE,TRAN_TYPE NVARCHAR(10),CMP NVARCHAR(10),
	POD_CD NVARCHAR(5),CARRIER NVARCHAR(20),ETA DATE,DISCHARGE_DATE DATE,EMP_PICK_DATE DATE,ARV_DATE DATE,DEP_DATE DATE,LSP_NO NVARCHAR(20))
	if(UPDATE(EMPTY_TIME) OR UPDATE(PICKUP_CDATE))
	BEGIN
		INSERT INTO @Table SELECT  C.NEW_UID,I.SHIPMENT_ID,C.CNTR_NO,C.PICKUP_CDATE,C.EMPTY_TIME,I.TRAN_TYPE,I.CMP,I.POD_CD,I.CARRIER,I.ETA,C.DISCHARGE_DATE,C.EMP_PICK_DATE,
CASE WHEN I.ATA IS NULL THEN I.ETA ELSE I.ATA END,CASE WHEN I.ATD IS NULL THEN I.ETD ELSE I.ATD END,
(SELECT TOP 1 PARTY_NO FROM SMSMIPT PT WHERE PT.SHIPMENT_ID=I.SHIPMENT_ID AND PT.PARTY_TYPE='SP') AS LSP_NO
FROM inserted C LEFT JOIN SMSMI I ON C.SHIPMENT_ID=I.SHIPMENT_ID

		SELECT @Total = MAX(ID) FROM @Table        
		WHILE @Line <= @Total
		BEGIN
			SELECT @u_id=U_ID,@shipment_id=SHIPMENT_ID,@cntr_no=CNTR_NO,@tran_type=TRAN_TYPE,@cmp=CMP,@pod_cd=POD_CD,@carrier=CARRIER,
			@arv_date=ARV_DATE,@dep_date=DEP_DATE,
			@eta=ETA,@discharge_date=DISCHARGE_DATE,@emp_pick_date=EMP_PICK_DATE,@pickup_cdate=PICKUP_CDATE,@lspno=LSP_NO FROM @Table WHERE ID = @Line
			if (@tran_type IN ('F','R'))
			BEGIN
				SELECT @combine_det= COMBINE_DET,@port_free_time=PORT_FREE_TIME,@fact_free_time=FACT_FREE_TIME,@con_free_time=CON_FREE_TIME,@showcombine_det=SHOW_COMBINE_DET FROM GET_FREE_TIME(@dep_date,@arv_date,@cmp,@pod_cd,@carrier,@tran_type,@lspno)
				
				select @sto_due_date=STORAGE_DUE_DATE,@dem_due_date=DEMURRAGE_DUE_DATE,@det_due_date=DETENTION_DUE_DATE from GET_DUE_DATE(@fact_free_time,@port_free_time,@con_free_time,@eta,@discharge_date,@emp_pick_date,@pickup_cdate,@combine_det)
				
				UPDATE SMORD_FORECAST SET COMBINE_DET=@combine_det,SHOW_COMBINE_DET=@showcombine_det,PORT_FREE_TIME=@port_free_time,
				FACT_FREE_TIME=@fact_free_time,CON_FREE_TIME=@con_free_time,
				DEMURRAGE_DUE_DATE=@dem_due_date,DETENTION_DUE_DATE=@det_due_date,STORAGE_DUE_DATE=@sto_due_date,DEP_DATE=@dep_date,ARV_DATE=@arv_date
				WHERE NEW_UID = @u_id
			END
			SET @Line = @Line + 1
		END
	END
END
GO


CREATE TRIGGER [dbo].[UP_SMORD_FORECAST_BY_DUE_DATE]
   ON  [dbo].[SMORD_FORECAST]
   AFTER INSERT,UPDATE
AS 
BEGIN
	DECLARE @Table TABLE(ID INT IDENTITY(1,1),U_ID NVARCHAR(50),TRAN_TYPE NVARCHAR(1),PICKUP_CDATE DATE,
	EMPTY_TIME DATE,COMBINE_DET NVARCHAR(2),PORT_FREE_TIME INT,FACT_FREE_TIME INT, CON_FREE_TIME INT,
	DETENTION_DUE_DATE DATE,DEMURRAGE_DUE_DATE DATE,STORAGE_DUE_DATE DATE,CNT_TYPE NVARCHAR(10),CNTR_TYPE NVARCHAR(10),
	SHIPMENT_ID NVARCHAR(20),CNTR_NO NVARCHAR(20),STO_EXCEED_TIME INT,DEM_EXCEED_TIME INT, DET_EXCEED_TIME INT,
	CMP NVARCHAR(10),POD_CD NVARCHAR(5),CARRIER NVARCHAR(20),TERMINAL_CD NVARCHAR(30),FOB_AMT NUMERIC(18,2),CIF_AMT NUMERIC(18,2),ARV_DATE DATE,DEP_DATE DATE,LSP_NO NVARCHAR(20))
	DECLARE @tran_type nvarchar(1),@cnt_type nvarchar(10),@pick_cdate date,@empty_time date,
			@u_id nvarchar(50),@shipment_id nvarchar(20),@cntr_no nvarchar(20),@cmp nvarchar(10),
			@pod_cd nvarchar(10),@carrier nvarchar(20),@terminal_cd nvarchar(30),
			@fob_amt numeric(18,2),@cif_amt numeric(18,2),@dep_date date,@arv_date date,
			@storage_due_date date,@demurrage_due_date date,@detention_due_date date,
			@port_free_time int,@fact_free_time int,@con_free_time int,
			@combine_det nvarchar(2),@det_exceed_time INT,@dem_exceed_time INT,@sto_exceed_time INT,
			@dem_amt_forecast NUMERIC(18,2),@det_amt_forecast NUMERIC(18,2),@sto_amt_forecast NUMERIC(18,2),
			@dem_cur_forecast nvarchar(3),@det_cur_forecast nvarchar(3),@sto_cur_forecast nvarchar(3),
			@lspno nvarchar(20)
	DECLARE @Total INT,@Line INT = 1
    if(UPDATE(DETENTION_DUE_DATE) OR UPDATE(STORAGE_DUE_DATE) OR UPDATE(DEMURRAGE_DUE_DATE))
	BEGIN
		INSERT INTO @Table SELECT C.NEW_UID,I.TRAN_TYPE,C.PICKUP_CDATE,C.EMPTY_TIME,I.COMBINE_DET,I.PORT_FREE_TIME,I.FACT_FREE_TIME,I.CON_FREE_TIME,C.DETENTION_DUE_DATE,C.DEMURRAGE_DUE_DATE,C.STORAGE_DUE_DATE,
(SELECT TOP 1 CHG_CD FROM ECREFFEE WHERE CHG_DESCP=C.CNTR_TYPE AND (CMP='*' OR CMP=C.CMP)) AS CNT_TYPE,C.CNTR_TYPE,I.SHIPMENT_ID,C.CNTR_NO,
CASE WHEN C.STORAGE_DUE_DATE IS NULL THEN NULL WHEN C.PICKUP_CDATE IS NULL THEN DATEDIFF(DAY,C.STORAGE_DUE_DATE,GETDATE()) ELSE DATEDIFF(DAY,C.STORAGE_DUE_DATE,C.PICKUP_CDATE) END,
CASE WHEN C.DEMURRAGE_DUE_DATE IS NULL THEN NULL WHEN (C.PICKUP_CDATE IS NULL AND (I.COMBINE_DET ='NN' OR I.COMBINE_DET IS NULL)) OR (C.EMPTY_TIME IS NULL AND I.COMBINE_DET IN ('UY','UN','YY')) THEN DATEDIFF(DAY,C.DEMURRAGE_DUE_DATE,GETDATE()) WHEN I.COMBINE_DET='NN' OR I.COMBINE_DET IS NULL THEN DATEDIFF(DAY,C.DEMURRAGE_DUE_DATE,C.PICKUP_CDATE) ELSE DATEDIFF(DAY,C.DEMURRAGE_DUE_DATE,C.EMPTY_TIME) END AS DEM_EXCEED_TIME,
CASE WHEN C.DETENTION_DUE_DATE IS NULL THEN NULL WHEN C.EMPTY_TIME IS NULL THEN DATEDIFF(DAY,C.DETENTION_DUE_DATE,GETDATE()) ELSE DATEDIFF(DAY,C.DETENTION_DUE_DATE,C.EMPTY_TIME) END,
I.CMP,I.POD_CD,I.CARRIER,I.TERMINAL_CD,ISNULL(C.FOB_AMT,0),ISNULL(C.CIF_AMT,0),CASE WHEN I.ATA IS NULL THEN I.ETA ELSE I.ATA END,CASE WHEN I.ATD IS NULL THEN I.ETD ELSE I.ATD END,
(SELECT TOP 1 PARTY_NO FROM SMSMIPT PT WHERE PT.SHIPMENT_ID=I.SHIPMENT_ID AND PT.PARTY_TYPE='SP') AS LSP_NO
		FROM inserted C LEFT JOIN SMSMI I ON C.SHIPMENT_ID=I.SHIPMENT_ID
		SELECT @Total = MAX(ID) FROM @Table
        
		WHILE @Line <= @Total
		BEGIN
			select @u_id=U_ID, @tran_type=TRAN_TYPE,@pick_cdate=PICKUP_CDATE,@empty_time=EMPTY_TIME,
		@combine_det=COMBINE_DET,@port_free_time=PORT_FREE_TIME,@fact_free_time=FACT_FREE_TIME,@con_free_time=CON_FREE_TIME,
		@detention_due_date=DETENTION_DUE_DATE,@cnt_type=CASE WHEN CNT_TYPE IS NULL THEN CNTR_TYPE ELSE CNT_TYPE END,
		@demurrage_due_date=DEMURRAGE_DUE_DATE,@storage_due_date=STORAGE_DUE_DATE,@det_exceed_time=DET_EXCEED_TIME,
		@dem_exceed_time=DEM_EXCEED_TIME,@sto_exceed_time=STO_EXCEED_TIME,@cmp=CMP,@pod_cd=POD_CD,@carrier=CARRIER,
		@terminal_cd=TERMINAL_CD,@fob_amt=FOB_AMT,@cif_amt=CIF_AMT,@dep_date=DEP_DATE,@arv_date=ARV_DATE,@cntr_no=CNTR_NO,
		@fact_free_time=FACT_FREE_TIME,@port_free_time=PORT_FREE_TIME,@con_free_time=CON_FREE_TIME,@shipment_id=SHIPMENT_ID,@lspno=LSP_NO from @Table WHERE ID = @Line
			if (@tran_type IN ('F','R'))
			BEGIN
				DECLARE @det_from date=null,@det_to date=null,
				@dem_from date=null,@dem_to date=null,
				@sto_from date=null,@sto_to date=null
				if(@sto_exceed_time>0)
				BEGIN
					SET @sto_from = dateadd(day,1,@storage_due_date)
					SET @sto_to = @pick_cdate
					if(@sto_to is null)
						SET @sto_to = GETDATE()
					SELECT @sto_amt_forecast=AMT,@sto_cur_forecast=CUR FROM GET_STO_FORECAST_FREE(@cmp,@pod_cd,@carrier,@tran_type,@cnt_type,@terminal_cd,@sto_exceed_time+@fact_free_time,@fob_amt,@cif_amt,@dep_date,@arv_date,@lspno)
				END
				if(@dem_exceed_time>0)
				BEGIN
					SET @dem_from = dateadd(day,1,@demurrage_due_date)
					SET @dem_to = @pick_cdate
					if(@combine_det IN ('UY','UN','YY'))
					    SET @dem_to = @empty_time
					if(@dem_to is null)
						SET @dem_to = GETDATE()
					SELECT @dem_amt_forecast=AMT,@dem_cur_forecast=CUR FROM GET_DEM_FORECAST_FREE(@cmp,@pod_cd,@carrier,@tran_type,@cnt_type,@terminal_cd,@dem_exceed_time+@port_free_time,@fob_amt,@cif_amt,@dep_date,@arv_date,@lspno)
				END

				if(@det_exceed_time>0)
				BEGIN
					SET @det_from = dateadd(day,1,@detention_due_date)
					SET @det_to = @empty_time
					if(@det_to is null)
						SET @det_to = GETDATE()
					SELECT @det_amt_forecast=AMT,@det_cur_forecast=CUR FROM GET_DET_FORECAST_FREE(@cmp,@pod_cd,@carrier,@tran_type,@cnt_type,@terminal_cd,@det_exceed_time+@con_free_time,@fob_amt,@cif_amt,@dep_date,@arv_date,@lspno)
				END

				if (UPDATE(STORAGE_DUE_DATE) OR UPDATE(DEMURRAGE_DUE_DATE) OR UPDATE(DETENTION_DUE_DATE))
				BEGIN
					UPDATE SMORD_FORECAST SET STO_EXCEED_TIME=@sto_exceed_time,STO_EST_FROM=@sto_from,STO_EST_TO=@sto_to,
					DEM_EXCEED_TIME=@dem_exceed_time,DEM_EST_FROM=@dem_from,DEM_EST_TO=@dem_to,
					DET_EXCEED_TIME=@det_exceed_time,DET_EST_FROM=@det_from,DET_EST_TO=@det_to,
					DET_AMT_FORECAST=@det_amt_forecast,DET_CUR_FORECAST=@det_cur_forecast,
					DEM_AMT_FORECAST=@dem_amt_forecast,DEM_CUR_FORECAST=@dem_cur_forecast,
					STO_AMT_FORECAST=@sto_amt_forecast,STO_CUR_FORECAST=@sto_cur_forecast WHERE NEW_UID = @u_id
				END
			END
			SET @Line = @Line + 1
		END
	END
END
GO