<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<StiSerializer version="1.02" type="Net" application="StiReport">
  <Dictionary Ref="1" type="Dictionary" isKey="true">
    <BusinessObjects isList="true" count="0" />
    <Databases isList="true" count="1">
      <data Ref="2" type="Stimulsoft.Report.Dictionary.StiXmlDatabase" isKey="true">
        <Alias>data</Alias>
        <Name>data</Name>
        <PathData>C:\Users\dean\Desktop\date\Data.xml</PathData>
        <PathSchema>C:\Users\dean\Desktop\date\Schemas.xml</PathSchema>
      </data>
    </Databases>
    <DataSources isList="true" count="5">
      <SMSMI Ref="3" type="DataTableSource" isKey="true">
        <Alias>SMSMI</Alias>
        <Columns isList="true" count="196">
          <value>U_ID,System.String</value>
          <value>LIGHT,System.String</value>
          <value>MONTH,System.String</value>
          <value>GROUP_ID,System.String</value>
          <value>CMP,System.String</value>
          <value>STN,System.String</value>
          <value>DEP,System.String</value>
          <value>SHIPMENT_ID,System.String</value>
          <value>TRAN_TYPE,System.String</value>
          <value>STATUS,System.String</value>
          <value>DN_ETD,System.DateTime</value>
          <value>COMBINE_INFO,System.String</value>
          <value>MARKS,System.String</value>
          <value>GOODS,System.String</value>
          <value>LGOODS,System.String</value>
          <value>BL_RMK,System.String</value>
          <value>INSTRUCTION,System.String</value>
          <value>BOOKING_INFO,System.String</value>
          <value>ABNORMAL_RMK,System.String</value>
          <value>LSP_ABNORMAL_RMK,System.String</value>
          <value>PRODUCTION_DATE,System.DateTime</value>
          <value>PRIORITY,System.Int32</value>
          <value>PORT_FREE_TIME,System.Int32</value>
          <value>FACT_FREE_TIME,System.Int32</value>
          <value>FREIGHT_CUR,System.String</value>
          <value>FREIGHT_AMT,System.Decimal</value>
          <value>CUR,System.String</value>
          <value>GVALUE,System.Decimal</value>
          <value>CNT20,System.Decimal</value>
          <value>CNT40,System.Decimal</value>
          <value>CNT40HQ,System.Decimal</value>
          <value>CNT_TYPE,System.String</value>
          <value>CNT_NUMBER,System.Decimal</value>
          <value>INSURANCE_AMT,System.Decimal</value>
          <value>PKG_NUM,System.Decimal</value>
          <value>PKG_UNIT,System.String</value>
          <value>PKG_UNIT_DESC,System.String</value>
          <value>GW,System.Decimal</value>
          <value>GWU,System.String</value>
          <value>CBM,System.Decimal</value>
          <value>WEEKLY,System.Decimal</value>
          <value>YEAR,System.Decimal</value>
          <value>TRADE_TERM,System.String</value>
          <value>TRADETERM_DESCP,System.String</value>
          <value>INCOTERM_CD,System.String</value>
          <value>INCOTERM_DESCP,System.String</value>
          <value>LOADING_FROM,System.String</value>
          <value>LOADING_TO,System.String</value>
          <value>PICKUP_CDATE,System.DateTime</value>
          <value>CARRIER,System.String</value>
          <value>CARRIER_NM,System.String</value>
          <value>SCAC_CD,System.String</value>
          <value>FRT_TERM,System.String</value>
          <value>CON_FREE_TIME,System.Int32</value>
          <value>MASTER_NO,System.String</value>
          <value>HOUSE_NO,System.String</value>
          <value>SVC_CONTACT,System.String</value>
          <value>WH_TIME,System.DateTime</value>
          <value>POR_CD,System.String</value>
          <value>POR_CNTY,System.String</value>
          <value>POR_NAME,System.String</value>
          <value>IB_WINDOW,System.String</value>
          <value>FACT_TIME,System.DateTime</value>
          <value>POL_CD,System.String</value>
          <value>POL_CNTY,System.String</value>
          <value>POL_NAME,System.String</value>
          <value>PORT_ETA,System.DateTime</value>
          <value>EMPTY_TIME,System.DateTime</value>
          <value>POD_CD,System.String</value>
          <value>POD_CNTY,System.String</value>
          <value>POD_NAME,System.String</value>
          <value>PORT_ATA,System.DateTime</value>
          <value>BACK_LOCATION,System.String</value>
          <value>DEST_CD,System.String</value>
          <value>DEST_CNTY,System.String</value>
          <value>DEST_NAME,System.String</value>
          <value>PORT_RLS_DATE,System.DateTime</value>
          <value>WM_CUT_DATE,System.DateTime</value>
          <value>VESSEL1,System.String</value>
          <value>VOYAGE1,System.String</value>
          <value>ETD1,System.DateTime</value>
          <value>ETA1,System.DateTime</value>
          <value>VESSEL2,System.String</value>
          <value>VOYAGE2,System.String</value>
          <value>ETD2,System.DateTime</value>
          <value>ETA2,System.DateTime</value>
          <value>VESSEL3,System.String</value>
          <value>VOYAGE3,System.String</value>
          <value>ETD3,System.DateTime</value>
          <value>ETA3,System.DateTime</value>
          <value>VESSEL4,System.String</value>
          <value>VOYAGE4,System.String</value>
          <value>ETD4,System.DateTime</value>
          <value>ETA4,System.DateTime</value>
          <value>ETD,System.DateTime</value>
          <value>ETA,System.DateTime</value>
          <value>ATP,System.DateTime</value>
          <value>ATD,System.DateTime</value>
          <value>ATA,System.DateTime</value>
          <value>OEXPORTER,System.String</value>
          <value>OEXPORTER_NM,System.String</value>
          <value>OEXPORTER_ADDR,System.String</value>
          <value>OIMPORTER,System.String</value>
          <value>OIMPORTER_NM,System.String</value>
          <value>OIMPORTER_ADDR,System.String</value>
          <value>IMPORT_NO,System.String</value>
          <value>DEC_NO,System.String</value>
          <value>CER_NO,System.String</value>
          <value>DEC_DATE,System.DateTime</value>
          <value>REL_DATE,System.DateTime</value>
          <value>INSPECTION,System.String</value>
          <value>DEC_CUST,System.String</value>
          <value>DEC_REPLY,System.String</value>
          <value>TC_IMPORTER,System.String</value>
          <value>TC_IMPORTER_NM,System.String</value>
          <value>TC_IMPORTER_ADDR,System.String</value>
          <value>TC_IMPORT_NO,System.String</value>
          <value>TC_DEC_NO,System.String</value>
          <value>TC_CER_NO,System.String</value>
          <value>TC_DEC_DATE,System.DateTime</value>
          <value>TC_REL_DATE,System.DateTime</value>
          <value>TC_INSPECTION,System.String</value>
          <value>TC_DEC_CUST,System.String</value>
          <value>TC_DEC_REPLY,System.String</value>
          <value>CREATE_DATE,System.DateTime</value>
          <value>CREATE_BY,System.String</value>
          <value>MODIFY_DATE,System.DateTime</value>
          <value>MODIFY_BY,System.String</value>
          <value>AIRLINE_CD,System.String</value>
          <value>AIRLINE_NM,System.String</value>
          <value>QTY,System.Int32</value>
          <value>QTYU,System.String</value>
          <value>VW,System.Decimal</value>
          <value>OF_COST,System.Decimal</value>
          <value>TRUCK_COST,System.Decimal</value>
          <value>CW,System.Decimal</value>
          <value>HORN,System.String</value>
          <value>BATTERY,System.String</value>
          <value>TRUCK_CD,System.String</value>
          <value>O_LOCATION,System.String</value>
          <value>CSTATUS,System.String</value>
          <value>BSTATUS,System.String</value>
          <value>DN_NO,System.String</value>
          <value>LOT_NO,System.String</value>
          <value>BL_WIN,System.String</value>
          <value>TERMINAL_CD,System.String</value>
          <value>TERMINAL_NM,System.String</value>
          <value>HS_CODE,System.String</value>
          <value>HS_CODE_NO,System.String</value>
          <value>TC_HS_CODE,System.String</value>
          <value>TC_HS_CODE_NO,System.String</value>
          <value>PRODUCT_TYPE,System.String</value>
          <value>CONTAINER_YARD_CD,System.String</value>
          <value>CONTAINER_YARD_NM,System.String</value>
          <value>EXTRA_SRV,System.String</value>
          <value>EXTRA_MEMO,System.String</value>
          <value>FORK,System.Decimal</value>
          <value>O_UID,System.String</value>
          <value>POL1,System.String</value>
          <value>POL_NM1,System.String</value>
          <value>POD1,System.String</value>
          <value>POD_NM1,System.String</value>
          <value>TRAN_TYPE1,System.String</value>
          <value>TRUCKER1,System.String</value>
          <value>TRUCKER_NM1,System.String</value>
          <value>POL2,System.String</value>
          <value>POL_NM2,System.String</value>
          <value>POD2,System.String</value>
          <value>POD_NM2,System.String</value>
          <value>TRAN_TYPE2,System.String</value>
          <value>TRUCKER2,System.String</value>
          <value>TRUCKER_NM2,System.String</value>
          <value>POL3,System.String</value>
          <value>POL_NM3,System.String</value>
          <value>POD3,System.String</value>
          <value>POD_NM3,System.String</value>
          <value>TRAN_TYPE3,System.String</value>
          <value>TRUCKER3,System.String</value>
          <value>TRUCKER_NM3,System.String</value>
          <value>T_ATD1,System.DateTime</value>
          <value>T_ETD1,System.DateTime</value>
          <value>T_ETA1,System.DateTime</value>
          <value>T_ATA1,System.DateTime</value>
          <value>T_ATD2,System.DateTime</value>
          <value>T_ETD2,System.DateTime</value>
          <value>T_ETA2,System.DateTime</value>
          <value>T_ATA2,System.DateTime</value>
          <value>T_ATD3,System.DateTime</value>
          <value>T_ETD3,System.DateTime</value>
          <value>T_ETA3,System.DateTime</value>
          <value>T_ATA3,System.DateTime</value>
          <value>POD_MDATE,System.DateTime</value>
          <value>HTS_CODE,System.String</value>
          <value>COUNTRY,System.String</value>
          <value>DEST_REGION,System.String</value>
          <value>CNTR_INFO,System.String</value>
        </Columns>
        <Dictionary isRef="1" />
        <Name>SMSMI</Name>
        <NameInSource>data.SMSMI</NameInSource>
      </SMSMI>
      <SMRV Ref="4" type="DataTableSource" isKey="true">
        <Alias>SMRV</Alias>
        <Columns isList="true" count="125">
          <value>U_ID,System.Guid</value>
          <value>RESERVE_NO,System.String</value>
          <value>STATUS,System.String</value>
          <value>GROUP_ID,System.String</value>
          <value>CMP,System.String</value>
          <value>DEP,System.String</value>
          <value>WS_CD,System.String</value>
          <value>REF_GATE,System.String</value>
          <value>CALL_DATE,System.DateTime</value>
          <value>USE_DATE,System.DateTime</value>
          <value>RESERVE_DATE,System.DateTime</value>
          <value>RESERVE_FROM,System.Decimal</value>
          <value>HOUR,System.Decimal</value>
          <value>CNTR_NO,System.String</value>
          <value>TRUCKER,System.String</value>
          <value>TRUCK_NO,System.String</value>
          <value>DRIVER,System.String</value>
          <value>TEL,System.String</value>
          <value>CREATE_CMP,System.String</value>
          <value>CREATE_DEP,System.String</value>
          <value>CREATE_EXT,System.String</value>
          <value>CREATE_BY,System.String</value>
          <value>CREATE_DATE,System.DateTime</value>
          <value>ORDER_BY,System.String</value>
          <value>ORDER_DATE,System.DateTime</value>
          <value>CONFIRM_BY,System.String</value>
          <value>CONFIRM_DATE,System.DateTime</value>
          <value>GATE_NO,System.String</value>
          <value>CNTY_TYPE,System.String</value>
          <value>SEAL_NO1,System.String</value>
          <value>SEAL_NO2,System.String</value>
          <value>CUTPORT_DATE,System.DateTime</value>
          <value>PICK_DATE,System.DateTime</value>
          <value>SEAL_DATE,System.DateTime</value>
          <value>APORT_DATE,System.DateTime</value>
          <value>ATD,System.DateTime</value>
          <value>CARRIER,System.String</value>
          <value>CARRIER_NM,System.String</value>
          <value>YARD,System.String</value>
          <value>YARD_NM,System.String</value>
          <value>INYARD_DATE,System.DateTime</value>
          <value>OUTYARD_DATE,System.DateTime</value>
          <value>REMARK,System.String</value>
          <value>MOVE_NUMBER,System.String</value>
          <value>DN_NO,System.String</value>
          <value>RESERVE_TDATE,System.DateTime</value>
          <value>PRODUCT_LINE,System.String</value>
          <value>SHIPMENT_INFO,System.String</value>
          <value>RESERVE_TO,System.Decimal</value>
          <value>RESERVE_HOUR,System.Decimal</value>
          <value>TEMP_GATENO,System.String</value>
          <value>SEAL_BY,System.String</value>
          <value>IN_BY,System.String</value>
          <value>OUT_BY,System.String</value>
          <value>IN_DATE,System.DateTime</value>
          <value>OUT_DATE,System.DateTime</value>
          <value>TRUCK_CNTRNO,System.String</value>
          <value>TRUCK_SEALNO,System.String</value>
          <value>S_CODE,System.String</value>
          <value>TEMP_WSCD,System.String</value>
          <value>TEMP_RDATE,System.DateTime</value>
          <value>TEMP_RFROM,System.Decimal</value>
          <value>TEMP_RH,System.Decimal</value>
          <value>SHIPMENT_ID,System.String</value>
          <value>LTRUCK_NO,System.String</value>
          <value>LDRIVER,System.String</value>
          <value>LTEL,System.String</value>
          <value>QTY,System.Decimal</value>
          <value>QTYU,System.String</value>
          <value>NW,System.Decimal</value>
          <value>NWU,System.String</value>
          <value>GW,System.Decimal</value>
          <value>GWU,System.String</value>
          <value>CBM,System.Decimal</value>
          <value>LODING_FROM,System.String</value>
          <value>LODING_TO,System.String</value>
          <value>TRUCKER_NM,System.String</value>
          <value>IS_BATCH,System.String</value>
          <value>TRAN_TYPE,System.String</value>
          <value>CARGO_TYPE,System.String</value>
          <value>CUT_PORT_DATE,System.DateTime</value>
          <value>CNT_NUMBER,System.Decimal</value>
          <value>CNT_TYPE,System.String</value>
          <value>TARE_WEIGHT,System.Decimal</value>
          <value>TWU,System.String</value>
          <value>TTL_VGM,System.Decimal</value>
          <value>DRIVER_ID,System.String</value>
          <value>PORT_DATE,System.DateTime</value>
          <value>BAT_NO,System.String</value>
          <value>LDRIVER_ID,System.String</value>
          <value>EPT_IDATE,System.DateTime</value>
          <value>EPT_ODATE,System.DateTime</value>
          <value>PUT_DATE,System.DateTime</value>
          <value>DIM,System.String</value>
          <value>SMCREATE_BY,System.String</value>
          <value>MF_NO,System.String</value>
          <value>CNTR_BE_DAY,System.Decimal</value>
          <value>FAC_HOLD_DAY,System.Decimal</value>
          <value>CNTR_INFAC_DAY,System.Decimal</value>
          <value>PLANT,System.String</value>
          <value>LOT_NO,System.String</value>
          <value>RV_TYPE,System.String</value>
          <value>CAR_TYPE,System.String</value>
          <value>TRS_MODE,System.String</value>
          <value>CANCEL_DATE,System.DateTime</value>
          <value>PICK_AREA,System.String</value>
          <value>PICK_AREA_NM,System.String</value>
          <value>DLV_AREA,System.String</value>
          <value>DLV_AREA_NM,System.String</value>
          <value>GATEIN_DATE,System.DateTime</value>
          <value>DLV_ADDR,System.String</value>
          <value>ADDR_CODE,System.String</value>
          <value>OUTER_FLAG,System.String</value>
          <value>ARRIVAL_DATE,System.DateTime</value>
          <value>TRAIN_FLIGHT,System.String</value>
          <value>ORD_NO,System.String</value>
          <value>CALL_TYPE,System.String</value>
          <value>ORD_INFO,System.String</value>
          <value>TRUCK_RMK,System.String</value>
          <value>WS_RMK,System.String</value>
          <value>NEW_SEAL,System.String</value>
          <value>QUOT_NO,System.String</value>
          <value>DEC_INFO,System.String</value>
          <value>NEW_CNTRNO,System.String</value>
          <value>NIGHT_MOVE,System.Decimal</value>
        </Columns>
        <Dictionary isRef="1" />
        <Name>SMRV</Name>
        <NameInSource>data.SMRV</NameInSource>
      </SMRV>
      <SMBID Ref="5" type="DataTableSource" isKey="true">
        <Alias>SMBID</Alias>
        <Columns isList="true" count="70">
          <value>U_ID,System.Guid</value>
          <value>SHIPMENT_ID,System.String</value>
          <value>DEBIT_NO,System.String</value>
          <value>VAT_NO,System.String</value>
          <value>LSP_NO,System.String</value>
          <value>BILL_TO,System.String</value>
          <value>BL_NO,System.String</value>
          <value>STATUS,System.String</value>
          <value>CHG_CD,System.String</value>
          <value>CHG_DESCP,System.String</value>
          <value>QCUR,System.String</value>
          <value>QUNIT_PRICE,System.Decimal</value>
          <value>QCHG_UNIT,System.String</value>
          <value>QQTY,System.Decimal</value>
          <value>QAMT,System.Decimal</value>
          <value>QTAX,System.Decimal</value>
          <value>CUR,System.String</value>
          <value>UNIT_PRICE,System.Decimal</value>
          <value>CHG_UNIT,System.String</value>
          <value>QTY,System.Decimal</value>
          <value>BAMT,System.Decimal</value>
          <value>TAX,System.Decimal</value>
          <value>REMARK,System.String</value>
          <value>CHECK_DESCP,System.String</value>
          <value>COST_CENTER,System.String</value>
          <value>PROFIT_CENTER,System.String</value>
          <value>U_FID,System.Guid</value>
          <value>QUOT_ID,System.Guid</value>
          <value>PARTY_TYPE,System.String</value>
          <value>QTYU,System.String</value>
          <value>EX_RATE,System.Decimal</value>
          <value>LAMT,System.Decimal</value>
          <value>QT_DATA,System.String</value>
          <value>DEBIT_DATE,System.DateTime</value>
          <value>QEX_RATE,System.Decimal</value>
          <value>LSP_NM,System.String</value>
          <value>BILL_NM,System.String</value>
          <value>CHG_TYPE,System.String</value>
          <value>CREATE_DATE,System.DateTime</value>
          <value>CREATE_BY,System.String</value>
          <value>MODIFY_DATE,System.DateTime</value>
          <value>MODIFY_BY,System.String</value>
          <value>COST_TONM,System.String</value>
          <value>QUOT_NO,System.String</value>
          <value>RFQ_NO,System.String</value>
          <value>QLAMT,System.Decimal</value>
          <value>GROUP_ID,System.String</value>
          <value>CMP,System.String</value>
          <value>STN,System.String</value>
          <value>IS_SHARE,System.String</value>
          <value>DEBIT_TO,System.String</value>
          <value>DEBIT_NM,System.String</value>
          <value>CNTR_STD_QTY,System.Decimal</value>
          <value>IPART_NO,System.String</value>
          <value>FSTATUS,System.String</value>
          <value>DOWNLOAD_USER,System.String</value>
          <value>DOWNLOAD_TIME,System.DateTime</value>
          <value>BI_REMARK,System.String</value>
          <value>TRAN_TYPE,System.String</value>
          <value>APPROVE_BY,System.String</value>
          <value>APPROVE_DATE,System.DateTime</value>
          <value>BOOKING_BY,System.String</value>
          <value>APPROVE_STATUS,System.String</value>
          <value>UNAPPROVE_MSG,System.String</value>
          <value>UPLOAD_USER,System.String</value>
          <value>UPLOAD_TIME,System.DateTime</value>
          <value>VOID_USER,System.String</value>
          <value>VOID_TIME,System.DateTime</value>
          <value>UNAPPROVE_DESCP,System.String</value>
          <value>DN_NO,System.String</value>
        </Columns>
        <Dictionary isRef="1" />
        <Name>SMBID</Name>
        <NameInSource>data.SMBID</NameInSource>
      </SMBID>
      <SMRCNTR Ref="6" type="DataTableSource" isKey="true">
        <Alias>SMRCNTR</Alias>
        <Columns isList="true" count="46">
          <value>U_ID,System.String</value>
          <value>SHIPMENT_ID,System.String</value>
          <value>CMP,System.String</value>
          <value>CNTR_NO,System.String</value>
          <value>CNTR_TYPE,System.String</value>
          <value>SEAL_NO1,System.String</value>
          <value>SEAL_NO2,System.String</value>
          <value>DN_NO,System.String</value>
          <value>DIVISION_DESCP,System.String</value>
          <value>QTY,System.Int32</value>
          <value>QTYU,System.String</value>
          <value>GW,System.Decimal</value>
          <value>GWU,System.String</value>
          <value>CBM,System.Decimal</value>
          <value>IMPORT_NO,System.String</value>
          <value>DEC_NO,System.String</value>
          <value>CER_NO,System.String</value>
          <value>DEC_DATE,System.DateTime</value>
          <value>REL_DATE,System.DateTime</value>
          <value>INSPECTION,System.String</value>
          <value>DEC_CUST,System.String</value>
          <value>DEC_REPLY,System.String</value>
          <value>TC_IMPORT_NO,System.String</value>
          <value>TC_DEC_NO,System.String</value>
          <value>TC_CER_NO,System.String</value>
          <value>TC_DEC_DATE,System.DateTime</value>
          <value>TC_REL_DATE,System.DateTime</value>
          <value>TC_INSPECTION,System.String</value>
          <value>TC_DEC_CUST,System.String</value>
          <value>TC_DEC_REPLY,System.String</value>
          <value>RESERVE_NO,System.String</value>
          <value>DLV_AREA,System.String</value>
          <value>DLV_AREA_NM,System.String</value>
          <value>ADDR_CODE,System.String</value>
          <value>DLV_ADDR,System.String</value>
          <value>ORD_NO,System.String</value>
          <value>PICKUP_DATE,System.DateTime</value>
          <value>ARRIVAL_DATE,System.DateTime</value>
          <value>WS_CD,System.String</value>
          <value>LOT_NO,System.String</value>
          <value>PICK_AREA,System.String</value>
          <value>PICK_AREA_NM,System.String</value>
          <value>CANCEL_NO,System.String</value>
          <value>GROUP_ID,System.String</value>
          <value>STN,System.String</value>
          <value>DEP,System.String</value>
        </Columns>
        <Dictionary isRef="1" />
        <Name>SMRCNTR</Name>
        <NameInSource>data.SMRCNTR</NameInSource>
      </SMRCNTR>
      <SMRDN Ref="7" type="DataTableSource" isKey="true">
        <Alias>SMRDN</Alias>
        <Columns isList="true" count="53">
          <value>U_ID,System.String</value>
          <value>GROUP_ID,System.String</value>
          <value>CMP,System.String</value>
          <value>STN,System.String</value>
          <value>DEP,System.String</value>
          <value>SHIPMENT_ID,System.String</value>
          <value>DN_NO,System.String</value>
          <value>INV_NO,System.String</value>
          <value>NW,System.Decimal</value>
          <value>GW,System.Decimal</value>
          <value>GWU,System.String</value>
          <value>CBM,System.Decimal</value>
          <value>CBMU,System.String</value>
          <value>QTY,System.Decimal</value>
          <value>QTYU,System.String</value>
          <value>PKG_NUM,System.Decimal</value>
          <value>PKG_UNIT,System.String</value>
          <value>PKG_UNIT_DESC,System.String</value>
          <value>CNT20,System.Decimal</value>
          <value>CNT40,System.Decimal</value>
          <value>CNT40HQ,System.Decimal</value>
          <value>OTH_CNT_TYPE,System.String</value>
          <value>OTH_CNT_NUM,System.Decimal</value>
          <value>IMPORT_NO,System.String</value>
          <value>DEC_NO,System.String</value>
          <value>CER_NO,System.String</value>
          <value>DEC_DATE,System.DateTime</value>
          <value>REL_DATE,System.DateTime</value>
          <value>INSPECTION,System.String</value>
          <value>DEC_CUST,System.String</value>
          <value>DEC_REPLY,System.String</value>
          <value>TC_IMPORT_NO,System.String</value>
          <value>TC_DEC_NO,System.String</value>
          <value>TC_CER_NO,System.String</value>
          <value>TC_DEC_DATE,System.DateTime</value>
          <value>TC_REL_DATE,System.DateTime</value>
          <value>TC_INSPECTION,System.String</value>
          <value>TC_DEC_CUST,System.String</value>
          <value>TC_DEC_REPLY,System.String</value>
          <value>DLV_AREA,System.String</value>
          <value>DLV_AREA_NM,System.String</value>
          <value>ADDR_CODE,System.String</value>
          <value>DLV_ADDR,System.String</value>
          <value>RESERVE_NO,System.String</value>
          <value>WS_CD,System.String</value>
          <value>PICKUP_DATE,System.DateTime</value>
          <value>ARRIVAL_DATE,System.DateTime</value>
          <value>ORD_NO,System.String</value>
          <value>LOT_NO,System.String</value>
          <value>ADD_POINT,System.String</value>
          <value>PICK_AREA,System.String</value>
          <value>PICK_AREA_NM,System.String</value>
          <value>CANCEL_NO,System.String</value>
        </Columns>
        <Dictionary isRef="1" />
        <Name>SMRDN</Name>
        <NameInSource>data.SMRDN</NameInSource>
      </SMRDN>
    </DataSources>
    <Relations isList="true" count="0" />
    <Report isRef="0" />
    <Variables isList="true" count="0" />
  </Dictionary>
  <EngineVersion>EngineV2</EngineVersion>
  <GlobalizationStrings isList="true" count="0" />
  <MetaTags isList="true" count="0" />
  <Pages isList="true" count="3">
    <Page1 Ref="8" type="Page" isKey="true">
      <Border>None;Black;2;Solid;False;4;Black</Border>
      <Brush>Transparent</Brush>
      <Components isList="true" count="3">
        <GroupHeaderBand1 Ref="9" type="GroupHeaderBand" isKey="true">
          <Brush>Transparent</Brush>
          <ClientRectangle>0,0.4,19,7.6</ClientRectangle>
          <Components isList="true" count="21">
            <Text1 Ref="10" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>0,0.2,19,0.8</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,14</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text1</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>Transportation Order {SMRV.RESERVE_NO}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text1>
            <Text2 Ref="11" type="Text" isKey="true">
              <Border>Top, Left, Right;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,1,9.5,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text2</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>EKSPORTER</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
            </Text2>
            <Text3 Ref="12" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>9.5,1,9.5,1.8</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text3</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>IMPORTER</Text>
              <TextBrush>Black</TextBrush>
            </Text3>
            <Text4 Ref="13" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,2.8,9.5,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text4</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>PLACE OF PICK UP</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text4>
            <Text5 Ref="14" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>9.5,2.8,9.5,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text5</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>PLACE OF DELIVERY</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text5>
            <Text6 Ref="15" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,3.3,9.5,1.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text6</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>{SMRV.PICK_AREA}
{SMRV.PICK_AREA_NM}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
            </Text6>
            <Text7 Ref="16" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>9.5,3.3,9.5,1.6</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <Guid>9b9f9ea2fff84f778e5f632577c517a8</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text7</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>{IIF(SMSMI.TRAN_TYPE=="F"||SMSMI.TRAN_TYPE=="R",SMRCNTR.DLV_AREA,SMRV.DLV_AREA)}
{IIF(SMSMI.TRAN_TYPE=="F"||SMSMI.TRAN_TYPE=="R",SMRCNTR.DLV_AREA_NM,SMRV.DLV_AREA_NM)}
{IIF(SMSMI.TRAN_TYPE=="F"||SMSMI.TRAN_TYPE=="R",SMRCNTR.DLV_ADDR,GetAddr())}{GetAddr()}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
            </Text7>
            <Text8 Ref="17" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,4.9,9.5,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text8</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>DATE / HOUR OF PICK UP</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text8>
            <Text9 Ref="18" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>9.5,4.9,9.5,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text9</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>DATE / HOUR OF DELIVERY</Text>
              <TextBrush>Black</TextBrush>
              <VertAlignment>Center</VertAlignment>
            </Text9>
            <Text10 Ref="19" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,5.4,9.5,0.7</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <Guid>071f1d8cd8e64d6a9d3bfe70c05cd653</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text10</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>{Format("{0:yyyy/MM/dd}", SMRV.USE_DATE)}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text10>
            <Text11 Ref="20" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>9.5,5.4,9.5,0.7</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <Guid>7b79872bf5024e6cad111d6e9d92fcaa</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text11</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>{Format("{0:yyyy/MM/dd}", SMRV.ARRIVAL_DATE)}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text11>
            <Text12 Ref="21" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,6.1,9.5,0.7</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <Guid>f0c6cee8e4394b678ab075042aa9ea34</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text12</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>{Format("{0:HH:mm}", SMRV.USE_DATE)}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text12>
            <Text13 Ref="22" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>9.5,6.1,9.5,0.7</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <Guid>b71f684b4a114bd8b940d6d289d96f30</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text13</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>{Format("{0:HH:mm}", SMRV.ARRIVAL_DATE)}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text13>
            <Text23 Ref="23" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,6.8,1.2,0.8</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text23</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>Lp.</Text>
              <TextBrush>Black</TextBrush>
              <VertAlignment>Center</VertAlignment>
            </Text23>
            <Text24 Ref="24" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>1.2,6.8,3.9,0.8</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text24</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>Service type</Text>
              <TextBrush>Black</TextBrush>
              <VertAlignment>Center</VertAlignment>
            </Text24>
            <Text25 Ref="25" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>10.9,6.8,2.8,0.8</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text25</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>PRICE FOR ONE</Text>
              <TextBrush>Black</TextBrush>
              <VertAlignment>Center</VertAlignment>
            </Text25>
            <Text26 Ref="26" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>13.7,6.8,2.1,0.8</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text26</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>QUANTITY</Text>
              <TextBrush>Black</TextBrush>
              <VertAlignment>Center</VertAlignment>
            </Text26>
            <Text27 Ref="27" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>15.8,6.8,1.9,0.8</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text27</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <Text>SUMA</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text27>
            <Text64 Ref="28" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>5.1,6.8,5.8,0.8</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <Guid>16b696e6e7e745329b32ec940103814a</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text64</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <TextBrush>Black</TextBrush>
            </Text64>
            <Text65 Ref="29" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>17.7,6.8,1.3,0.8</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <Guid>268adc51777b4d2db6b646f89423f3ed</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text65</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <TextBrush>Black</TextBrush>
            </Text65>
            <Text66 Ref="30" type="Text" isKey="true">
              <Border>Left, Right;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,1.5,9.5,1.3</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <Guid>7ae49d64465c4dd1b61464b7c1d63468</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text66</Name>
              <Page isRef="8" />
              <Parent isRef="9" />
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
            </Text66>
          </Components>
          <Condition>{SMSMI.U_ID}</Condition>
          <Conditions isList="true" count="0" />
          <Name>GroupHeaderBand1</Name>
          <Page isRef="8" />
          <Parent isRef="8" />
        </GroupHeaderBand1>
        <DataBand1 Ref="31" type="DataBand" isKey="true">
          <Brush>Transparent</Brush>
          <BusinessObjectGuid isNull="true" />
          <ClientRectangle>0,8.8,19,0</ClientRectangle>
          <Components isList="true" count="0" />
          <Conditions isList="true" count="0" />
          <DataRelationName isNull="true" />
          <DataSourceName>SMSMI</DataSourceName>
          <Filters isList="true" count="0" />
          <Name>DataBand1</Name>
          <Page isRef="8" />
          <Parent isRef="8" />
          <Sort isList="true" count="0" />
        </DataBand1>
        <GroupFooterBand1 Ref="32" type="GroupFooterBand" isKey="true">
          <Border>All;Black;1;Solid;False;4;Black</Border>
          <Brush>Transparent</Brush>
          <ClientRectangle>0,9.6,19,10.1</ClientRectangle>
          <Components isList="true" count="30">
            <Text14 Ref="33" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,0.7,19,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text14</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>Order details</Text>
              <TextBrush>Black</TextBrush>
            </Text14>
            <Text15 Ref="34" type="Text" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>0,2.5,19,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <Margins>0,0,0,0</Margins>
              <Name>Text15</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>Delivery term</Text>
              <TextBrush>Black</TextBrush>
            </Text15>
            <Text16 Ref="35" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,3,19,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text16</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>Freight details</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text16>
            <Text17 Ref="36" type="Text" isKey="true">
              <Border>Left, Right;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,3.5,4.6,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text17</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>SUMMARY NET PRICE</Text>
              <TextBrush>Black</TextBrush>
              <VertAlignment>Center</VertAlignment>
            </Text17>
            <Text18 Ref="37" type="Text" isKey="true">
              <Border>Left, Right, Bottom;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,4.8,19,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text18</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>Remarks</Text>
              <TextBrush>Black</TextBrush>
              <VertAlignment>Center</VertAlignment>
            </Text18>
            <Text19 Ref="38" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,6,19,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text19</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>Statement</Text>
              <TextBrush>Black</TextBrush>
              <VertAlignment>Center</VertAlignment>
            </Text19>
            <Text21 Ref="39" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>3.3,7.6,7.9,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text21</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>SIGN  OF ORDER SENDER</Text>
              <TextBrush>Black</TextBrush>
              <VertAlignment>Center</VertAlignment>
            </Text21>
            <Text22 Ref="40" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>11.2,7.6,7.8,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text22</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>SIGNATURE OF ORDER RECIPIENT</Text>
              <TextBrush>Black</TextBrush>
              <VertAlignment>Center</VertAlignment>
            </Text22>
            <Text20 Ref="41" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,7.6,3.3,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text20</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>DATE</Text>
              <TextBrush>Black</TextBrush>
              <VertAlignment>Center</VertAlignment>
            </Text20>
            <SubReport1 Ref="42" type="SubReport" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>0,1.7,19,0.6</ClientRectangle>
              <Components isList="true" count="0" />
              <Name>SubReport1</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <SubReportPageGuid>c63396286b7f4adaa42d35a9719d66e0</SubReportPageGuid>
            </SubReport1>
            <Text34 Ref="43" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0.7,1.2,2,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text34</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>Cont. No</Text>
              <TextBrush>Black</TextBrush>
            </Text34>
            <Text35 Ref="44" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>2.7,1.2,2.3,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text35</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>MAWB</Text>
              <TextBrush>Black</TextBrush>
            </Text35>
            <Text36 Ref="45" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>5,1.2,2.2,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text36</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>HAWB</Text>
              <TextBrush>Black</TextBrush>
            </Text36>
            <Text37 Ref="46" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>7.2,1.2,1.7,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text37</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>Cart</Text>
              <TextBrush>Black</TextBrush>
            </Text37>
            <Text38 Ref="47" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>8.9,1.2,1.8,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text38</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>pallet</Text>
              <TextBrush>Black</TextBrush>
            </Text38>
            <Text39 Ref="48" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>10.7,1.2,2.1,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text39</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>dimmesion</Text>
              <TextBrush>Black</TextBrush>
            </Text39>
            <Text40 Ref="49" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>12.8,1.2,2.1,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text40</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>gross weight</Text>
              <TextBrush>Black</TextBrush>
            </Text40>
            <Text41 Ref="50" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>14.9,1.2,1.6,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text41</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>value</Text>
              <TextBrush>Black</TextBrush>
            </Text41>
            <Text42 Ref="51" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>16.5,1.2,2.5,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text42</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>Currency</Text>
              <TextBrush>Black</TextBrush>
            </Text42>
            <Text53 Ref="52" type="Text" isKey="true">
              <Border>Left, Right, Bottom;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>4.6,3.5,7.9,1</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text53</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>		
</Text>
              <TextBrush>Black</TextBrush>
              <VertAlignment>Center</VertAlignment>
            </Text53>
            <Text54 Ref="53" type="Text" isKey="true">
              <Border>Left, Right;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>12.5,3.5,6.5,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text54</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>PAYMENT TERMS</Text>
              <TextBrush>Black</TextBrush>
              <VertAlignment>Center</VertAlignment>
            </Text54>
            <Text55 Ref="54" type="Text" isKey="true">
              <Border>Left, Bottom;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,4,2.3,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <Guid>2ff53b0d6bd44e4393f7cfc5a9662d54</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text55</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>300</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text55>
            <Text56 Ref="55" type="Text" isKey="true">
              <Border>Left, Right, Bottom;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>12.5,4,6.5,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <Guid>09742414b6bf457dbfb8c85ff10b79ae</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text56</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>30 dni</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text56>
            <Text57 Ref="56" type="Text" isKey="true">
              <Border>Right, Bottom;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>2.3,4,2.3,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <Guid>28d14aee37974f47ba0377bdf3fd48c8</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text57</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>EUR</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text57>
            <Text58 Ref="57" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,6.5,19,1.1</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text58</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>TPVD IS VAT COMPANY, WE AUTHORIZE FORWARDER COMPANY TO MAKE INVOICE WITH OUT OUR SIGNATURE.</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text58>
            <Text59 Ref="58" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>3.3,8.1,7.9,1.4</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <Guid>06011706816742d08f9ed8aab2fafbe9</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text59</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>{SMRV.ORDER_BY}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Bottom</VertAlignment>
            </Text59>
            <Text60 Ref="59" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>11.2,8.1,7.8,1.4</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <Guid>a2260d2ce13740eb9492ec519b16579d</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text60</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Bottom</VertAlignment>
            </Text60>
            <Text61 Ref="60" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,8.1,3.3,1.4</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <Guid>a5f3c22597e14bc696c1ea8e88da01a9</Guid>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text61</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <Text>{SMRV.CALL_DATE}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Bottom</VertAlignment>
            </Text61>
            <Text62 Ref="61" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <ClientRectangle>0,1.2,0.7,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <HorAlignment>Center</HorAlignment>
              <Margins>0,0,0,0</Margins>
              <Name>Text62</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <TextBrush>Black</TextBrush>
            </Text62>
            <SubReport2 Ref="62" type="SubReport" isKey="true">
              <Brush>Transparent</Brush>
              <ClientRectangle>0,0,19,0.7</ClientRectangle>
              <Components isList="true" count="0" />
              <Name>SubReport2</Name>
              <Page isRef="8" />
              <Parent isRef="32" />
              <SubReportPageGuid>4027acd625834ad9b9453832748adc17</SubReportPageGuid>
            </SubReport2>
          </Components>
          <Conditions isList="true" count="0" />
          <Name>GroupFooterBand1</Name>
          <Page isRef="8" />
          <Parent isRef="8" />
        </GroupFooterBand1>
      </Components>
      <Conditions isList="true" count="0" />
      <Guid>a3ca326feb554973a62b8bf241505a33</Guid>
      <Margins>1,1,1,1</Margins>
      <Name>Page1</Name>
      <PageHeight>29.7</PageHeight>
      <PageWidth>21</PageWidth>
      <Report isRef="0" />
      <Watermark Ref="63" type="Stimulsoft.Report.Components.StiWatermark" isKey="true">
        <Font>Arial,100</Font>
        <TextBrush>[50:0:0:0]</TextBrush>
      </Watermark>
    </Page1>
    <subReport_1 Ref="64" type="Page" isKey="true">
      <Border>None;Black;2;Solid;False;4;Black</Border>
      <Brush>Transparent</Brush>
      <Components isList="true" count="1">
        <DataBand2 Ref="65" type="DataBand" isKey="true">
          <Brush>Transparent</Brush>
          <BusinessObjectGuid isNull="true" />
          <ClientRectangle>0,0.4,19,0.5</ClientRectangle>
          <Components isList="true" count="10">
            <Text43 Ref="66" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <ClientRectangle>0.7,0,2,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Guid>0beb9a4a037148c2b6940ae2cd1c7f25</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text43</Name>
              <Page isRef="64" />
              <Parent isRef="65" />
              <Text>{SMRCNTR.CNTR_NO}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text43>
            <Text44 Ref="67" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <ClientRectangle>2.7,0,2.3,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Guid>5b743ebeec67480bbd68e2a6d23ad9df</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text44</Name>
              <Page isRef="64" />
              <Parent isRef="65" />
              <Text>{SMSMI.MASTER_NO}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text44>
            <Text45 Ref="68" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <ClientRectangle>5,0,2.2,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Guid>0b7d925f069d4787a31555699d316173</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text45</Name>
              <Page isRef="64" />
              <Parent isRef="65" />
              <Text>{SMSMI.HOUSE_NO}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text45>
            <Text46 Ref="69" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <ClientRectangle>7.2,0,1.7,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Guid>4d2bef4e966642e29dd57235e9685475</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text46</Name>
              <Page isRef="64" />
              <Parent isRef="65" />
              <Text>{IIF(SMSMI.PKG_UNIT=="CTN",SMSMI.PKG_NUM,"")}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text46>
            <Text47 Ref="70" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <ClientRectangle>8.9,0,1.8,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Guid>0e93484068f946a3810f6e66d0cb650c</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text47</Name>
              <Page isRef="64" />
              <Parent isRef="65" />
              <Text>{IIF(SMSMI.PKG_UNIT=="PLT",SMSMI.PKG_NUM,"")}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text47>
            <Text48 Ref="71" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <ClientRectangle>10.7,0,2.1,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Guid>2014e69b78584b3bafc784bfcd49f477</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text48</Name>
              <Page isRef="64" />
              <Parent isRef="65" />
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text48>
            <Text49 Ref="72" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <ClientRectangle>12.8,0,2.1,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Guid>046d2d88b0534b819cf46b7ef40fcbc5</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text49</Name>
              <Page isRef="64" />
              <Parent isRef="65" />
              <Text>{SMSMI.GW}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text49>
            <Text50 Ref="73" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <ClientRectangle>14.9,0,1.6,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Guid>7aeee4684c724e50980e88b8814dcd8c</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text50</Name>
              <Page isRef="64" />
              <Parent isRef="65" />
              <Text>{SMSMI.GVALUE}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text50>
            <Text51 Ref="74" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <ClientRectangle>16.5,0,2.5,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Guid>eb2e8d9fb26345ffb4a55de51606d273</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text51</Name>
              <Page isRef="64" />
              <Parent isRef="65" />
              <Text>{SMSMI.CUR}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text51>
            <Text52 Ref="75" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <ClientRectangle>0,0,0.7,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>Arial,8</Font>
              <Guid>faeb0fcf63b4485abf2241f055eddcc1</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text52</Name>
              <Page isRef="64" />
              <Parent isRef="65" />
              <Text>{Line}</Text>
              <TextBrush>Black</TextBrush>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text52>
          </Components>
          <Conditions isList="true" count="0" />
          <DataRelationName isNull="true" />
          <DataSourceName>SMRCNTR</DataSourceName>
          <Filters isList="true" count="0" />
          <Name>DataBand2</Name>
          <Page isRef="64" />
          <Parent isRef="64" />
          <Sort isList="true" count="0" />
        </DataBand2>
      </Components>
      <Conditions isList="true" count="0" />
      <Guid>c63396286b7f4adaa42d35a9719d66e0</Guid>
      <Margins>1,1,1,1</Margins>
      <Name>subReport_1</Name>
      <PageHeight>29.7</PageHeight>
      <PageWidth>21</PageWidth>
      <Report isRef="0" />
      <Watermark Ref="76" type="Stimulsoft.Report.Components.StiWatermark" isKey="true">
        <Font>Arial,100</Font>
        <TextBrush>[50:0:0:0]</TextBrush>
      </Watermark>
    </subReport_1>
    <subReport_2 Ref="77" type="Page" isKey="true">
      <Border>None;Black;2;Solid;False;4;Black</Border>
      <Brush>Transparent</Brush>
      <Components isList="true" count="1">
        <DataBand3 Ref="78" type="DataBand" isKey="true">
          <Brush>Transparent</Brush>
          <BusinessObjectGuid isNull="true" />
          <ClientRectangle>0,0.4,19,0.5</ClientRectangle>
          <Components isList="true" count="7">
            <Text67 Ref="79" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <CanShrink>True</CanShrink>
              <ClientRectangle>0,0,1.2,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <GrowToHeight>True</GrowToHeight>
              <Guid>61f0a27a976e4099bd3dc810bb7ab642</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text67</Name>
              <Page isRef="77" />
              <Parent isRef="78" />
              <Text>{Line}</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>HotkeyPrefix=None, LineLimit=False, RightToLeft=False, Trimming=None, WordWrap=True, Angle=0, FirstTabOffset=40, DistanceBetweenTabs=20,</TextOptions>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text67>
            <Text68 Ref="80" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <CanShrink>True</CanShrink>
              <ClientRectangle>1.2,0,3.9,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <GrowToHeight>True</GrowToHeight>
              <Guid>6d50385b89f04eb5b6ce058efe334f33</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text68</Name>
              <Page isRef="77" />
              <Parent isRef="78" />
              <Text>{SMBID.CHG_DESCP}</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>HotkeyPrefix=None, LineLimit=False, RightToLeft=False, Trimming=None, WordWrap=True, Angle=0, FirstTabOffset=40, DistanceBetweenTabs=20,</TextOptions>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text68>
            <Text69 Ref="81" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <CanShrink>True</CanShrink>
              <ClientRectangle>10.9,0,2.8,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <GrowToHeight>True</GrowToHeight>
              <Guid>67de17510e4c4bf596895c1f4d6a024f</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text69</Name>
              <Page isRef="77" />
              <Parent isRef="78" />
              <Text>{SMBID.QAMT}</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>HotkeyPrefix=None, LineLimit=False, RightToLeft=False, Trimming=None, WordWrap=True, Angle=0, FirstTabOffset=40, DistanceBetweenTabs=20,</TextOptions>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text69>
            <Text70 Ref="82" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <CanShrink>True</CanShrink>
              <ClientRectangle>13.7,0,2.1,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <GrowToHeight>True</GrowToHeight>
              <Guid>8531c9fb030c456f8177b8617fc9c20e</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text70</Name>
              <Page isRef="77" />
              <Parent isRef="78" />
              <Text>1</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>HotkeyPrefix=None, LineLimit=False, RightToLeft=False, Trimming=None, WordWrap=True, Angle=0, FirstTabOffset=40, DistanceBetweenTabs=20,</TextOptions>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text70>
            <Text71 Ref="83" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <CanShrink>True</CanShrink>
              <ClientRectangle>15.8,0,1.9,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <GrowToHeight>True</GrowToHeight>
              <Guid>4fb2d7b24e5c400085c5b376b4fd23b1</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text71</Name>
              <Page isRef="77" />
              <Parent isRef="78" />
              <Text>{SMBID.QAMT}</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>HotkeyPrefix=None, LineLimit=False, RightToLeft=False, Trimming=None, WordWrap=True, Angle=0, FirstTabOffset=40, DistanceBetweenTabs=20,</TextOptions>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text71>
            <Text72 Ref="84" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <CanShrink>True</CanShrink>
              <ClientRectangle>17.7,0,1.3,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <GrowToHeight>True</GrowToHeight>
              <Guid>43aa020f09ef43718cc2c20429455cbb</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text72</Name>
              <Page isRef="77" />
              <Parent isRef="78" />
              <Text>{SMBID.CUR}</Text>
              <TextBrush>Black</TextBrush>
              <TextOptions>HotkeyPrefix=None, LineLimit=False, RightToLeft=False, Trimming=None, WordWrap=True, Angle=0, FirstTabOffset=40, DistanceBetweenTabs=20,</TextOptions>
              <Type>Expression</Type>
              <VertAlignment>Center</VertAlignment>
            </Text72>
            <Text73 Ref="85" type="Text" isKey="true">
              <Border>All;Black;1;Solid;False;4;Black</Border>
              <Brush>Transparent</Brush>
              <CanGrow>True</CanGrow>
              <CanShrink>True</CanShrink>
              <ClientRectangle>5.1,0,5.8,0.5</ClientRectangle>
              <Conditions isList="true" count="0" />
              <Font>宋体,10</Font>
              <GrowToHeight>True</GrowToHeight>
              <Guid>f412a08987be4f3cb68abdce0861b96d</Guid>
              <Margins>0,0,0,0</Margins>
              <Name>Text73</Name>
              <Page isRef="77" />
              <Parent isRef="78" />
              <TextBrush>Black</TextBrush>
              <TextOptions>HotkeyPrefix=None, LineLimit=False, RightToLeft=False, Trimming=None, WordWrap=True, Angle=0, FirstTabOffset=40, DistanceBetweenTabs=20,</TextOptions>
              <VertAlignment>Center</VertAlignment>
            </Text73>
          </Components>
          <Conditions isList="true" count="0" />
          <DataRelationName isNull="true" />
          <DataSourceName>SMBID</DataSourceName>
          <Filters isList="true" count="0" />
          <Guid>174892f2bdd64a5dbcba2a04941cd6ab</Guid>
          <Name>DataBand3</Name>
          <Page isRef="77" />
          <Parent isRef="77" />
          <Sort isList="true" count="0" />
        </DataBand3>
      </Components>
      <Conditions isList="true" count="0" />
      <Guid>4027acd625834ad9b9453832748adc17</Guid>
      <Margins>1,1,1,1</Margins>
      <Name>subReport_2</Name>
      <PageHeight>29.7</PageHeight>
      <PageWidth>21</PageWidth>
      <Report isRef="0" />
      <Watermark Ref="86" type="Stimulsoft.Report.Components.StiWatermark" isKey="true">
        <Font>Arial,100</Font>
        <TextBrush>[50:0:0:0]</TextBrush>
      </Watermark>
    </subReport_2>
  </Pages>
  <PrinterSettings Ref="87" type="Stimulsoft.Report.Print.StiPrinterSettings" isKey="true" />
  <ReferencedAssemblies isList="true" count="8">
    <value>System.Dll</value>
    <value>System.Drawing.Dll</value>
    <value>System.Windows.Forms.Dll</value>
    <value>System.Data.Dll</value>
    <value>System.Xml.Dll</value>
    <value>Stimulsoft.Controls.Dll</value>
    <value>Stimulsoft.Base.Dll</value>
    <value>Stimulsoft.Report.Dll</value>
  </ReferencedAssemblies>
  <ReportAlias>Report</ReportAlias>
  <ReportChanged>6/26/2017 11:01:33 AM</ReportChanged>
  <ReportCreated>6/22/2017 8:45:52 AM</ReportCreated>
  <ReportFile>C:\Users\dean\Desktop\date\CCPDF.mrt</ReportFile>
  <ReportGuid>d45cc83310a742a0b608438106636188</ReportGuid>
  <ReportName>Report</ReportName>
  <ReportUnit>Centimeters</ReportUnit>
  <ReportVersion>2011.3.1200</ReportVersion>
  <Script>using System;
using System.Drawing;
using System.Windows.Forms;
using System.Data;
using Stimulsoft.Controls;
using Stimulsoft.Base.Drawing;
using Stimulsoft.Report;
using Stimulsoft.Report.Dialogs;
using Stimulsoft.Report.Components;
using System.Collections.Generic;

namespace Reports
{
    public class Report : Stimulsoft.Report.StiReport
    {
        public Report()        {
            this.InitializeComponent();
        }

		
		public string  GetAddr()
		{
			string val=string.Empty;
			DataTable dt =SMRDN.DataTable;
			List&lt;string&gt; li = new List&lt;string&gt;();
			foreach(DataRow dr in dt.Rows)
			{
			 string adr=	GetStr(dr["DLV_ADDR"]);
				if(string.IsNullOrEmpty(adr))
				{
					if(li.Contains(adr))continue;
					li.Add(adr);
				}
					
			}
			foreach(string str in li)
			{
				val+=str+"\r\n";
			}
			return val;
		}
		public string  GetStr(object val)
		{
			if (val == null || val==DBNull.Value)
				return "";
			return val.ToString();
		}
        #region StiReport Designer generated code - do not modify
        public Stimulsoft.Report.Components.StiPage Page1;
        public Stimulsoft.Report.Components.StiGroupHeaderBand GroupHeaderBand1;
        public Stimulsoft.Report.Components.StiText Text1;
        public Stimulsoft.Report.Components.StiText Text2;
        public Stimulsoft.Report.Components.StiText Text3;
        public Stimulsoft.Report.Components.StiText Text4;
        public Stimulsoft.Report.Components.StiText Text5;
        public Stimulsoft.Report.Components.StiText Text6;
        public Stimulsoft.Report.Components.StiText Text7;
        public Stimulsoft.Report.Components.StiText Text8;
        public Stimulsoft.Report.Components.StiText Text9;
        public Stimulsoft.Report.Components.StiText Text10;
        public Stimulsoft.Report.Components.StiText Text11;
        public Stimulsoft.Report.Components.StiText Text12;
        public Stimulsoft.Report.Components.StiText Text13;
        public Stimulsoft.Report.Components.StiText Text23;
        public Stimulsoft.Report.Components.StiText Text24;
        public Stimulsoft.Report.Components.StiText Text25;
        public Stimulsoft.Report.Components.StiText Text26;
        public Stimulsoft.Report.Components.StiText Text27;
        public Stimulsoft.Report.Components.StiText Text64;
        public Stimulsoft.Report.Components.StiText Text65;
        public Stimulsoft.Report.Components.StiText Text66;
        public Stimulsoft.Report.Components.StiDataBand DataBand1;
        public Stimulsoft.Report.Components.StiText Text28;
        public Stimulsoft.Report.Components.StiText Text29;
        public Stimulsoft.Report.Components.StiText Text30;
        public Stimulsoft.Report.Components.StiText Text31;
        public Stimulsoft.Report.Components.StiText Text32;
        public Stimulsoft.Report.Components.StiText Text33;
        public Stimulsoft.Report.Components.StiText Text63;
        public Stimulsoft.Report.Components.StiGroupFooterBand GroupFooterBand1;
        public Stimulsoft.Report.Components.StiText Text14;
        public Stimulsoft.Report.Components.StiText Text15;
        public Stimulsoft.Report.Components.StiText Text16;
        public Stimulsoft.Report.Components.StiText Text17;
        public Stimulsoft.Report.Components.StiText Text18;
        public Stimulsoft.Report.Components.StiText Text19;
        public Stimulsoft.Report.Components.StiText Text21;
        public Stimulsoft.Report.Components.StiText Text22;
        public Stimulsoft.Report.Components.StiText Text20;
        public Stimulsoft.Report.Components.StiSubReport SubReport1;
        public Stimulsoft.Report.Components.StiText Text34;
        public Stimulsoft.Report.Components.StiText Text35;
        public Stimulsoft.Report.Components.StiText Text36;
        public Stimulsoft.Report.Components.StiText Text37;
        public Stimulsoft.Report.Components.StiText Text38;
        public Stimulsoft.Report.Components.StiText Text39;
        public Stimulsoft.Report.Components.StiText Text40;
        public Stimulsoft.Report.Components.StiText Text41;
        public Stimulsoft.Report.Components.StiText Text42;
        public Stimulsoft.Report.Components.StiText Text53;
        public Stimulsoft.Report.Components.StiText Text54;
        public Stimulsoft.Report.Components.StiText Text55;
        public Stimulsoft.Report.Components.StiText Text56;
        public Stimulsoft.Report.Components.StiText Text57;
        public Stimulsoft.Report.Components.StiText Text58;
        public Stimulsoft.Report.Components.StiText Text59;
        public Stimulsoft.Report.Components.StiText Text60;
        public Stimulsoft.Report.Components.StiText Text61;
        public Stimulsoft.Report.Components.StiText Text62;
        public Stimulsoft.Report.Components.StiWatermark Page1_Watermark;
        public Stimulsoft.Report.Components.StiPage subReport_1;
        public Stimulsoft.Report.Components.StiDataBand DataBand2;
        public Stimulsoft.Report.Components.StiText Text43;
        public Stimulsoft.Report.Components.StiText Text44;
        public Stimulsoft.Report.Components.StiText Text45;
        public Stimulsoft.Report.Components.StiText Text46;
        public Stimulsoft.Report.Components.StiText Text47;
        public Stimulsoft.Report.Components.StiText Text48;
        public Stimulsoft.Report.Components.StiText Text49;
        public Stimulsoft.Report.Components.StiText Text50;
        public Stimulsoft.Report.Components.StiText Text51;
        public Stimulsoft.Report.Components.StiText Text52;
        public Stimulsoft.Report.Components.StiWatermark subReport_1_Watermark;
        public Stimulsoft.Report.Print.StiPrinterSettings Report_PrinterSettings;
        public SMSMIDataSource SMSMI;
        public SMRVDataSource SMRV;
        public SMBIDDataSource SMBID;
        public SMRCNTRDataSource SMRCNTR;
        public SMRDNDataSource SMRDN;
        
        public void GroupHeaderBand1__GetValue(object sender, Stimulsoft.Report.Events.StiValueEventArgs e)
        {
            e.Value = SMSMI.U_ID;
        }
        
        public void Text1__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "Transportation Order " + ToString(sender, SMRV.RESERVE_NO, true);
        }
        
        public void Text2__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "EKSPORTER";
        }
        
        public void Text3__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "IMPORTER";
        }
        
        public void Text4__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "EKSPORTER";
        }
        
        public void Text5__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "IMPORTER";
        }
        
        public void Text6__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, SMRV.PICK_AREA, true) + "\r\n" + ToString(sender, SMRV.DLV_AREA_NM, true);
        }
        
        public void Text7__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, SMRV.DLV_AREA, true) + "\r\n" + ToString(sender, SMRV.DLV_AREA_NM, true) + "\r\n" + ToString(sender, GetAddr(), true);
        }
        
        public void Text8__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "DATE / HOUR OF PICK UP";
        }
        
        public void Text9__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "DATE / HOUR OF DELIVERY";
        }
        
        public void Text10__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Format("{0:yyyy/MM/dd}", SMRV.PICK_DATE), true);
        }
        
        public void Text11__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Format("{0:yyyy/MM/dd}", SMRV.ARRIVAL_DATE), true);
        }
        
        public void Text12__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Format("{0:HH:mm}", SMRV.PICK_DATE), true);
        }
        
        public void Text13__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Format("{0:HH:mm}", SMRV.ARRIVAL_DATE), true);
        }
        
        public void Text23__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "Lp.";
        }
        
        public void Text24__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "Service type";
        }
        
        public void Text25__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "PRICE FOR ONE";
        }
        
        public void Text26__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "QUANTITY";
        }
        
        public void Text27__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "SUMA";
        }
        
        public void Text66__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, SMRCNTR.DLV_AREA
{SMRCNTR.DLV_AREA_NM, true) + "\r\n" + ToString(sender, SMRCNTR.DLV_ADDR, true);
        }
        
        public void Text28__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Line, true);
        }
        
        public void Text29__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, SMBID.CHG_DESCP, true);
        }
        
        public void Text30__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, SMBID.QAMT, true);
        }
        
        public void Text31__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "1";
        }
        
        public void Text32__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, SMBID.QAMT, true);
        }
        
        public void Text33__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, SMBID.CUR, true);
        }
        
        public void Text14__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "Order details";
        }
        
        public void Text15__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "Delivery term";
        }
        
        public void Text16__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "Freight details";
        }
        
        public void Text17__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "SUMMARY NET PRICE";
        }
        
        public void Text18__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "Remarks";
        }
        
        public void Text19__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "Statement";
        }
        
        public void Text21__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "SIGN  OF ORDER SENDER";
        }
        
        public void Text22__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "SIGNATURE OF ORDER RECIPIENT";
        }
        
        public void Text20__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "DATE";
        }
        
        public void Text34__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "Cont. No";
        }
        
        public void Text35__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "MAWB";
        }
        
        public void Text36__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "HAWB";
        }
        
        public void Text37__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "Cart";
        }
        
        public void Text38__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "pallet";
        }
        
        public void Text39__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "dimmesion";
        }
        
        public void Text40__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "gross weight";
        }
        
        public void Text41__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "value";
        }
        
        public void Text42__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "Currency";
        }
        
        public void Text53__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "\t\t\r\n";
        }
        
        public void Text54__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "PAYMENT TERMS";
        }
        
        public void Text55__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "300";
        }
        
        public void Text56__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "30 dni";
        }
        
        public void Text57__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "EUR";
        }
        
        public void Text58__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = "TPVD IS VAT COMPANY, WE AUTHORIZE FORWARDER COMPANY TO MAKE INVOICE WITH OUT OUR SIGNATURE.";
        }
        
        public void Text59__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, SMRV.ORDER_BY, true);
        }
        
        public void Text61__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, SMRV.CALL_DATE, true);
        }
        
        public void Text43__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, SMRCNTR.CNTR_NO, true);
        }
        
        public void Text44__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, SMSMI.MASTER_NO, true);
        }
        
        public void Text45__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, SMSMI.HOUSE_NO, true);
        }
        
        public void Text46__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, IIF(SMSMI.PKG_UNIT=="CTN",SMSMI.PKG_NUM,""), true);
        }
        
        public void Text47__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, IIF(SMSMI.PKG_UNIT=="PLT",SMSMI.PKG_NUM,""), true);
        }
        
        public void Text49__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, SMSMI.GW, true);
        }
        
        public void Text50__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, SMSMI.GVALUE, true);
        }
        
        public void Text51__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, SMSMI.CUR, true);
        }
        
        public void Text52__GetValue(object sender, Stimulsoft.Report.Events.StiGetValueEventArgs e)
        {
            e.Value = ToString(sender, Line, true);
        }
        
        private void InitializeComponent()
        {
            this.SMRDN = new SMRDNDataSource();
            this.SMRCNTR = new SMRCNTRDataSource();
            this.SMBID = new SMBIDDataSource();
            this.SMRV = new SMRVDataSource();
            this.SMSMI = new SMSMIDataSource();
            this.NeedsCompiling = false;
            this.EngineVersion = Stimulsoft.Report.Engine.StiEngineVersion.EngineV2;
            this.ReferencedAssemblies = new System.String[] {
                    "System.Dll",
                    "System.Drawing.Dll",
                    "System.Windows.Forms.Dll",
                    "System.Data.Dll",
                    "System.Xml.Dll",
                    "Stimulsoft.Controls.Dll",
                    "Stimulsoft.Base.Dll",
                    "Stimulsoft.Report.Dll"};
            this.ReportAlias = "Report";
            // 
            // ReportChanged
            // 
            this.ReportChanged = new DateTime(2017, 6, 23, 16, 0, 29, 725);
            // 
            // ReportCreated
            // 
            this.ReportCreated = new DateTime(2017, 6, 22, 8, 45, 52, 0);
            this.ReportFile = "C:\\Users\\dean\\Desktop\\date\\CCPDF.mrt";
            this.ReportGuid = "99123cbada2442daa570ed037fbc0f04";
            this.ReportName = "Report";
            this.ReportUnit = Stimulsoft.Report.StiReportUnitType.Centimeters;
            this.ReportVersion = "2011.3.1200";
            this.ScriptLanguage = Stimulsoft.Report.StiReportLanguageType.CSharp;
            // 
            // Page1
            // 
            this.Page1 = new Stimulsoft.Report.Components.StiPage();
            this.Page1.Guid = "a3ca326feb554973a62b8bf241505a33";
            this.Page1.Name = "Page1";
            this.Page1.PageHeight = 29.7;
            this.Page1.PageWidth = 21;
            this.Page1.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 2, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Page1.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            // 
            // GroupHeaderBand1
            // 
            this.GroupHeaderBand1 = new Stimulsoft.Report.Components.StiGroupHeaderBand();
            this.GroupHeaderBand1.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 0.4, 19, 7.6);
            this.GroupHeaderBand1.GetValue += new Stimulsoft.Report.Events.StiValueEventHandler(this.GroupHeaderBand1__GetValue);
            this.GroupHeaderBand1.Name = "GroupHeaderBand1";
            this.GroupHeaderBand1.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.GroupHeaderBand1.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            // 
            // Text1
            // 
            this.Text1 = new Stimulsoft.Report.Components.StiText();
            this.Text1.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 0.2, 19, 0.8);
            this.Text1.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text1.Name = "Text1";
            this.Text1.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text1__GetValue);
            this.Text1.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text1.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text1.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text1.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text1.Font = new System.Drawing.Font("宋体", 14F);
            this.Text1.Guid = null;
            this.Text1.Indicator = null;
            this.Text1.Interaction = null;
            this.Text1.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text1.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text1.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text2
            // 
            this.Text2 = new Stimulsoft.Report.Components.StiText();
            this.Text2.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 1, 9.5, 1.8);
            this.Text2.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text2.Name = "Text2";
            this.Text2.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text2__GetValue);
            this.Text2.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text2.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text2.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text2.Font = new System.Drawing.Font("宋体", 10F);
            this.Text2.Guid = null;
            this.Text2.Indicator = null;
            this.Text2.Interaction = null;
            this.Text2.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text2.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text2.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text3
            // 
            this.Text3 = new Stimulsoft.Report.Components.StiText();
            this.Text3.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(9.5, 1, 9.5, 1.8);
            this.Text3.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text3.Name = "Text3";
            this.Text3.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text3__GetValue);
            this.Text3.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text3.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text3.Font = new System.Drawing.Font("宋体", 10F);
            this.Text3.Guid = null;
            this.Text3.Indicator = null;
            this.Text3.Interaction = null;
            this.Text3.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text3.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text3.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text4
            // 
            this.Text4 = new Stimulsoft.Report.Components.StiText();
            this.Text4.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 2.8, 9.5, 0.5);
            this.Text4.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text4.Name = "Text4";
            this.Text4.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text4__GetValue);
            this.Text4.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text4.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text4.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text4.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text4.Font = new System.Drawing.Font("宋体", 10F);
            this.Text4.Guid = null;
            this.Text4.Indicator = null;
            this.Text4.Interaction = null;
            this.Text4.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text4.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text4.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text5
            // 
            this.Text5 = new Stimulsoft.Report.Components.StiText();
            this.Text5.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(9.5, 2.8, 9.5, 0.5);
            this.Text5.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text5.Name = "Text5";
            this.Text5.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text5__GetValue);
            this.Text5.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text5.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text5.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text5.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text5.Font = new System.Drawing.Font("宋体", 10F);
            this.Text5.Guid = null;
            this.Text5.Indicator = null;
            this.Text5.Interaction = null;
            this.Text5.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text5.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text5.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text6
            // 
            this.Text6 = new Stimulsoft.Report.Components.StiText();
            this.Text6.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 3.3, 9.5, 1.6);
            this.Text6.Name = "Text6";
            this.Text6.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text6__GetValue);
            this.Text6.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text6.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text6.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text6.Font = new System.Drawing.Font("宋体", 10F);
            this.Text6.Guid = null;
            this.Text6.Indicator = null;
            this.Text6.Interaction = null;
            this.Text6.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text6.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text6.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text7
            // 
            this.Text7 = new Stimulsoft.Report.Components.StiText();
            this.Text7.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(9.5, 3.3, 9.5, 1.6);
            this.Text7.Guid = "9b9f9ea2fff84f778e5f632577c517a8";
            this.Text7.Name = "Text7";
            this.Text7.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text7__GetValue);
            this.Text7.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text7.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text7.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text7.Font = new System.Drawing.Font("宋体", 10F);
            this.Text7.Indicator = null;
            this.Text7.Interaction = null;
            this.Text7.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text7.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text7.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text8
            // 
            this.Text8 = new Stimulsoft.Report.Components.StiText();
            this.Text8.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 4.9, 9.5, 0.5);
            this.Text8.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text8.Name = "Text8";
            this.Text8.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text8__GetValue);
            this.Text8.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text8.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text8.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text8.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text8.Font = new System.Drawing.Font("宋体", 10F);
            this.Text8.Guid = null;
            this.Text8.Indicator = null;
            this.Text8.Interaction = null;
            this.Text8.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text8.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text8.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text9
            // 
            this.Text9 = new Stimulsoft.Report.Components.StiText();
            this.Text9.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(9.5, 4.9, 9.5, 0.5);
            this.Text9.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text9.Name = "Text9";
            this.Text9.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text9__GetValue);
            this.Text9.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text9.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text9.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text9.Font = new System.Drawing.Font("宋体", 10F);
            this.Text9.Guid = null;
            this.Text9.Indicator = null;
            this.Text9.Interaction = null;
            this.Text9.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text9.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text9.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text10
            // 
            this.Text10 = new Stimulsoft.Report.Components.StiText();
            this.Text10.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 5.4, 9.5, 0.7);
            this.Text10.Guid = "071f1d8cd8e64d6a9d3bfe70c05cd653";
            this.Text10.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text10.Name = "Text10";
            this.Text10.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text10__GetValue);
            this.Text10.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text10.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text10.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text10.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text10.Font = new System.Drawing.Font("宋体", 10F);
            this.Text10.Indicator = null;
            this.Text10.Interaction = null;
            this.Text10.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text10.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text10.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text11
            // 
            this.Text11 = new Stimulsoft.Report.Components.StiText();
            this.Text11.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(9.5, 5.4, 9.5, 0.7);
            this.Text11.Guid = "7b79872bf5024e6cad111d6e9d92fcaa";
            this.Text11.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text11.Name = "Text11";
            this.Text11.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text11__GetValue);
            this.Text11.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text11.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text11.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text11.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text11.Font = new System.Drawing.Font("宋体", 10F);
            this.Text11.Indicator = null;
            this.Text11.Interaction = null;
            this.Text11.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text11.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text11.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text12
            // 
            this.Text12 = new Stimulsoft.Report.Components.StiText();
            this.Text12.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 6.1, 9.5, 0.7);
            this.Text12.Guid = "f0c6cee8e4394b678ab075042aa9ea34";
            this.Text12.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text12.Name = "Text12";
            this.Text12.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text12__GetValue);
            this.Text12.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text12.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text12.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text12.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text12.Font = new System.Drawing.Font("宋体", 10F);
            this.Text12.Indicator = null;
            this.Text12.Interaction = null;
            this.Text12.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text12.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text12.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text13
            // 
            this.Text13 = new Stimulsoft.Report.Components.StiText();
            this.Text13.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(9.5, 6.1, 9.5, 0.7);
            this.Text13.Guid = "b71f684b4a114bd8b940d6d289d96f30";
            this.Text13.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text13.Name = "Text13";
            this.Text13.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text13__GetValue);
            this.Text13.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text13.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text13.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text13.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text13.Font = new System.Drawing.Font("宋体", 10F);
            this.Text13.Indicator = null;
            this.Text13.Interaction = null;
            this.Text13.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text13.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text13.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text23
            // 
            this.Text23 = new Stimulsoft.Report.Components.StiText();
            this.Text23.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 6.8, 1.2, 0.8);
            this.Text23.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text23.Name = "Text23";
            this.Text23.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text23__GetValue);
            this.Text23.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text23.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text23.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text23.Font = new System.Drawing.Font("宋体", 10F);
            this.Text23.Guid = null;
            this.Text23.Indicator = null;
            this.Text23.Interaction = null;
            this.Text23.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text23.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text23.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text24
            // 
            this.Text24 = new Stimulsoft.Report.Components.StiText();
            this.Text24.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(1.2, 6.8, 3.9, 0.8);
            this.Text24.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text24.Name = "Text24";
            this.Text24.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text24__GetValue);
            this.Text24.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text24.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text24.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text24.Font = new System.Drawing.Font("宋体", 10F);
            this.Text24.Guid = null;
            this.Text24.Indicator = null;
            this.Text24.Interaction = null;
            this.Text24.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text24.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text24.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text25
            // 
            this.Text25 = new Stimulsoft.Report.Components.StiText();
            this.Text25.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(10.9, 6.8, 2.8, 0.8);
            this.Text25.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text25.Name = "Text25";
            this.Text25.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text25__GetValue);
            this.Text25.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text25.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text25.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text25.Font = new System.Drawing.Font("宋体", 10F);
            this.Text25.Guid = null;
            this.Text25.Indicator = null;
            this.Text25.Interaction = null;
            this.Text25.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text25.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text25.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text26
            // 
            this.Text26 = new Stimulsoft.Report.Components.StiText();
            this.Text26.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(13.7, 6.8, 2.1, 0.8);
            this.Text26.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text26.Name = "Text26";
            this.Text26.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text26__GetValue);
            this.Text26.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text26.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text26.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text26.Font = new System.Drawing.Font("宋体", 10F);
            this.Text26.Guid = null;
            this.Text26.Indicator = null;
            this.Text26.Interaction = null;
            this.Text26.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text26.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text26.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text27
            // 
            this.Text27 = new Stimulsoft.Report.Components.StiText();
            this.Text27.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(15.8, 6.8, 1.9, 0.8);
            this.Text27.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text27.Name = "Text27";
            this.Text27.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text27__GetValue);
            this.Text27.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text27.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text27.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text27.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text27.Font = new System.Drawing.Font("宋体", 10F);
            this.Text27.Guid = null;
            this.Text27.Indicator = null;
            this.Text27.Interaction = null;
            this.Text27.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text27.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text27.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text64
            // 
            this.Text64 = new Stimulsoft.Report.Components.StiText();
            this.Text64.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(5.1, 6.8, 5.8, 0.8);
            this.Text64.Guid = "16b696e6e7e745329b32ec940103814a";
            this.Text64.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text64.Name = "Text64";
            this.Text64.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text64.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text64.Font = new System.Drawing.Font("宋体", 10F);
            this.Text64.Indicator = null;
            this.Text64.Interaction = null;
            this.Text64.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text64.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text64.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text65
            // 
            this.Text65 = new Stimulsoft.Report.Components.StiText();
            this.Text65.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(17.7, 6.8, 1.3, 0.8);
            this.Text65.Guid = "268adc51777b4d2db6b646f89423f3ed";
            this.Text65.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text65.Name = "Text65";
            this.Text65.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text65.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text65.Font = new System.Drawing.Font("宋体", 10F);
            this.Text65.Indicator = null;
            this.Text65.Interaction = null;
            this.Text65.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text65.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text65.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text66
            // 
            this.Text66 = new Stimulsoft.Report.Components.StiText();
            this.Text66.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(9.5, 3.3, 9.5, 1.6);
            this.Text66.Guid = "e220362a69914ad7b841861c19bba9fa";
            this.Text66.Name = "Text66";
            this.Text66.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text66__GetValue);
            this.Text66.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text66.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text66.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text66.Font = new System.Drawing.Font("宋体", 10F);
            this.Text66.Indicator = null;
            this.Text66.Interaction = null;
            this.Text66.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text66.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text66.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            this.GroupHeaderBand1.Guid = null;
            this.GroupHeaderBand1.Interaction = null;
            // 
            // DataBand1
            // 
            this.DataBand1 = new Stimulsoft.Report.Components.StiDataBand();
            this.DataBand1.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 8.8, 19, 0.5);
            this.DataBand1.DataSourceName = "SMBID";
            this.DataBand1.Name = "DataBand1";
            this.DataBand1.Sort = new System.String[0];
            this.DataBand1.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.DataBand1.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.DataBand1.BusinessObjectGuid = null;
            // 
            // Text28
            // 
            this.Text28 = new Stimulsoft.Report.Components.StiText();
            this.Text28.CanGrow = true;
            this.Text28.CanShrink = true;
            this.Text28.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 0, 1.2, 0.5);
            this.Text28.GrowToHeight = true;
            this.Text28.Guid = "25eab7b280da4b589eaf528cc7c41b69";
            this.Text28.Name = "Text28";
            this.Text28.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text28__GetValue);
            this.Text28.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text28.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text28.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text28.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text28.Font = new System.Drawing.Font("宋体", 10F);
            this.Text28.Indicator = null;
            this.Text28.Interaction = null;
            this.Text28.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text28.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text28.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, true, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text29
            // 
            this.Text29 = new Stimulsoft.Report.Components.StiText();
            this.Text29.CanGrow = true;
            this.Text29.CanShrink = true;
            this.Text29.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(1.2, 0, 3.9, 0.5);
            this.Text29.GrowToHeight = true;
            this.Text29.Guid = "4cec8c1933174091b241fa6d0702186b";
            this.Text29.Name = "Text29";
            this.Text29.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text29__GetValue);
            this.Text29.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text29.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text29.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text29.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text29.Font = new System.Drawing.Font("宋体", 10F);
            this.Text29.Indicator = null;
            this.Text29.Interaction = null;
            this.Text29.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text29.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text29.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, true, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text30
            // 
            this.Text30 = new Stimulsoft.Report.Components.StiText();
            this.Text30.CanGrow = true;
            this.Text30.CanShrink = true;
            this.Text30.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(10.9, 0, 2.8, 0.5);
            this.Text30.GrowToHeight = true;
            this.Text30.Guid = "6128a74de2284af08b189a69a1086903";
            this.Text30.Name = "Text30";
            this.Text30.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text30__GetValue);
            this.Text30.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text30.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text30.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text30.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text30.Font = new System.Drawing.Font("宋体", 10F);
            this.Text30.Indicator = null;
            this.Text30.Interaction = null;
            this.Text30.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text30.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text30.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, true, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text31
            // 
            this.Text31 = new Stimulsoft.Report.Components.StiText();
            this.Text31.CanGrow = true;
            this.Text31.CanShrink = true;
            this.Text31.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(13.7, 0, 2.1, 0.5);
            this.Text31.GrowToHeight = true;
            this.Text31.Guid = "6a1a11ce112d4af9acf5b5057fc86cb9";
            this.Text31.Name = "Text31";
            this.Text31.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text31__GetValue);
            this.Text31.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text31.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text31.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text31.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text31.Font = new System.Drawing.Font("宋体", 10F);
            this.Text31.Indicator = null;
            this.Text31.Interaction = null;
            this.Text31.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text31.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text31.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, true, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text32
            // 
            this.Text32 = new Stimulsoft.Report.Components.StiText();
            this.Text32.CanGrow = true;
            this.Text32.CanShrink = true;
            this.Text32.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(15.8, 0, 1.9, 0.5);
            this.Text32.GrowToHeight = true;
            this.Text32.Guid = "77f96aeea06346e0a955e2665bdfbfda";
            this.Text32.Name = "Text32";
            this.Text32.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text32__GetValue);
            this.Text32.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text32.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text32.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text32.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text32.Font = new System.Drawing.Font("宋体", 10F);
            this.Text32.Indicator = null;
            this.Text32.Interaction = null;
            this.Text32.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text32.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text32.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, true, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text33
            // 
            this.Text33 = new Stimulsoft.Report.Components.StiText();
            this.Text33.CanGrow = true;
            this.Text33.CanShrink = true;
            this.Text33.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(17.7, 0, 1.3, 0.5);
            this.Text33.GrowToHeight = true;
            this.Text33.Name = "Text33";
            this.Text33.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text33__GetValue);
            this.Text33.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text33.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text33.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text33.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text33.Font = new System.Drawing.Font("宋体", 10F);
            this.Text33.Guid = null;
            this.Text33.Indicator = null;
            this.Text33.Interaction = null;
            this.Text33.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text33.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text33.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, true, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text63
            // 
            this.Text63 = new Stimulsoft.Report.Components.StiText();
            this.Text63.CanGrow = true;
            this.Text63.CanShrink = true;
            this.Text63.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(5.1, 0, 5.8, 0.5);
            this.Text63.GrowToHeight = true;
            this.Text63.Guid = "327438beba9542fb834980ff0d30b1e2";
            this.Text63.Name = "Text63";
            this.Text63.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text63.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text63.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text63.Font = new System.Drawing.Font("宋体", 10F);
            this.Text63.Indicator = null;
            this.Text63.Interaction = null;
            this.Text63.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text63.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text63.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, true, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            this.DataBand1.DataRelationName = null;
            this.DataBand1.Guid = null;
            this.DataBand1.Interaction = null;
            this.DataBand1.MasterComponent = null;
            // 
            // GroupFooterBand1
            // 
            this.GroupFooterBand1 = new Stimulsoft.Report.Components.StiGroupFooterBand();
            this.GroupFooterBand1.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 10.1, 19, 8.8);
            this.GroupFooterBand1.Name = "GroupFooterBand1";
            this.GroupFooterBand1.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.GroupFooterBand1.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            // 
            // Text14
            // 
            this.Text14 = new Stimulsoft.Report.Components.StiText();
            this.Text14.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 0, 19, 0.5);
            this.Text14.Name = "Text14";
            this.Text14.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text14__GetValue);
            this.Text14.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text14.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text14.Font = new System.Drawing.Font("宋体", 10F);
            this.Text14.Guid = null;
            this.Text14.Indicator = null;
            this.Text14.Interaction = null;
            this.Text14.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text14.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text14.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text15
            // 
            this.Text15 = new Stimulsoft.Report.Components.StiText();
            this.Text15.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 1.8, 19, 0.5);
            this.Text15.Name = "Text15";
            this.Text15.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text15__GetValue);
            this.Text15.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text15.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text15.Font = new System.Drawing.Font("宋体", 10F);
            this.Text15.Guid = null;
            this.Text15.Indicator = null;
            this.Text15.Interaction = null;
            this.Text15.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text15.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text15.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text16
            // 
            this.Text16 = new Stimulsoft.Report.Components.StiText();
            this.Text16.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 2.3, 19, 0.5);
            this.Text16.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text16.Name = "Text16";
            this.Text16.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text16__GetValue);
            this.Text16.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text16.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text16.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text16.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text16.Font = new System.Drawing.Font("宋体", 10F);
            this.Text16.Guid = null;
            this.Text16.Indicator = null;
            this.Text16.Interaction = null;
            this.Text16.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text16.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text16.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text17
            // 
            this.Text17 = new Stimulsoft.Report.Components.StiText();
            this.Text17.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 2.8, 4.6, 0.5);
            this.Text17.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text17.Name = "Text17";
            this.Text17.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text17__GetValue);
            this.Text17.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text17.Border = new Stimulsoft.Base.Drawing.StiBorder(((Stimulsoft.Base.Drawing.StiBorderSides.None | Stimulsoft.Base.Drawing.StiBorderSides.Left) 
                            | Stimulsoft.Base.Drawing.StiBorderSides.Right), System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text17.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text17.Font = new System.Drawing.Font("宋体", 10F);
            this.Text17.Guid = null;
            this.Text17.Indicator = null;
            this.Text17.Interaction = null;
            this.Text17.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text17.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text17.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text18
            // 
            this.Text18 = new Stimulsoft.Report.Components.StiText();
            this.Text18.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 4.1, 19, 0.5);
            this.Text18.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text18.Name = "Text18";
            this.Text18.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text18__GetValue);
            this.Text18.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text18.Border = new Stimulsoft.Base.Drawing.StiBorder((((Stimulsoft.Base.Drawing.StiBorderSides.None | Stimulsoft.Base.Drawing.StiBorderSides.Left) 
                            | Stimulsoft.Base.Drawing.StiBorderSides.Right) 
                            | Stimulsoft.Base.Drawing.StiBorderSides.Bottom), System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text18.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text18.Font = new System.Drawing.Font("宋体", 10F);
            this.Text18.Guid = null;
            this.Text18.Indicator = null;
            this.Text18.Interaction = null;
            this.Text18.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text18.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text18.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text19
            // 
            this.Text19 = new Stimulsoft.Report.Components.StiText();
            this.Text19.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 5.3, 19, 0.5);
            this.Text19.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text19.Name = "Text19";
            this.Text19.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text19__GetValue);
            this.Text19.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text19.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text19.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text19.Font = new System.Drawing.Font("宋体", 10F);
            this.Text19.Guid = null;
            this.Text19.Indicator = null;
            this.Text19.Interaction = null;
            this.Text19.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text19.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text19.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text21
            // 
            this.Text21 = new Stimulsoft.Report.Components.StiText();
            this.Text21.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(3.3, 6.9, 7.9, 0.5);
            this.Text21.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text21.Name = "Text21";
            this.Text21.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text21__GetValue);
            this.Text21.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text21.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text21.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text21.Font = new System.Drawing.Font("宋体", 10F);
            this.Text21.Guid = null;
            this.Text21.Indicator = null;
            this.Text21.Interaction = null;
            this.Text21.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text21.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text21.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text22
            // 
            this.Text22 = new Stimulsoft.Report.Components.StiText();
            this.Text22.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(11.2, 6.9, 7.8, 0.5);
            this.Text22.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text22.Name = "Text22";
            this.Text22.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text22__GetValue);
            this.Text22.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text22.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text22.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text22.Font = new System.Drawing.Font("宋体", 10F);
            this.Text22.Guid = null;
            this.Text22.Indicator = null;
            this.Text22.Interaction = null;
            this.Text22.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text22.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text22.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text20
            // 
            this.Text20 = new Stimulsoft.Report.Components.StiText();
            this.Text20.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 6.9, 3.3, 0.5);
            this.Text20.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text20.Name = "Text20";
            this.Text20.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text20__GetValue);
            this.Text20.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text20.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text20.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text20.Font = new System.Drawing.Font("宋体", 10F);
            this.Text20.Guid = null;
            this.Text20.Indicator = null;
            this.Text20.Interaction = null;
            this.Text20.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text20.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text20.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // SubReport1
            // 
            this.SubReport1 = new Stimulsoft.Report.Components.StiSubReport();
            this.SubReport1.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 1, 19, 0.6);
            this.SubReport1.Name = "SubReport1";
            this.SubReport1.SubReportPageGuid = "c63396286b7f4adaa42d35a9719d66e0";
            this.SubReport1.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.SubReport1.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.SubReport1.Guid = null;
            this.SubReport1.Interaction = null;
            // 
            // Text34
            // 
            this.Text34 = new Stimulsoft.Report.Components.StiText();
            this.Text34.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0.7, 0.5, 2, 0.5);
            this.Text34.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text34.Name = "Text34";
            this.Text34.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text34__GetValue);
            this.Text34.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text34.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text34.Font = new System.Drawing.Font("宋体", 10F);
            this.Text34.Guid = null;
            this.Text34.Indicator = null;
            this.Text34.Interaction = null;
            this.Text34.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text34.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text34.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text35
            // 
            this.Text35 = new Stimulsoft.Report.Components.StiText();
            this.Text35.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(2.7, 0.5, 2.3, 0.5);
            this.Text35.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text35.Name = "Text35";
            this.Text35.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text35__GetValue);
            this.Text35.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text35.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text35.Font = new System.Drawing.Font("宋体", 10F);
            this.Text35.Guid = null;
            this.Text35.Indicator = null;
            this.Text35.Interaction = null;
            this.Text35.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text35.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text35.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text36
            // 
            this.Text36 = new Stimulsoft.Report.Components.StiText();
            this.Text36.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(5, 0.5, 2.2, 0.5);
            this.Text36.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text36.Name = "Text36";
            this.Text36.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text36__GetValue);
            this.Text36.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text36.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text36.Font = new System.Drawing.Font("宋体", 10F);
            this.Text36.Guid = null;
            this.Text36.Indicator = null;
            this.Text36.Interaction = null;
            this.Text36.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text36.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text36.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text37
            // 
            this.Text37 = new Stimulsoft.Report.Components.StiText();
            this.Text37.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(7.2, 0.5, 1.7, 0.5);
            this.Text37.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text37.Name = "Text37";
            this.Text37.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text37__GetValue);
            this.Text37.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text37.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text37.Font = new System.Drawing.Font("宋体", 10F);
            this.Text37.Guid = null;
            this.Text37.Indicator = null;
            this.Text37.Interaction = null;
            this.Text37.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text37.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text37.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text38
            // 
            this.Text38 = new Stimulsoft.Report.Components.StiText();
            this.Text38.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(8.9, 0.5, 1.8, 0.5);
            this.Text38.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text38.Name = "Text38";
            this.Text38.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text38__GetValue);
            this.Text38.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text38.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text38.Font = new System.Drawing.Font("宋体", 10F);
            this.Text38.Guid = null;
            this.Text38.Indicator = null;
            this.Text38.Interaction = null;
            this.Text38.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text38.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text38.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text39
            // 
            this.Text39 = new Stimulsoft.Report.Components.StiText();
            this.Text39.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(10.7, 0.5, 2.1, 0.5);
            this.Text39.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text39.Name = "Text39";
            this.Text39.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text39__GetValue);
            this.Text39.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text39.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text39.Font = new System.Drawing.Font("宋体", 10F);
            this.Text39.Guid = null;
            this.Text39.Indicator = null;
            this.Text39.Interaction = null;
            this.Text39.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text39.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text39.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text40
            // 
            this.Text40 = new Stimulsoft.Report.Components.StiText();
            this.Text40.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(12.8, 0.5, 2.1, 0.5);
            this.Text40.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text40.Name = "Text40";
            this.Text40.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text40__GetValue);
            this.Text40.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text40.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text40.Font = new System.Drawing.Font("宋体", 10F);
            this.Text40.Guid = null;
            this.Text40.Indicator = null;
            this.Text40.Interaction = null;
            this.Text40.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text40.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text40.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text41
            // 
            this.Text41 = new Stimulsoft.Report.Components.StiText();
            this.Text41.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(14.9, 0.5, 1.6, 0.5);
            this.Text41.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text41.Name = "Text41";
            this.Text41.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text41__GetValue);
            this.Text41.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text41.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text41.Font = new System.Drawing.Font("宋体", 10F);
            this.Text41.Guid = null;
            this.Text41.Indicator = null;
            this.Text41.Interaction = null;
            this.Text41.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text41.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text41.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text42
            // 
            this.Text42 = new Stimulsoft.Report.Components.StiText();
            this.Text42.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(16.5, 0.5, 2.5, 0.5);
            this.Text42.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text42.Name = "Text42";
            this.Text42.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text42__GetValue);
            this.Text42.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text42.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text42.Font = new System.Drawing.Font("宋体", 10F);
            this.Text42.Guid = null;
            this.Text42.Indicator = null;
            this.Text42.Interaction = null;
            this.Text42.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text42.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text42.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text53
            // 
            this.Text53 = new Stimulsoft.Report.Components.StiText();
            this.Text53.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(4.6, 2.8, 7.9, 1);
            this.Text53.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text53.Name = "Text53";
            this.Text53.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text53__GetValue);
            this.Text53.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text53.Border = new Stimulsoft.Base.Drawing.StiBorder((((Stimulsoft.Base.Drawing.StiBorderSides.None | Stimulsoft.Base.Drawing.StiBorderSides.Left) 
                            | Stimulsoft.Base.Drawing.StiBorderSides.Right) 
                            | Stimulsoft.Base.Drawing.StiBorderSides.Bottom), System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text53.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text53.Font = new System.Drawing.Font("宋体", 10F);
            this.Text53.Guid = null;
            this.Text53.Indicator = null;
            this.Text53.Interaction = null;
            this.Text53.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text53.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text53.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text54
            // 
            this.Text54 = new Stimulsoft.Report.Components.StiText();
            this.Text54.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(12.5, 2.8, 6.5, 0.5);
            this.Text54.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text54.Name = "Text54";
            this.Text54.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text54__GetValue);
            this.Text54.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text54.Border = new Stimulsoft.Base.Drawing.StiBorder(((Stimulsoft.Base.Drawing.StiBorderSides.None | Stimulsoft.Base.Drawing.StiBorderSides.Left) 
                            | Stimulsoft.Base.Drawing.StiBorderSides.Right), System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text54.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text54.Font = new System.Drawing.Font("宋体", 10F);
            this.Text54.Guid = null;
            this.Text54.Indicator = null;
            this.Text54.Interaction = null;
            this.Text54.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text54.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text54.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text55
            // 
            this.Text55 = new Stimulsoft.Report.Components.StiText();
            this.Text55.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 3.3, 2.3, 0.5);
            this.Text55.Guid = "2ff53b0d6bd44e4393f7cfc5a9662d54";
            this.Text55.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text55.Name = "Text55";
            this.Text55.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text55__GetValue);
            this.Text55.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text55.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text55.Border = new Stimulsoft.Base.Drawing.StiBorder(((Stimulsoft.Base.Drawing.StiBorderSides.None | Stimulsoft.Base.Drawing.StiBorderSides.Left) 
                            | Stimulsoft.Base.Drawing.StiBorderSides.Bottom), System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text55.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text55.Font = new System.Drawing.Font("宋体", 10F);
            this.Text55.Indicator = null;
            this.Text55.Interaction = null;
            this.Text55.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text55.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text55.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text56
            // 
            this.Text56 = new Stimulsoft.Report.Components.StiText();
            this.Text56.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(12.5, 3.3, 6.5, 0.5);
            this.Text56.Guid = "09742414b6bf457dbfb8c85ff10b79ae";
            this.Text56.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text56.Name = "Text56";
            this.Text56.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text56__GetValue);
            this.Text56.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text56.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text56.Border = new Stimulsoft.Base.Drawing.StiBorder((((Stimulsoft.Base.Drawing.StiBorderSides.None | Stimulsoft.Base.Drawing.StiBorderSides.Left) 
                            | Stimulsoft.Base.Drawing.StiBorderSides.Right) 
                            | Stimulsoft.Base.Drawing.StiBorderSides.Bottom), System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text56.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text56.Font = new System.Drawing.Font("宋体", 10F);
            this.Text56.Indicator = null;
            this.Text56.Interaction = null;
            this.Text56.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text56.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text56.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text57
            // 
            this.Text57 = new Stimulsoft.Report.Components.StiText();
            this.Text57.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(2.3, 3.3, 2.3, 0.5);
            this.Text57.Guid = "28d14aee37974f47ba0377bdf3fd48c8";
            this.Text57.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text57.Name = "Text57";
            this.Text57.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text57__GetValue);
            this.Text57.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text57.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text57.Border = new Stimulsoft.Base.Drawing.StiBorder(((Stimulsoft.Base.Drawing.StiBorderSides.None | Stimulsoft.Base.Drawing.StiBorderSides.Right) 
                            | Stimulsoft.Base.Drawing.StiBorderSides.Bottom), System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.InitializeComponent2();
        }
        
        public void InitializeComponent2()
        {
            this.Text57.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text57.Font = new System.Drawing.Font("宋体", 10F);
            this.Text57.Indicator = null;
            this.Text57.Interaction = null;
            this.Text57.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text57.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text57.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text58
            // 
            this.Text58 = new Stimulsoft.Report.Components.StiText();
            this.Text58.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 5.8, 19, 1.1);
            this.Text58.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text58.Name = "Text58";
            this.Text58.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text58__GetValue);
            this.Text58.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text58.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text58.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text58.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text58.Font = new System.Drawing.Font("宋体", 10F);
            this.Text58.Guid = null;
            this.Text58.Indicator = null;
            this.Text58.Interaction = null;
            this.Text58.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text58.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text58.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text59
            // 
            this.Text59 = new Stimulsoft.Report.Components.StiText();
            this.Text59.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(3.3, 7.4, 7.9, 1.4);
            this.Text59.Guid = "06011706816742d08f9ed8aab2fafbe9";
            this.Text59.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text59.Name = "Text59";
            this.Text59.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text59__GetValue);
            this.Text59.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text59.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Bottom;
            this.Text59.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text59.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text59.Font = new System.Drawing.Font("宋体", 10F);
            this.Text59.Indicator = null;
            this.Text59.Interaction = null;
            this.Text59.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text59.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text59.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text60
            // 
            this.Text60 = new Stimulsoft.Report.Components.StiText();
            this.Text60.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(11.2, 7.4, 7.8, 1.4);
            this.Text60.Guid = "a2260d2ce13740eb9492ec519b16579d";
            this.Text60.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text60.Name = "Text60";
            this.Text60.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text60.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Bottom;
            this.Text60.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text60.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text60.Font = new System.Drawing.Font("宋体", 10F);
            this.Text60.Indicator = null;
            this.Text60.Interaction = null;
            this.Text60.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text60.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text60.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text61
            // 
            this.Text61 = new Stimulsoft.Report.Components.StiText();
            this.Text61.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 7.4, 3.3, 1.4);
            this.Text61.Guid = "a5f3c22597e14bc696c1ea8e88da01a9";
            this.Text61.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text61.Name = "Text61";
            this.Text61.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text61__GetValue);
            this.Text61.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text61.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Bottom;
            this.Text61.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text61.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text61.Font = new System.Drawing.Font("宋体", 10F);
            this.Text61.Indicator = null;
            this.Text61.Interaction = null;
            this.Text61.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text61.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text61.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text62
            // 
            this.Text62 = new Stimulsoft.Report.Components.StiText();
            this.Text62.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 0.5, 0.7, 0.5);
            this.Text62.HorAlignment = Stimulsoft.Base.Drawing.StiTextHorAlignment.Center;
            this.Text62.Name = "Text62";
            this.Text62.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text62.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text62.Font = new System.Drawing.Font("宋体", 10F);
            this.Text62.Guid = null;
            this.Text62.Indicator = null;
            this.Text62.Interaction = null;
            this.Text62.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text62.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text62.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            this.GroupFooterBand1.Guid = null;
            this.GroupFooterBand1.Interaction = null;
            this.Page1.ExcelSheetValue = null;
            this.Page1.Interaction = null;
            this.Page1.Margins = new Stimulsoft.Report.Components.StiMargins(1, 1, 1, 1);
            this.Page1_Watermark = new Stimulsoft.Report.Components.StiWatermark();
            this.Page1_Watermark.Font = new System.Drawing.Font("Arial", 100F);
            this.Page1_Watermark.Image = null;
            this.Page1_Watermark.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.FromArgb(50, 0, 0, 0));
            // 
            // subReport_1
            // 
            this.subReport_1 = new Stimulsoft.Report.Components.StiPage();
            this.subReport_1.Guid = "c63396286b7f4adaa42d35a9719d66e0";
            this.subReport_1.Name = "subReport_1";
            this.subReport_1.PageHeight = 29.7;
            this.subReport_1.PageWidth = 21;
            this.subReport_1.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 2, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.subReport_1.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            // 
            // DataBand2
            // 
            this.DataBand2 = new Stimulsoft.Report.Components.StiDataBand();
            this.DataBand2.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 0.4, 19, 0.5);
            this.DataBand2.DataSourceName = "SMRCNTR";
            this.DataBand2.Name = "DataBand2";
            this.DataBand2.Sort = new System.String[0];
            this.DataBand2.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.None, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.DataBand2.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.DataBand2.BusinessObjectGuid = null;
            // 
            // Text43
            // 
            this.Text43 = new Stimulsoft.Report.Components.StiText();
            this.Text43.CanGrow = true;
            this.Text43.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0.7, 0, 2, 0.5);
            this.Text43.Guid = "0beb9a4a037148c2b6940ae2cd1c7f25";
            this.Text43.Name = "Text43";
            this.Text43.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text43__GetValue);
            this.Text43.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text43.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text43.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text43.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text43.Font = new System.Drawing.Font("Arial", 8F);
            this.Text43.Indicator = null;
            this.Text43.Interaction = null;
            this.Text43.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text43.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text43.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text44
            // 
            this.Text44 = new Stimulsoft.Report.Components.StiText();
            this.Text44.CanGrow = true;
            this.Text44.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(2.7, 0, 2.3, 0.5);
            this.Text44.Guid = "5b743ebeec67480bbd68e2a6d23ad9df";
            this.Text44.Name = "Text44";
            this.Text44.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text44__GetValue);
            this.Text44.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text44.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text44.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text44.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text44.Font = new System.Drawing.Font("Arial", 8F);
            this.Text44.Indicator = null;
            this.Text44.Interaction = null;
            this.Text44.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text44.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text44.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text45
            // 
            this.Text45 = new Stimulsoft.Report.Components.StiText();
            this.Text45.CanGrow = true;
            this.Text45.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(5, 0, 2.2, 0.5);
            this.Text45.Guid = "0b7d925f069d4787a31555699d316173";
            this.Text45.Name = "Text45";
            this.Text45.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text45__GetValue);
            this.Text45.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text45.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text45.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text45.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text45.Font = new System.Drawing.Font("Arial", 8F);
            this.Text45.Indicator = null;
            this.Text45.Interaction = null;
            this.Text45.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text45.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text45.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text46
            // 
            this.Text46 = new Stimulsoft.Report.Components.StiText();
            this.Text46.CanGrow = true;
            this.Text46.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(7.2, 0, 1.7, 0.5);
            this.Text46.Guid = "4d2bef4e966642e29dd57235e9685475";
            this.Text46.Name = "Text46";
            this.Text46.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text46__GetValue);
            this.Text46.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text46.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text46.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text46.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text46.Font = new System.Drawing.Font("Arial", 8F);
            this.Text46.Indicator = null;
            this.Text46.Interaction = null;
            this.Text46.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text46.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text46.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text47
            // 
            this.Text47 = new Stimulsoft.Report.Components.StiText();
            this.Text47.CanGrow = true;
            this.Text47.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(8.9, 0, 1.8, 0.5);
            this.Text47.Guid = "0e93484068f946a3810f6e66d0cb650c";
            this.Text47.Name = "Text47";
            this.Text47.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text47__GetValue);
            this.Text47.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text47.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text47.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text47.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text47.Font = new System.Drawing.Font("Arial", 8F);
            this.Text47.Indicator = null;
            this.Text47.Interaction = null;
            this.Text47.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text47.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text47.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text48
            // 
            this.Text48 = new Stimulsoft.Report.Components.StiText();
            this.Text48.CanGrow = true;
            this.Text48.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(10.7, 0, 2.1, 0.5);
            this.Text48.Guid = "2014e69b78584b3bafc784bfcd49f477";
            this.Text48.Name = "Text48";
            this.Text48.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text48.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text48.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text48.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text48.Font = new System.Drawing.Font("Arial", 8F);
            this.Text48.Indicator = null;
            this.Text48.Interaction = null;
            this.Text48.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text48.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text48.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text49
            // 
            this.Text49 = new Stimulsoft.Report.Components.StiText();
            this.Text49.CanGrow = true;
            this.Text49.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(12.8, 0, 2.1, 0.5);
            this.Text49.Guid = "046d2d88b0534b819cf46b7ef40fcbc5";
            this.Text49.Name = "Text49";
            this.Text49.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text49__GetValue);
            this.Text49.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text49.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text49.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text49.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text49.Font = new System.Drawing.Font("Arial", 8F);
            this.Text49.Indicator = null;
            this.Text49.Interaction = null;
            this.Text49.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text49.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text49.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text50
            // 
            this.Text50 = new Stimulsoft.Report.Components.StiText();
            this.Text50.CanGrow = true;
            this.Text50.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(14.9, 0, 1.6, 0.5);
            this.Text50.Guid = "7aeee4684c724e50980e88b8814dcd8c";
            this.Text50.Name = "Text50";
            this.Text50.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text50__GetValue);
            this.Text50.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text50.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text50.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text50.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text50.Font = new System.Drawing.Font("Arial", 8F);
            this.Text50.Indicator = null;
            this.Text50.Interaction = null;
            this.Text50.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text50.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text50.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text51
            // 
            this.Text51 = new Stimulsoft.Report.Components.StiText();
            this.Text51.CanGrow = true;
            this.Text51.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(16.5, 0, 2.5, 0.5);
            this.Text51.Guid = "eb2e8d9fb26345ffb4a55de51606d273";
            this.Text51.Name = "Text51";
            this.Text51.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text51__GetValue);
            this.Text51.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text51.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text51.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text51.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text51.Font = new System.Drawing.Font("Arial", 8F);
            this.Text51.Indicator = null;
            this.Text51.Interaction = null;
            this.Text51.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text51.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text51.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            // 
            // Text52
            // 
            this.Text52 = new Stimulsoft.Report.Components.StiText();
            this.Text52.CanGrow = true;
            this.Text52.ClientRectangle = new Stimulsoft.Base.Drawing.RectangleD(0, 0, 0.7, 0.5);
            this.Text52.Guid = "faeb0fcf63b4485abf2241f055eddcc1";
            this.Text52.Name = "Text52";
            this.Text52.GetValue += new Stimulsoft.Report.Events.StiGetValueEventHandler(this.Text52__GetValue);
            this.Text52.Type = Stimulsoft.Report.Components.StiSystemTextType.Expression;
            this.Text52.VertAlignment = Stimulsoft.Base.Drawing.StiVertAlignment.Center;
            this.Text52.Border = new Stimulsoft.Base.Drawing.StiBorder(Stimulsoft.Base.Drawing.StiBorderSides.All, System.Drawing.Color.Black, 1, Stimulsoft.Base.Drawing.StiPenStyle.Solid, false, 4, new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black), false);
            this.Text52.Brush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Transparent);
            this.Text52.Font = new System.Drawing.Font("Arial", 8F);
            this.Text52.Indicator = null;
            this.Text52.Interaction = null;
            this.Text52.Margins = new Stimulsoft.Report.Components.StiMargins(0, 0, 0, 0);
            this.Text52.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.Black);
            this.Text52.TextOptions = new Stimulsoft.Base.Drawing.StiTextOptions(false, false, false, 0F, System.Drawing.Text.HotkeyPrefix.None, System.Drawing.StringTrimming.None);
            this.DataBand2.DataRelationName = null;
            this.DataBand2.Guid = null;
            this.DataBand2.Interaction = null;
            this.DataBand2.MasterComponent = null;
            this.subReport_1.ExcelSheetValue = null;
            this.subReport_1.Interaction = null;
            this.subReport_1.Margins = new Stimulsoft.Report.Components.StiMargins(1, 1, 1, 1);
            this.subReport_1_Watermark = new Stimulsoft.Report.Components.StiWatermark();
            this.subReport_1_Watermark.Font = new System.Drawing.Font("Arial", 100F);
            this.subReport_1_Watermark.Image = null;
            this.subReport_1_Watermark.TextBrush = new Stimulsoft.Base.Drawing.StiSolidBrush(System.Drawing.Color.FromArgb(50, 0, 0, 0));
            this.Report_PrinterSettings = new Stimulsoft.Report.Print.StiPrinterSettings();
            this.PrinterSettings = this.Report_PrinterSettings;
            this.Page1.Report = this;
            this.Page1.Watermark = this.Page1_Watermark;
            this.GroupHeaderBand1.Page = this.Page1;
            this.GroupHeaderBand1.Parent = this.Page1;
            this.Text1.Page = this.Page1;
            this.Text1.Parent = this.GroupHeaderBand1;
            this.Text2.Page = this.Page1;
            this.Text2.Parent = this.GroupHeaderBand1;
            this.Text3.Page = this.Page1;
            this.Text3.Parent = this.GroupHeaderBand1;
            this.Text4.Page = this.Page1;
            this.Text4.Parent = this.GroupHeaderBand1;
            this.Text5.Page = this.Page1;
            this.Text5.Parent = this.GroupHeaderBand1;
            this.Text6.Page = this.Page1;
            this.Text6.Parent = this.GroupHeaderBand1;
            this.Text7.Page = this.Page1;
            this.Text7.Parent = this.GroupHeaderBand1;
            this.Text8.Page = this.Page1;
            this.Text8.Parent = this.GroupHeaderBand1;
            this.Text9.Page = this.Page1;
            this.Text9.Parent = this.GroupHeaderBand1;
            this.Text10.Page = this.Page1;
            this.Text10.Parent = this.GroupHeaderBand1;
            this.Text11.Page = this.Page1;
            this.Text11.Parent = this.GroupHeaderBand1;
            this.Text12.Page = this.Page1;
            this.Text12.Parent = this.GroupHeaderBand1;
            this.Text13.Page = this.Page1;
            this.Text13.Parent = this.GroupHeaderBand1;
            this.Text23.Page = this.Page1;
            this.Text23.Parent = this.GroupHeaderBand1;
            this.Text24.Page = this.Page1;
            this.Text24.Parent = this.GroupHeaderBand1;
            this.Text25.Page = this.Page1;
            this.Text25.Parent = this.GroupHeaderBand1;
            this.Text26.Page = this.Page1;
            this.Text26.Parent = this.GroupHeaderBand1;
            this.Text27.Page = this.Page1;
            this.Text27.Parent = this.GroupHeaderBand1;
            this.Text64.Page = this.Page1;
            this.Text64.Parent = this.GroupHeaderBand1;
            this.Text65.Page = this.Page1;
            this.Text65.Parent = this.GroupHeaderBand1;
            this.Text66.Page = this.Page1;
            this.Text66.Parent = this.GroupHeaderBand1;
            this.DataBand1.Page = this.Page1;
            this.DataBand1.Parent = this.Page1;
            this.Text28.Page = this.Page1;
            this.Text28.Parent = this.DataBand1;
            this.Text29.Page = this.Page1;
            this.Text29.Parent = this.DataBand1;
            this.Text30.Page = this.Page1;
            this.Text30.Parent = this.DataBand1;
            this.Text31.Page = this.Page1;
            this.Text31.Parent = this.DataBand1;
            this.Text32.Page = this.Page1;
            this.Text32.Parent = this.DataBand1;
            this.Text33.Page = this.Page1;
            this.Text33.Parent = this.DataBand1;
            this.Text63.Page = this.Page1;
            this.Text63.Parent = this.DataBand1;
            this.GroupFooterBand1.Page = this.Page1;
            this.GroupFooterBand1.Parent = this.Page1;
            this.Text14.Page = this.Page1;
            this.Text14.Parent = this.GroupFooterBand1;
            this.Text15.Page = this.Page1;
            this.Text15.Parent = this.GroupFooterBand1;
            this.Text16.Page = this.Page1;
            this.Text16.Parent = this.GroupFooterBand1;
            this.Text17.Page = this.Page1;
            this.Text17.Parent = this.GroupFooterBand1;
            this.Text18.Page = this.Page1;
            this.Text18.Parent = this.GroupFooterBand1;
            this.Text19.Page = this.Page1;
            this.Text19.Parent = this.GroupFooterBand1;
            this.Text21.Page = this.Page1;
            this.Text21.Parent = this.GroupFooterBand1;
            this.Text22.Page = this.Page1;
            this.Text22.Parent = this.GroupFooterBand1;
            this.Text20.Page = this.Page1;
            this.Text20.Parent = this.GroupFooterBand1;
            this.SubReport1.Page = this.Page1;
            this.SubReport1.Parent = this.GroupFooterBand1;
            this.Text34.Page = this.Page1;
            this.Text34.Parent = this.GroupFooterBand1;
            this.Text35.Page = this.Page1;
            this.Text35.Parent = this.GroupFooterBand1;
            this.Text36.Page = this.Page1;
            this.Text36.Parent = this.GroupFooterBand1;
            this.Text37.Page = this.Page1;
            this.Text37.Parent = this.GroupFooterBand1;
            this.Text38.Page = this.Page1;
            this.Text38.Parent = this.GroupFooterBand1;
            this.Text39.Page = this.Page1;
            this.Text39.Parent = this.GroupFooterBand1;
            this.Text40.Page = this.Page1;
            this.Text40.Parent = this.GroupFooterBand1;
            this.Text41.Page = this.Page1;
            this.Text41.Parent = this.GroupFooterBand1;
            this.Text42.Page = this.Page1;
            this.Text42.Parent = this.GroupFooterBand1;
            this.Text53.Page = this.Page1;
            this.Text53.Parent = this.GroupFooterBand1;
            this.Text54.Page = this.Page1;
            this.Text54.Parent = this.GroupFooterBand1;
            this.Text55.Page = this.Page1;
            this.Text55.Parent = this.GroupFooterBand1;
            this.Text56.Page = this.Page1;
            this.Text56.Parent = this.GroupFooterBand1;
            this.Text57.Page = this.Page1;
            this.Text57.Parent = this.GroupFooterBand1;
            this.Text58.Page = this.Page1;
            this.Text58.Parent = this.GroupFooterBand1;
            this.Text59.Page = this.Page1;
            this.Text59.Parent = this.GroupFooterBand1;
            this.Text60.Page = this.Page1;
            this.Text60.Parent = this.GroupFooterBand1;
            this.Text61.Page = this.Page1;
            this.Text61.Parent = this.GroupFooterBand1;
            this.Text62.Page = this.Page1;
            this.Text62.Parent = this.GroupFooterBand1;
            this.subReport_1.Report = this;
            this.subReport_1.Watermark = this.subReport_1_Watermark;
            this.DataBand2.Page = this.subReport_1;
            this.DataBand2.Parent = this.subReport_1;
            this.Text43.Page = this.subReport_1;
            this.Text43.Parent = this.DataBand2;
            this.Text44.Page = this.subReport_1;
            this.Text44.Parent = this.DataBand2;
            this.Text45.Page = this.subReport_1;
            this.Text45.Parent = this.DataBand2;
            this.Text46.Page = this.subReport_1;
            this.Text46.Parent = this.DataBand2;
            this.Text47.Page = this.subReport_1;
            this.Text47.Parent = this.DataBand2;
            this.Text48.Page = this.subReport_1;
            this.Text48.Parent = this.DataBand2;
            this.Text49.Page = this.subReport_1;
            this.Text49.Parent = this.DataBand2;
            this.Text50.Page = this.subReport_1;
            this.Text50.Parent = this.DataBand2;
            this.Text51.Page = this.subReport_1;
            this.Text51.Parent = this.DataBand2;
            this.Text52.Page = this.subReport_1;
            this.Text52.Parent = this.DataBand2;
            // 
            // Add to GroupHeaderBand1.Components
            // 
            this.GroupHeaderBand1.Components.Clear();
            this.GroupHeaderBand1.Components.AddRange(new Stimulsoft.Report.Components.StiComponent[] {
                        this.Text1,
                        this.Text2,
                        this.Text3,
                        this.Text4,
                        this.Text5,
                        this.Text6,
                        this.Text7,
                        this.Text8,
                        this.Text9,
                        this.Text10,
                        this.Text11,
                        this.Text12,
                        this.Text13,
                        this.Text23,
                        this.Text24,
                        this.Text25,
                        this.Text26,
                        this.Text27,
                        this.Text64,
                        this.Text65,
                        this.Text66});
            // 
            // Add to DataBand1.Components
            // 
            this.DataBand1.Components.Clear();
            this.DataBand1.Components.AddRange(new Stimulsoft.Report.Components.StiComponent[] {
                        this.Text28,
                        this.Text29,
                        this.Text30,
                        this.Text31,
                        this.Text32,
                        this.Text33,
                        this.Text63});
            // 
            // Add to GroupFooterBand1.Components
            // 
            this.GroupFooterBand1.Components.Clear();
            this.GroupFooterBand1.Components.AddRange(new Stimulsoft.Report.Components.StiComponent[] {
                        this.Text14,
                        this.Text15,
                        this.Text16,
                        this.Text17,
                        this.Text18,
                        this.Text19,
                        this.Text21,
                        this.Text22,
                        this.Text20,
                        this.SubReport1,
                        this.Text34,
                        this.Text35,
                        this.Text36,
                        this.Text37,
                        this.Text38,
                        this.Text39,
                        this.Text40,
                        this.Text41,
                        this.Text42,
                        this.Text53,
                        this.Text54,
                        this.Text55,
                        this.Text56,
                        this.Text57,
                        this.Text58,
                        this.Text59,
                        this.Text60,
                        this.Text61,
                        this.Text62});
            // 
            // Add to Page1.Components
            // 
            this.Page1.Components.Clear();
            this.Page1.Components.AddRange(new Stimulsoft.Report.Components.StiComponent[] {
                        this.GroupHeaderBand1,
                        this.DataBand1,
                        this.GroupFooterBand1});
            // 
            // Add to DataBand2.Components
            // 
            this.DataBand2.Components.Clear();
            this.DataBand2.Components.AddRange(new Stimulsoft.Report.Components.StiComponent[] {
                        this.Text43,
                        this.Text44,
                        this.Text45,
                        this.Text46,
                        this.Text47,
                        this.Text48,
                        this.Text49,
                        this.Text50,
                        this.Text51,
                        this.Text52});
            // 
            // Add to subReport_1.Components
            // 
            this.subReport_1.Components.Clear();
            this.subReport_1.Components.AddRange(new Stimulsoft.Report.Components.StiComponent[] {
                        this.DataBand2});
            // 
            // Add to Pages
            // 
            this.Pages.Clear();
            this.Pages.AddRange(new Stimulsoft.Report.Components.StiPage[] {
                        this.Page1,
                        this.subReport_1});
            this.SMSMI.Columns.AddRange(new Stimulsoft.Report.Dictionary.StiDataColumn[] {
                        new Stimulsoft.Report.Dictionary.StiDataColumn("U_ID", "U_ID", "U_ID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LIGHT", "LIGHT", "LIGHT", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("MONTH", "MONTH", "MONTH", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("GROUP_ID", "GROUP_ID", "GROUP_ID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CMP", "CMP", "CMP", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("STN", "STN", "STN", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEP", "DEP", "DEP", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("SHIPMENT_ID", "SHIPMENT_ID", "SHIPMENT_ID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRAN_TYPE", "TRAN_TYPE", "TRAN_TYPE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("STATUS", "STATUS", "STATUS", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DN_ETD", "DN_ETD", "DN_ETD", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("COMBINE_INFO", "COMBINE_INFO", "COMBINE_INFO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("MARKS", "MARKS", "MARKS", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("GOODS", "GOODS", "GOODS", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LGOODS", "LGOODS", "LGOODS", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("BL_RMK", "BL_RMK", "BL_RMK", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("INSTRUCTION", "INSTRUCTION", "INSTRUCTION", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("BOOKING_INFO", "BOOKING_INFO", "BOOKING_INFO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ABNORMAL_RMK", "ABNORMAL_RMK", "ABNORMAL_RMK", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LSP_ABNORMAL_RMK", "LSP_ABNORMAL_RMK", "LSP_ABNORMAL_RMK", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PRODUCTION_DATE", "PRODUCTION_DATE", "PRODUCTION_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PRIORITY", "PRIORITY", "PRIORITY", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PORT_FREE_TIME", "PORT_FREE_TIME", "PORT_FREE_TIME", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("FACT_FREE_TIME", "FACT_FREE_TIME", "FACT_FREE_TIME", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("FREIGHT_CUR", "FREIGHT_CUR", "FREIGHT_CUR", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("FREIGHT_AMT", "FREIGHT_AMT", "FREIGHT_AMT", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CUR", "CUR", "CUR", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("GVALUE", "GVALUE", "GVALUE", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNT20", "CNT20", "CNT20", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNT40", "CNT40", "CNT40", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNT40HQ", "CNT40HQ", "CNT40HQ", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNT_TYPE", "CNT_TYPE", "CNT_TYPE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNT_NUMBER", "CNT_NUMBER", "CNT_NUMBER", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("INSURANCE_AMT", "INSURANCE_AMT", "INSURANCE_AMT", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PKG_NUM", "PKG_NUM", "PKG_NUM", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PKG_UNIT", "PKG_UNIT", "PKG_UNIT", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PKG_UNIT_DESC", "PKG_UNIT_DESC", "PKG_UNIT_DESC", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("GW", "GW", "GW", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("GWU", "GWU", "GWU", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CBM", "CBM", "CBM", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("WEEKLY", "WEEKLY", "WEEKLY", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("YEAR", "YEAR", "YEAR", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRADE_TERM", "TRADE_TERM", "TRADE_TERM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRADETERM_DESCP", "TRADETERM_DESCP", "TRADETERM_DESCP", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("INCOTERM_CD", "INCOTERM_CD", "INCOTERM_CD", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("INCOTERM_DESCP", "INCOTERM_DESCP", "INCOTERM_DESCP", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LOADING_FROM", "LOADING_FROM", "LOADING_FROM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LOADING_TO", "LOADING_TO", "LOADING_TO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PICKUP_CDATE", "PICKUP_CDATE", "PICKUP_CDATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CARRIER", "CARRIER", "CARRIER", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CARRIER_NM", "CARRIER_NM", "CARRIER_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("SCAC_CD", "SCAC_CD", "SCAC_CD", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("FRT_TERM", "FRT_TERM", "FRT_TERM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CON_FREE_TIME", "CON_FREE_TIME", "CON_FREE_TIME", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("MASTER_NO", "MASTER_NO", "MASTER_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("HOUSE_NO", "HOUSE_NO", "HOUSE_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("SVC_CONTACT", "SVC_CONTACT", "SVC_CONTACT", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("WH_TIME", "WH_TIME", "WH_TIME", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POR_CD", "POR_CD", "POR_CD", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POR_CNTY", "POR_CNTY", "POR_CNTY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POR_NAME", "POR_NAME", "POR_NAME", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("IB_WINDOW", "IB_WINDOW", "IB_WINDOW", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("FACT_TIME", "FACT_TIME", "FACT_TIME", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POL_CD", "POL_CD", "POL_CD", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POL_CNTY", "POL_CNTY", "POL_CNTY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POL_NAME", "POL_NAME", "POL_NAME", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PORT_ETA", "PORT_ETA", "PORT_ETA", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("EMPTY_TIME", "EMPTY_TIME", "EMPTY_TIME", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POD_CD", "POD_CD", "POD_CD", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POD_CNTY", "POD_CNTY", "POD_CNTY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POD_NAME", "POD_NAME", "POD_NAME", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PORT_ATA", "PORT_ATA", "PORT_ATA", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("BACK_LOCATION", "BACK_LOCATION", "BACK_LOCATION", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEST_CD", "DEST_CD", "DEST_CD", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEST_CNTY", "DEST_CNTY", "DEST_CNTY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEST_NAME", "DEST_NAME", "DEST_NAME", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PORT_RLS_DATE", "PORT_RLS_DATE", "PORT_RLS_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("WM_CUT_DATE", "WM_CUT_DATE", "WM_CUT_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("VESSEL1", "VESSEL1", "VESSEL1", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("VOYAGE1", "VOYAGE1", "VOYAGE1", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ETD1", "ETD1", "ETD1", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ETA1", "ETA1", "ETA1", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("VESSEL2", "VESSEL2", "VESSEL2", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("VOYAGE2", "VOYAGE2", "VOYAGE2", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ETD2", "ETD2", "ETD2", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ETA2", "ETA2", "ETA2", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("VESSEL3", "VESSEL3", "VESSEL3", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("VOYAGE3", "VOYAGE3", "VOYAGE3", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ETD3", "ETD3", "ETD3", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ETA3", "ETA3", "ETA3", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("VESSEL4", "VESSEL4", "VESSEL4", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("VOYAGE4", "VOYAGE4", "VOYAGE4", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ETD4", "ETD4", "ETD4", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ETA4", "ETA4", "ETA4", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ETD", "ETD", "ETD", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ETA", "ETA", "ETA", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ATP", "ATP", "ATP", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ATD", "ATD", "ATD", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ATA", "ATA", "ATA", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("OEXPORTER", "OEXPORTER", "OEXPORTER", typeof(string))});
            this.SMSMI.Columns.AddRange(new Stimulsoft.Report.Dictionary.StiDataColumn[] {
                        new Stimulsoft.Report.Dictionary.StiDataColumn("OEXPORTER_NM", "OEXPORTER_NM", "OEXPORTER_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("OEXPORTER_ADDR", "OEXPORTER_ADDR", "OEXPORTER_ADDR", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("OIMPORTER", "OIMPORTER", "OIMPORTER", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("OIMPORTER_NM", "OIMPORTER_NM", "OIMPORTER_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("OIMPORTER_ADDR", "OIMPORTER_ADDR", "OIMPORTER_ADDR", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("IMPORT_NO", "IMPORT_NO", "IMPORT_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEC_NO", "DEC_NO", "DEC_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CER_NO", "CER_NO", "CER_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEC_DATE", "DEC_DATE", "DEC_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("REL_DATE", "REL_DATE", "REL_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("INSPECTION", "INSPECTION", "INSPECTION", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEC_CUST", "DEC_CUST", "DEC_CUST", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEC_REPLY", "DEC_REPLY", "DEC_REPLY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_IMPORTER", "TC_IMPORTER", "TC_IMPORTER", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_IMPORTER_NM", "TC_IMPORTER_NM", "TC_IMPORTER_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_IMPORTER_ADDR", "TC_IMPORTER_ADDR", "TC_IMPORTER_ADDR", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_IMPORT_NO", "TC_IMPORT_NO", "TC_IMPORT_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_DEC_NO", "TC_DEC_NO", "TC_DEC_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_CER_NO", "TC_CER_NO", "TC_CER_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_DEC_DATE", "TC_DEC_DATE", "TC_DEC_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_REL_DATE", "TC_REL_DATE", "TC_REL_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_INSPECTION", "TC_INSPECTION", "TC_INSPECTION", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_DEC_CUST", "TC_DEC_CUST", "TC_DEC_CUST", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_DEC_REPLY", "TC_DEC_REPLY", "TC_DEC_REPLY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CREATE_DATE", "CREATE_DATE", "CREATE_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CREATE_BY", "CREATE_BY", "CREATE_BY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("MODIFY_DATE", "MODIFY_DATE", "MODIFY_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("MODIFY_BY", "MODIFY_BY", "MODIFY_BY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("AIRLINE_CD", "AIRLINE_CD", "AIRLINE_CD", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("AIRLINE_NM", "AIRLINE_NM", "AIRLINE_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QTY", "QTY", "QTY", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QTYU", "QTYU", "QTYU", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("VW", "VW", "VW", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("OF_COST", "OF_COST", "OF_COST", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRUCK_COST", "TRUCK_COST", "TRUCK_COST", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CW", "CW", "CW", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("HORN", "HORN", "HORN", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("BATTERY", "BATTERY", "BATTERY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRUCK_CD", "TRUCK_CD", "TRUCK_CD", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("O_LOCATION", "O_LOCATION", "O_LOCATION", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CSTATUS", "CSTATUS", "CSTATUS", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("BSTATUS", "BSTATUS", "BSTATUS", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DN_NO", "DN_NO", "DN_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LOT_NO", "LOT_NO", "LOT_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("BL_WIN", "BL_WIN", "BL_WIN", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TERMINAL_CD", "TERMINAL_CD", "TERMINAL_CD", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TERMINAL_NM", "TERMINAL_NM", "TERMINAL_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("HS_CODE", "HS_CODE", "HS_CODE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("HS_CODE_NO", "HS_CODE_NO", "HS_CODE_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_HS_CODE", "TC_HS_CODE", "TC_HS_CODE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_HS_CODE_NO", "TC_HS_CODE_NO", "TC_HS_CODE_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PRODUCT_TYPE", "PRODUCT_TYPE", "PRODUCT_TYPE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CONTAINER_YARD_CD", "CONTAINER_YARD_CD", "CONTAINER_YARD_CD", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CONTAINER_YARD_NM", "CONTAINER_YARD_NM", "CONTAINER_YARD_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("EXTRA_SRV", "EXTRA_SRV", "EXTRA_SRV", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("EXTRA_MEMO", "EXTRA_MEMO", "EXTRA_MEMO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("FORK", "FORK", "FORK", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("O_UID", "O_UID", "O_UID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POL1", "POL1", "POL1", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POL_NM1", "POL_NM1", "POL_NM1", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POD1", "POD1", "POD1", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POD_NM1", "POD_NM1", "POD_NM1", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRAN_TYPE1", "TRAN_TYPE1", "TRAN_TYPE1", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRUCKER1", "TRUCKER1", "TRUCKER1", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRUCKER_NM1", "TRUCKER_NM1", "TRUCKER_NM1", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POL2", "POL2", "POL2", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POL_NM2", "POL_NM2", "POL_NM2", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POD2", "POD2", "POD2", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POD_NM2", "POD_NM2", "POD_NM2", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRAN_TYPE2", "TRAN_TYPE2", "TRAN_TYPE2", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRUCKER2", "TRUCKER2", "TRUCKER2", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRUCKER_NM2", "TRUCKER_NM2", "TRUCKER_NM2", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POL3", "POL3", "POL3", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POL_NM3", "POL_NM3", "POL_NM3", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POD3", "POD3", "POD3", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POD_NM3", "POD_NM3", "POD_NM3", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRAN_TYPE3", "TRAN_TYPE3", "TRAN_TYPE3", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRUCKER3", "TRUCKER3", "TRUCKER3", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRUCKER_NM3", "TRUCKER_NM3", "TRUCKER_NM3", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("T_ATD1", "T_ATD1", "T_ATD1", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("T_ETD1", "T_ETD1", "T_ETD1", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("T_ETA1", "T_ETA1", "T_ETA1", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("T_ATA1", "T_ATA1", "T_ATA1", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("T_ATD2", "T_ATD2", "T_ATD2", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("T_ETD2", "T_ETD2", "T_ETD2", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("T_ETA2", "T_ETA2", "T_ETA2", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("T_ATA2", "T_ATA2", "T_ATA2", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("T_ATD3", "T_ATD3", "T_ATD3", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("T_ETD3", "T_ETD3", "T_ETD3", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("T_ETA3", "T_ETA3", "T_ETA3", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("T_ATA3", "T_ATA3", "T_ATA3", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("POD_MDATE", "POD_MDATE", "POD_MDATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("HTS_CODE", "HTS_CODE", "HTS_CODE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("COUNTRY", "COUNTRY", "COUNTRY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEST_REGION", "DEST_REGION", "DEST_REGION", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNTR_INFO", "CNTR_INFO", "CNTR_INFO", typeof(string))});
            this.DataSources.Add(this.SMSMI);
            this.SMRV.Columns.AddRange(new Stimulsoft.Report.Dictionary.StiDataColumn[] {
                        new Stimulsoft.Report.Dictionary.StiDataColumn("U_ID", "U_ID", "U_ID", typeof(System.Guid)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("RESERVE_NO", "RESERVE_NO", "RESERVE_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("STATUS", "STATUS", "STATUS", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("GROUP_ID", "GROUP_ID", "GROUP_ID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CMP", "CMP", "CMP", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEP", "DEP", "DEP", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("WS_CD", "WS_CD", "WS_CD", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("REF_GATE", "REF_GATE", "REF_GATE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CALL_DATE", "CALL_DATE", "CALL_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("USE_DATE", "USE_DATE", "USE_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("RESERVE_DATE", "RESERVE_DATE", "RESERVE_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("RESERVE_FROM", "RESERVE_FROM", "RESERVE_FROM", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("HOUR", "HOUR", "HOUR", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNTR_NO", "CNTR_NO", "CNTR_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRUCKER", "TRUCKER", "TRUCKER", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRUCK_NO", "TRUCK_NO", "TRUCK_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DRIVER", "DRIVER", "DRIVER", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TEL", "TEL", "TEL", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CREATE_CMP", "CREATE_CMP", "CREATE_CMP", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CREATE_DEP", "CREATE_DEP", "CREATE_DEP", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CREATE_EXT", "CREATE_EXT", "CREATE_EXT", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CREATE_BY", "CREATE_BY", "CREATE_BY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CREATE_DATE", "CREATE_DATE", "CREATE_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ORDER_BY", "ORDER_BY", "ORDER_BY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ORDER_DATE", "ORDER_DATE", "ORDER_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CONFIRM_BY", "CONFIRM_BY", "CONFIRM_BY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CONFIRM_DATE", "CONFIRM_DATE", "CONFIRM_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("GATE_NO", "GATE_NO", "GATE_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNTY_TYPE", "CNTY_TYPE", "CNTY_TYPE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("SEAL_NO1", "SEAL_NO1", "SEAL_NO1", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("SEAL_NO2", "SEAL_NO2", "SEAL_NO2", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CUTPORT_DATE", "CUTPORT_DATE", "CUTPORT_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PICK_DATE", "PICK_DATE", "PICK_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("SEAL_DATE", "SEAL_DATE", "SEAL_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("APORT_DATE", "APORT_DATE", "APORT_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ATD", "ATD", "ATD", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CARRIER", "CARRIER", "CARRIER", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CARRIER_NM", "CARRIER_NM", "CARRIER_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("YARD", "YARD", "YARD", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("YARD_NM", "YARD_NM", "YARD_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("INYARD_DATE", "INYARD_DATE", "INYARD_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("OUTYARD_DATE", "OUTYARD_DATE", "OUTYARD_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("REMARK", "REMARK", "REMARK", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("MOVE_NUMBER", "MOVE_NUMBER", "MOVE_NUMBER", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DN_NO", "DN_NO", "DN_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("RESERVE_TDATE", "RESERVE_TDATE", "RESERVE_TDATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PRODUCT_LINE", "PRODUCT_LINE", "PRODUCT_LINE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("SHIPMENT_INFO", "SHIPMENT_INFO", "SHIPMENT_INFO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("RESERVE_TO", "RESERVE_TO", "RESERVE_TO", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("RESERVE_HOUR", "RESERVE_HOUR", "RESERVE_HOUR", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TEMP_GATENO", "TEMP_GATENO", "TEMP_GATENO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("SEAL_BY", "SEAL_BY", "SEAL_BY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("IN_BY", "IN_BY", "IN_BY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("OUT_BY", "OUT_BY", "OUT_BY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("IN_DATE", "IN_DATE", "IN_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("OUT_DATE", "OUT_DATE", "OUT_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRUCK_CNTRNO", "TRUCK_CNTRNO", "TRUCK_CNTRNO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRUCK_SEALNO", "TRUCK_SEALNO", "TRUCK_SEALNO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("S_CODE", "S_CODE", "S_CODE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TEMP_WSCD", "TEMP_WSCD", "TEMP_WSCD", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TEMP_RDATE", "TEMP_RDATE", "TEMP_RDATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TEMP_RFROM", "TEMP_RFROM", "TEMP_RFROM", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TEMP_RH", "TEMP_RH", "TEMP_RH", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("SHIPMENT_ID", "SHIPMENT_ID", "SHIPMENT_ID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LTRUCK_NO", "LTRUCK_NO", "LTRUCK_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LDRIVER", "LDRIVER", "LDRIVER", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LTEL", "LTEL", "LTEL", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QTY", "QTY", "QTY", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QTYU", "QTYU", "QTYU", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("NW", "NW", "NW", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("NWU", "NWU", "NWU", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("GW", "GW", "GW", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("GWU", "GWU", "GWU", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CBM", "CBM", "CBM", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LODING_FROM", "LODING_FROM", "LODING_FROM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LODING_TO", "LODING_TO", "LODING_TO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRUCKER_NM", "TRUCKER_NM", "TRUCKER_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("IS_BATCH", "IS_BATCH", "IS_BATCH", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRAN_TYPE", "TRAN_TYPE", "TRAN_TYPE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CARGO_TYPE", "CARGO_TYPE", "CARGO_TYPE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CUT_PORT_DATE", "CUT_PORT_DATE", "CUT_PORT_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNT_NUMBER", "CNT_NUMBER", "CNT_NUMBER", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNT_TYPE", "CNT_TYPE", "CNT_TYPE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TARE_WEIGHT", "TARE_WEIGHT", "TARE_WEIGHT", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TWU", "TWU", "TWU", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TTL_VGM", "TTL_VGM", "TTL_VGM", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DRIVER_ID", "DRIVER_ID", "DRIVER_ID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PORT_DATE", "PORT_DATE", "PORT_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("BAT_NO", "BAT_NO", "BAT_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LDRIVER_ID", "LDRIVER_ID", "LDRIVER_ID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("EPT_IDATE", "EPT_IDATE", "EPT_IDATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("EPT_ODATE", "EPT_ODATE", "EPT_ODATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PUT_DATE", "PUT_DATE", "PUT_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DIM", "DIM", "DIM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("SMCREATE_BY", "SMCREATE_BY", "SMCREATE_BY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("MF_NO", "MF_NO", "MF_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNTR_BE_DAY", "CNTR_BE_DAY", "CNTR_BE_DAY", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("FAC_HOLD_DAY", "FAC_HOLD_DAY", "FAC_HOLD_DAY", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNTR_INFAC_DAY", "CNTR_INFAC_DAY", "CNTR_INFAC_DAY", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PLANT", "PLANT", "PLANT", typeof(string))});
            this.SMRV.Columns.AddRange(new Stimulsoft.Report.Dictionary.StiDataColumn[] {
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LOT_NO", "LOT_NO", "LOT_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("RV_TYPE", "RV_TYPE", "RV_TYPE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CAR_TYPE", "CAR_TYPE", "CAR_TYPE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRS_MODE", "TRS_MODE", "TRS_MODE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CANCEL_DATE", "CANCEL_DATE", "CANCEL_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PICK_AREA", "PICK_AREA", "PICK_AREA", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PICK_AREA_NM", "PICK_AREA_NM", "PICK_AREA_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DLV_AREA", "DLV_AREA", "DLV_AREA", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DLV_AREA_NM", "DLV_AREA_NM", "DLV_AREA_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("GATEIN_DATE", "GATEIN_DATE", "GATEIN_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DLV_ADDR", "DLV_ADDR", "DLV_ADDR", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ADDR_CODE", "ADDR_CODE", "ADDR_CODE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("OUTER_FLAG", "OUTER_FLAG", "OUTER_FLAG", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ARRIVAL_DATE", "ARRIVAL_DATE", "ARRIVAL_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRAIN_FLIGHT", "TRAIN_FLIGHT", "TRAIN_FLIGHT", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ORD_NO", "ORD_NO", "ORD_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CALL_TYPE", "CALL_TYPE", "CALL_TYPE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ORD_INFO", "ORD_INFO", "ORD_INFO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRUCK_RMK", "TRUCK_RMK", "TRUCK_RMK", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("WS_RMK", "WS_RMK", "WS_RMK", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("NEW_SEAL", "NEW_SEAL", "NEW_SEAL", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QUOT_NO", "QUOT_NO", "QUOT_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEC_INFO", "DEC_INFO", "DEC_INFO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("NEW_CNTRNO", "NEW_CNTRNO", "NEW_CNTRNO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("NIGHT_MOVE", "NIGHT_MOVE", "NIGHT_MOVE", typeof(decimal))});
            this.DataSources.Add(this.SMRV);
            this.SMBID.Columns.AddRange(new Stimulsoft.Report.Dictionary.StiDataColumn[] {
                        new Stimulsoft.Report.Dictionary.StiDataColumn("U_ID", "U_ID", "U_ID", typeof(System.Guid)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("SHIPMENT_ID", "SHIPMENT_ID", "SHIPMENT_ID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEBIT_NO", "DEBIT_NO", "DEBIT_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("VAT_NO", "VAT_NO", "VAT_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LSP_NO", "LSP_NO", "LSP_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("BILL_TO", "BILL_TO", "BILL_TO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("BL_NO", "BL_NO", "BL_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("STATUS", "STATUS", "STATUS", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CHG_CD", "CHG_CD", "CHG_CD", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CHG_DESCP", "CHG_DESCP", "CHG_DESCP", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QCUR", "QCUR", "QCUR", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QUNIT_PRICE", "QUNIT_PRICE", "QUNIT_PRICE", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QCHG_UNIT", "QCHG_UNIT", "QCHG_UNIT", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QQTY", "QQTY", "QQTY", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QAMT", "QAMT", "QAMT", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QTAX", "QTAX", "QTAX", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CUR", "CUR", "CUR", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("UNIT_PRICE", "UNIT_PRICE", "UNIT_PRICE", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CHG_UNIT", "CHG_UNIT", "CHG_UNIT", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QTY", "QTY", "QTY", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("BAMT", "BAMT", "BAMT", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TAX", "TAX", "TAX", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("REMARK", "REMARK", "REMARK", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CHECK_DESCP", "CHECK_DESCP", "CHECK_DESCP", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("COST_CENTER", "COST_CENTER", "COST_CENTER", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PROFIT_CENTER", "PROFIT_CENTER", "PROFIT_CENTER", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("U_FID", "U_FID", "U_FID", typeof(System.Guid)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QUOT_ID", "QUOT_ID", "QUOT_ID", typeof(System.Guid)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PARTY_TYPE", "PARTY_TYPE", "PARTY_TYPE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QTYU", "QTYU", "QTYU", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("EX_RATE", "EX_RATE", "EX_RATE", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LAMT", "LAMT", "LAMT", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QT_DATA", "QT_DATA", "QT_DATA", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEBIT_DATE", "DEBIT_DATE", "DEBIT_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QEX_RATE", "QEX_RATE", "QEX_RATE", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LSP_NM", "LSP_NM", "LSP_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("BILL_NM", "BILL_NM", "BILL_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CHG_TYPE", "CHG_TYPE", "CHG_TYPE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CREATE_DATE", "CREATE_DATE", "CREATE_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CREATE_BY", "CREATE_BY", "CREATE_BY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("MODIFY_DATE", "MODIFY_DATE", "MODIFY_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("MODIFY_BY", "MODIFY_BY", "MODIFY_BY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("COST_TONM", "COST_TONM", "COST_TONM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QUOT_NO", "QUOT_NO", "QUOT_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("RFQ_NO", "RFQ_NO", "RFQ_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QLAMT", "QLAMT", "QLAMT", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("GROUP_ID", "GROUP_ID", "GROUP_ID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CMP", "CMP", "CMP", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("STN", "STN", "STN", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("IS_SHARE", "IS_SHARE", "IS_SHARE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEBIT_TO", "DEBIT_TO", "DEBIT_TO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEBIT_NM", "DEBIT_NM", "DEBIT_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNTR_STD_QTY", "CNTR_STD_QTY", "CNTR_STD_QTY", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("IPART_NO", "IPART_NO", "IPART_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("FSTATUS", "FSTATUS", "FSTATUS", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DOWNLOAD_USER", "DOWNLOAD_USER", "DOWNLOAD_USER", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DOWNLOAD_TIME", "DOWNLOAD_TIME", "DOWNLOAD_TIME", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("BI_REMARK", "BI_REMARK", "BI_REMARK", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TRAN_TYPE", "TRAN_TYPE", "TRAN_TYPE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("APPROVE_BY", "APPROVE_BY", "APPROVE_BY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("APPROVE_DATE", "APPROVE_DATE", "APPROVE_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("BOOKING_BY", "BOOKING_BY", "BOOKING_BY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("APPROVE_STATUS", "APPROVE_STATUS", "APPROVE_STATUS", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("UNAPPROVE_MSG", "UNAPPROVE_MSG", "UNAPPROVE_MSG", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("UPLOAD_USER", "UPLOAD_USER", "UPLOAD_USER", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("UPLOAD_TIME", "UPLOAD_TIME", "UPLOAD_TIME", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("VOID_USER", "VOID_USER", "VOID_USER", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("VOID_TIME", "VOID_TIME", "VOID_TIME", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("UNAPPROVE_DESCP", "UNAPPROVE_DESCP", "UNAPPROVE_DESCP", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DN_NO", "DN_NO", "DN_NO", typeof(string))});
            this.DataSources.Add(this.SMBID);
            this.SMRCNTR.Columns.AddRange(new Stimulsoft.Report.Dictionary.StiDataColumn[] {
                        new Stimulsoft.Report.Dictionary.StiDataColumn("U_ID", "U_ID", "U_ID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("SHIPMENT_ID", "SHIPMENT_ID", "SHIPMENT_ID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CMP", "CMP", "CMP", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNTR_NO", "CNTR_NO", "CNTR_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNTR_TYPE", "CNTR_TYPE", "CNTR_TYPE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("SEAL_NO1", "SEAL_NO1", "SEAL_NO1", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("SEAL_NO2", "SEAL_NO2", "SEAL_NO2", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DN_NO", "DN_NO", "DN_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DIVISION_DESCP", "DIVISION_DESCP", "DIVISION_DESCP", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QTY", "QTY", "QTY", typeof(int)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QTYU", "QTYU", "QTYU", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("GW", "GW", "GW", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("GWU", "GWU", "GWU", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CBM", "CBM", "CBM", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("IMPORT_NO", "IMPORT_NO", "IMPORT_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEC_NO", "DEC_NO", "DEC_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CER_NO", "CER_NO", "CER_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEC_DATE", "DEC_DATE", "DEC_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("REL_DATE", "REL_DATE", "REL_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("INSPECTION", "INSPECTION", "INSPECTION", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEC_CUST", "DEC_CUST", "DEC_CUST", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEC_REPLY", "DEC_REPLY", "DEC_REPLY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_IMPORT_NO", "TC_IMPORT_NO", "TC_IMPORT_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_DEC_NO", "TC_DEC_NO", "TC_DEC_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_CER_NO", "TC_CER_NO", "TC_CER_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_DEC_DATE", "TC_DEC_DATE", "TC_DEC_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_REL_DATE", "TC_REL_DATE", "TC_REL_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_INSPECTION", "TC_INSPECTION", "TC_INSPECTION", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_DEC_CUST", "TC_DEC_CUST", "TC_DEC_CUST", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_DEC_REPLY", "TC_DEC_REPLY", "TC_DEC_REPLY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("RESERVE_NO", "RESERVE_NO", "RESERVE_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DLV_AREA", "DLV_AREA", "DLV_AREA", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DLV_AREA_NM", "DLV_AREA_NM", "DLV_AREA_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ADDR_CODE", "ADDR_CODE", "ADDR_CODE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DLV_ADDR", "DLV_ADDR", "DLV_ADDR", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ORD_NO", "ORD_NO", "ORD_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PICKUP_DATE", "PICKUP_DATE", "PICKUP_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ARRIVAL_DATE", "ARRIVAL_DATE", "ARRIVAL_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("WS_CD", "WS_CD", "WS_CD", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LOT_NO", "LOT_NO", "LOT_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PICK_AREA", "PICK_AREA", "PICK_AREA", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PICK_AREA_NM", "PICK_AREA_NM", "PICK_AREA_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CANCEL_NO", "CANCEL_NO", "CANCEL_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("GROUP_ID", "GROUP_ID", "GROUP_ID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("STN", "STN", "STN", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEP", "DEP", "DEP", typeof(string))});
            this.DataSources.Add(this.SMRCNTR);
            this.SMRDN.Columns.AddRange(new Stimulsoft.Report.Dictionary.StiDataColumn[] {
                        new Stimulsoft.Report.Dictionary.StiDataColumn("U_ID", "U_ID", "U_ID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("GROUP_ID", "GROUP_ID", "GROUP_ID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CMP", "CMP", "CMP", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("STN", "STN", "STN", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEP", "DEP", "DEP", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("SHIPMENT_ID", "SHIPMENT_ID", "SHIPMENT_ID", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DN_NO", "DN_NO", "DN_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("INV_NO", "INV_NO", "INV_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("NW", "NW", "NW", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("GW", "GW", "GW", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("GWU", "GWU", "GWU", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CBM", "CBM", "CBM", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CBMU", "CBMU", "CBMU", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QTY", "QTY", "QTY", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("QTYU", "QTYU", "QTYU", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PKG_NUM", "PKG_NUM", "PKG_NUM", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PKG_UNIT", "PKG_UNIT", "PKG_UNIT", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PKG_UNIT_DESC", "PKG_UNIT_DESC", "PKG_UNIT_DESC", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNT20", "CNT20", "CNT20", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNT40", "CNT40", "CNT40", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CNT40HQ", "CNT40HQ", "CNT40HQ", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("OTH_CNT_TYPE", "OTH_CNT_TYPE", "OTH_CNT_TYPE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("OTH_CNT_NUM", "OTH_CNT_NUM", "OTH_CNT_NUM", typeof(decimal)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("IMPORT_NO", "IMPORT_NO", "IMPORT_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEC_NO", "DEC_NO", "DEC_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CER_NO", "CER_NO", "CER_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEC_DATE", "DEC_DATE", "DEC_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("REL_DATE", "REL_DATE", "REL_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("INSPECTION", "INSPECTION", "INSPECTION", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEC_CUST", "DEC_CUST", "DEC_CUST", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DEC_REPLY", "DEC_REPLY", "DEC_REPLY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_IMPORT_NO", "TC_IMPORT_NO", "TC_IMPORT_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_DEC_NO", "TC_DEC_NO", "TC_DEC_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_CER_NO", "TC_CER_NO", "TC_CER_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_DEC_DATE", "TC_DEC_DATE", "TC_DEC_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_REL_DATE", "TC_REL_DATE", "TC_REL_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_INSPECTION", "TC_INSPECTION", "TC_INSPECTION", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_DEC_CUST", "TC_DEC_CUST", "TC_DEC_CUST", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("TC_DEC_REPLY", "TC_DEC_REPLY", "TC_DEC_REPLY", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DLV_AREA", "DLV_AREA", "DLV_AREA", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DLV_AREA_NM", "DLV_AREA_NM", "DLV_AREA_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ADDR_CODE", "ADDR_CODE", "ADDR_CODE", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("DLV_ADDR", "DLV_ADDR", "DLV_ADDR", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("RESERVE_NO", "RESERVE_NO", "RESERVE_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("WS_CD", "WS_CD", "WS_CD", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PICKUP_DATE", "PICKUP_DATE", "PICKUP_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ARRIVAL_DATE", "ARRIVAL_DATE", "ARRIVAL_DATE", typeof(DateTime)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ORD_NO", "ORD_NO", "ORD_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("LOT_NO", "LOT_NO", "LOT_NO", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("ADD_POINT", "ADD_POINT", "ADD_POINT", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PICK_AREA", "PICK_AREA", "PICK_AREA", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("PICK_AREA_NM", "PICK_AREA_NM", "PICK_AREA_NM", typeof(string)),
                        new Stimulsoft.Report.Dictionary.StiDataColumn("CANCEL_NO", "CANCEL_NO", "CANCEL_NO", typeof(string))});
            this.DataSources.Add(this.SMRDN);
            this.Dictionary.Databases.Add(new Stimulsoft.Report.Dictionary.StiXmlDatabase("data", "C:\\Users\\dean\\Desktop\\date\\Schemas.xml", "C:\\Users\\dean\\Desktop\\date\\Data.xml"));
        }
        
        #region DataSource SMSMI
        public class SMSMIDataSource : Stimulsoft.Report.Dictionary.StiDataTableSource
        {
            
            public SMSMIDataSource() : 
                    base("data.SMSMI", "SMSMI")
            {
            }
            
            public virtual string U_ID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["U_ID"], typeof(string), true)));
                }
            }
            
            public virtual string LIGHT
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["LIGHT"], typeof(string), true)));
                }
            }
            
            public virtual string MONTH
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["MONTH"], typeof(string), true)));
                }
            }
            
            public virtual string GROUP_ID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["GROUP_ID"], typeof(string), true)));
                }
            }
            
            public virtual string CMP
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CMP"], typeof(string), true)));
                }
            }
            
            public virtual string STN
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["STN"], typeof(string), true)));
                }
            }
            
            public virtual string DEP
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEP"], typeof(string), true)));
                }
            }
            
            public virtual string SHIPMENT_ID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["SHIPMENT_ID"], typeof(string), true)));
                }
            }
            
            public virtual string TRAN_TYPE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRAN_TYPE"], typeof(string), true)));
                }
            }
            
            public virtual string STATUS
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["STATUS"], typeof(string), true)));
                }
            }
            
            public virtual DateTime DN_ETD
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["DN_ETD"], typeof(DateTime), true)));
                }
            }
            
            public virtual string COMBINE_INFO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["COMBINE_INFO"], typeof(string), true)));
                }
            }
            
            public virtual string MARKS
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["MARKS"], typeof(string), true)));
                }
            }
            
            public virtual string GOODS
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["GOODS"], typeof(string), true)));
                }
            }
            
            public virtual string LGOODS
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["LGOODS"], typeof(string), true)));
                }
            }
            
            public virtual string BL_RMK
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["BL_RMK"], typeof(string), true)));
                }
            }
            
            public virtual string INSTRUCTION
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["INSTRUCTION"], typeof(string), true)));
                }
            }
            
            public virtual string BOOKING_INFO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["BOOKING_INFO"], typeof(string), true)));
                }
            }
            
            public virtual string ABNORMAL_RMK
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["ABNORMAL_RMK"], typeof(string), true)));
                }
            }
            
            public virtual string LSP_ABNORMAL_RMK
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["LSP_ABNORMAL_RMK"], typeof(string), true)));
                }
            }
            
            public virtual DateTime PRODUCTION_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["PRODUCTION_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual int PRIORITY
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["PRIORITY"], typeof(int), true)));
                }
            }
            
            public virtual int PORT_FREE_TIME
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["PORT_FREE_TIME"], typeof(int), true)));
                }
            }
            
            public virtual int FACT_FREE_TIME
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["FACT_FREE_TIME"], typeof(int), true)));
                }
            }
            
            public virtual string FREIGHT_CUR
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["FREIGHT_CUR"], typeof(string), true)));
                }
            }
            
            public virtual decimal FREIGHT_AMT
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["FREIGHT_AMT"], typeof(decimal), true)));
                }
            }
            
            public virtual string CUR
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CUR"], typeof(string), true)));
                }
            }
            
            public virtual decimal GVALUE
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["GVALUE"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal CNT20
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["CNT20"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal CNT40
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["CNT40"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal CNT40HQ
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["CNT40HQ"], typeof(decimal), true)));
                }
            }
            
            public virtual string CNT_TYPE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CNT_TYPE"], typeof(string), true)));
                }
            }
            
            public virtual decimal CNT_NUMBER
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["CNT_NUMBER"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal INSURANCE_AMT
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["INSURANCE_AMT"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal PKG_NUM
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["PKG_NUM"], typeof(decimal), true)));
                }
            }
            
            public virtual string PKG_UNIT
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["PKG_UNIT"], typeof(string), true)));
                }
            }
            
            public virtual string PKG_UNIT_DESC
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["PKG_UNIT_DESC"], typeof(string), true)));
                }
            }
            
            public virtual decimal GW
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["GW"], typeof(decimal), true)));
                }
            }
            
            public virtual string GWU
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["GWU"], typeof(string), true)));
                }
            }
            
            public virtual decimal CBM
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["CBM"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal WEEKLY
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["WEEKLY"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal YEAR
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["YEAR"], typeof(decimal), true)));
                }
            }
            
            public virtual string TRADE_TERM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRADE_TERM"], typeof(string), true)));
                }
            }
            
            public virtual string TRADETERM_DESCP
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRADETERM_DESCP"], typeof(string), true)));
                }
            }
            
            public virtual string INCOTERM_CD
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["INCOTERM_CD"], typeof(string), true)));
                }
            }
            
            public virtual string INCOTERM_DESCP
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["INCOTERM_DESCP"], typeof(string), true)));
                }
            }
            
            public virtual string LOADING_FROM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["LOADING_FROM"], typeof(string), true)));
                }
            }
            
            public virtual string LOADING_TO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["LOADING_TO"], typeof(string), true)));
                }
            }
            
            public virtual DateTime PICKUP_CDATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["PICKUP_CDATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string CARRIER
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CARRIER"], typeof(string), true)));
                }
            }
            
            public virtual string CARRIER_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CARRIER_NM"], typeof(string), true)));
                }
            }
            
            public virtual string SCAC_CD
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["SCAC_CD"], typeof(string), true)));
                }
            }
            
            public virtual string FRT_TERM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["FRT_TERM"], typeof(string), true)));
                }
            }
            
            public virtual int CON_FREE_TIME
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["CON_FREE_TIME"], typeof(int), true)));
                }
            }
            
            public virtual string MASTER_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["MASTER_NO"], typeof(string), true)));
                }
            }
            
            public virtual string HOUSE_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["HOUSE_NO"], typeof(string), true)));
                }
            }
            
            public virtual string SVC_CONTACT
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["SVC_CONTACT"], typeof(string), true)));
                }
            }
            
            public virtual DateTime WH_TIME
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["WH_TIME"], typeof(DateTime), true)));
                }
            }
            
            public virtual string POR_CD
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POR_CD"], typeof(string), true)));
                }
            }
            
            public virtual string POR_CNTY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POR_CNTY"], typeof(string), true)));
                }
            }
            
            public virtual string POR_NAME
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POR_NAME"], typeof(string), true)));
                }
            }
            
            public virtual string IB_WINDOW
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["IB_WINDOW"], typeof(string), true)));
                }
            }
            
            public virtual DateTime FACT_TIME
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["FACT_TIME"], typeof(DateTime), true)));
                }
            }
            
            public virtual string POL_CD
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POL_CD"], typeof(string), true)));
                }
            }
            
            public virtual string POL_CNTY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POL_CNTY"], typeof(string), true)));
                }
            }
            
            public virtual string POL_NAME
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POL_NAME"], typeof(string), true)));
                }
            }
            
            public virtual DateTime PORT_ETA
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["PORT_ETA"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime EMPTY_TIME
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["EMPTY_TIME"], typeof(DateTime), true)));
                }
            }
            
            public virtual string POD_CD
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POD_CD"], typeof(string), true)));
                }
            }
            
            public virtual string POD_CNTY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POD_CNTY"], typeof(string), true)));
                }
            }
            
            public virtual string POD_NAME
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POD_NAME"], typeof(string), true)));
                }
            }
            
            public virtual DateTime PORT_ATA
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["PORT_ATA"], typeof(DateTime), true)));
                }
            }
            
            public virtual string BACK_LOCATION
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["BACK_LOCATION"], typeof(string), true)));
                }
            }
            
            public virtual string DEST_CD
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEST_CD"], typeof(string), true)));
                }
            }
            
            public virtual string DEST_CNTY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEST_CNTY"], typeof(string), true)));
                }
            }
            
            public virtual string DEST_NAME
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEST_NAME"], typeof(string), true)));
                }
            }
            
            public virtual DateTime PORT_RLS_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["PORT_RLS_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime WM_CUT_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["WM_CUT_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string VESSEL1
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["VESSEL1"], typeof(string), true)));
                }
            }
            
            public virtual string VOYAGE1
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["VOYAGE1"], typeof(string), true)));
                }
            }
            
            public virtual DateTime ETD1
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ETD1"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime ETA1
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ETA1"], typeof(DateTime), true)));
                }
            }
            
            public virtual string VESSEL2
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["VESSEL2"], typeof(string), true)));
                }
            }
            
            public virtual string VOYAGE2
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["VOYAGE2"], typeof(string), true)));
                }
            }
            
            public virtual DateTime ETD2
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ETD2"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime ETA2
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ETA2"], typeof(DateTime), true)));
                }
            }
            
            public virtual string VESSEL3
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["VESSEL3"], typeof(string), true)));
                }
            }
            
            public virtual string VOYAGE3
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["VOYAGE3"], typeof(string), true)));
                }
            }
            
            public virtual DateTime ETD3
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ETD3"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime ETA3
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ETA3"], typeof(DateTime), true)));
                }
            }
            
            public virtual string VESSEL4
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["VESSEL4"], typeof(string), true)));
                }
            }
            
            public virtual string VOYAGE4
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["VOYAGE4"], typeof(string), true)));
                }
            }
            
            public virtual DateTime ETD4
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ETD4"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime ETA4
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ETA4"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime ETD
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ETD"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime ETA
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ETA"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime ATP
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ATP"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime ATD
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ATD"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime ATA
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ATA"], typeof(DateTime), true)));
                }
            }
            
            public virtual string OEXPORTER
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["OEXPORTER"], typeof(string), true)));
                }
            }
            
            public virtual string OEXPORTER_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["OEXPORTER_NM"], typeof(string), true)));
                }
            }
            
            public virtual string OEXPORTER_ADDR
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["OEXPORTER_ADDR"], typeof(string), true)));
                }
            }
            
            public virtual string OIMPORTER
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["OIMPORTER"], typeof(string), true)));
                }
            }
            
            public virtual string OIMPORTER_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["OIMPORTER_NM"], typeof(string), true)));
                }
            }
            
            public virtual string OIMPORTER_ADDR
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["OIMPORTER_ADDR"], typeof(string), true)));
                }
            }
            
            public virtual string IMPORT_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["IMPORT_NO"], typeof(string), true)));
                }
            }
            
            public virtual string DEC_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEC_NO"], typeof(string), true)));
                }
            }
            
            public virtual string CER_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CER_NO"], typeof(string), true)));
                }
            }
            
            public virtual DateTime DEC_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["DEC_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime REL_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["REL_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string INSPECTION
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["INSPECTION"], typeof(string), true)));
                }
            }
            
            public virtual string DEC_CUST
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEC_CUST"], typeof(string), true)));
                }
            }
            
            public virtual string DEC_REPLY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEC_REPLY"], typeof(string), true)));
                }
            }
            
            public virtual string TC_IMPORTER
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_IMPORTER"], typeof(string), true)));
                }
            }
            
            public virtual string TC_IMPORTER_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_IMPORTER_NM"], typeof(string), true)));
                }
            }
            
            public virtual string TC_IMPORTER_ADDR
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_IMPORTER_ADDR"], typeof(string), true)));
                }
            }
            
            public virtual string TC_IMPORT_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_IMPORT_NO"], typeof(string), true)));
                }
            }
            
            public virtual string TC_DEC_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_DEC_NO"], typeof(string), true)));
                }
            }
            
            public virtual string TC_CER_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_CER_NO"], typeof(string), true)));
                }
            }
            
            public virtual DateTime TC_DEC_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["TC_DEC_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime TC_REL_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["TC_REL_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string TC_INSPECTION
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_INSPECTION"], typeof(string), true)));
                }
            }
            
            public virtual string TC_DEC_CUST
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_DEC_CUST"], typeof(string), true)));
                }
            }
            
            public virtual string TC_DEC_REPLY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_DEC_REPLY"], typeof(string), true)));
                }
            }
            
            public virtual DateTime CREATE_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["CREATE_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string CREATE_BY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CREATE_BY"], typeof(string), true)));
                }
            }
            
            public virtual DateTime MODIFY_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["MODIFY_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string MODIFY_BY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["MODIFY_BY"], typeof(string), true)));
                }
            }
            
            public virtual string AIRLINE_CD
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["AIRLINE_CD"], typeof(string), true)));
                }
            }
            
            public virtual string AIRLINE_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["AIRLINE_NM"], typeof(string), true)));
                }
            }
            
            public virtual int QTY
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["QTY"], typeof(int), true)));
                }
            }
            
            public virtual string QTYU
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["QTYU"], typeof(string), true)));
                }
            }
            
            public virtual decimal VW
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["VW"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal OF_COST
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["OF_COST"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal TRUCK_COST
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["TRUCK_COST"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal CW
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["CW"], typeof(decimal), true)));
                }
            }
            
            public virtual string HORN
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["HORN"], typeof(string), true)));
                }
            }
            
            public virtual string BATTERY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["BATTERY"], typeof(string), true)));
                }
            }
            
            public virtual string TRUCK_CD
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRUCK_CD"], typeof(string), true)));
                }
            }
            
            public virtual string O_LOCATION
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["O_LOCATION"], typeof(string), true)));
                }
            }
            
            public virtual string CSTATUS
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CSTATUS"], typeof(string), true)));
                }
            }
            
            public virtual string BSTATUS
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["BSTATUS"], typeof(string), true)));
                }
            }
            
            public virtual string DN_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DN_NO"], typeof(string), true)));
                }
            }
            
            public virtual string LOT_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["LOT_NO"], typeof(string), true)));
                }
            }
            
            public virtual string BL_WIN
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["BL_WIN"], typeof(string), true)));
                }
            }
            
            public virtual string TERMINAL_CD
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TERMINAL_CD"], typeof(string), true)));
                }
            }
            
            public virtual string TERMINAL_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TERMINAL_NM"], typeof(string), true)));
                }
            }
            
            public virtual string HS_CODE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["HS_CODE"], typeof(string), true)));
                }
            }
            
            public virtual string HS_CODE_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["HS_CODE_NO"], typeof(string), true)));
                }
            }
            
            public virtual string TC_HS_CODE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_HS_CODE"], typeof(string), true)));
                }
            }
            
            public virtual string TC_HS_CODE_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_HS_CODE_NO"], typeof(string), true)));
                }
            }
            
            public virtual string PRODUCT_TYPE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["PRODUCT_TYPE"], typeof(string), true)));
                }
            }
            
            public virtual string CONTAINER_YARD_CD
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CONTAINER_YARD_CD"], typeof(string), true)));
                }
            }
            
            public virtual string CONTAINER_YARD_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CONTAINER_YARD_NM"], typeof(string), true)));
                }
            }
            
            public virtual string EXTRA_SRV
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["EXTRA_SRV"], typeof(string), true)));
                }
            }
            
            public virtual string EXTRA_MEMO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["EXTRA_MEMO"], typeof(string), true)));
                }
            }
            
            public virtual decimal FORK
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["FORK"], typeof(decimal), true)));
                }
            }
            
            public virtual string O_UID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["O_UID"], typeof(string), true)));
                }
            }
            
            public virtual string POL1
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POL1"], typeof(string), true)));
                }
            }
            
            public virtual string POL_NM1
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POL_NM1"], typeof(string), true)));
                }
            }
            
            public virtual string POD1
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POD1"], typeof(string), true)));
                }
            }
            
            public virtual string POD_NM1
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POD_NM1"], typeof(string), true)));
                }
            }
            
            public virtual string TRAN_TYPE1
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRAN_TYPE1"], typeof(string), true)));
                }
            }
            
            public virtual string TRUCKER1
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRUCKER1"], typeof(string), true)));
                }
            }
            
            public virtual string TRUCKER_NM1
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRUCKER_NM1"], typeof(string), true)));
                }
            }
            
            public virtual string POL2
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POL2"], typeof(string), true)));
                }
            }
            
            public virtual string POL_NM2
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POL_NM2"], typeof(string), true)));
                }
            }
            
            public virtual string POD2
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POD2"], typeof(string), true)));
                }
            }
            
            public virtual string POD_NM2
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POD_NM2"], typeof(string), true)));
                }
            }
            
            public virtual string TRAN_TYPE2
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRAN_TYPE2"], typeof(string), true)));
                }
            }
            
            public virtual string TRUCKER2
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRUCKER2"], typeof(string), true)));
                }
            }
            
            public virtual string TRUCKER_NM2
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRUCKER_NM2"], typeof(string), true)));
                }
            }
            
            public virtual string POL3
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POL3"], typeof(string), true)));
                }
            }
            
            public virtual string POL_NM3
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POL_NM3"], typeof(string), true)));
                }
            }
            
            public virtual string POD3
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POD3"], typeof(string), true)));
                }
            }
            
            public virtual string POD_NM3
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["POD_NM3"], typeof(string), true)));
                }
            }
            
            public virtual string TRAN_TYPE3
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRAN_TYPE3"], typeof(string), true)));
                }
            }
            
            public virtual string TRUCKER3
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRUCKER3"], typeof(string), true)));
                }
            }
            
            public virtual string TRUCKER_NM3
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRUCKER_NM3"], typeof(string), true)));
                }
            }
            
            public virtual DateTime T_ATD1
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["T_ATD1"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime T_ETD1
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["T_ETD1"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime T_ETA1
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["T_ETA1"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime T_ATA1
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["T_ATA1"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime T_ATD2
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["T_ATD2"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime T_ETD2
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["T_ETD2"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime T_ETA2
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["T_ETA2"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime T_ATA2
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["T_ATA2"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime T_ATD3
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["T_ATD3"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime T_ETD3
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["T_ETD3"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime T_ETA3
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["T_ETA3"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime T_ATA3
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["T_ATA3"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime POD_MDATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["POD_MDATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string HTS_CODE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["HTS_CODE"], typeof(string), true)));
                }
            }
            
            public virtual string COUNTRY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["COUNTRY"], typeof(string), true)));
                }
            }
            
            public virtual string DEST_REGION
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEST_REGION"], typeof(string), true)));
                }
            }
            
            public virtual string CNTR_INFO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CNTR_INFO"], typeof(string), true)));
                }
            }
        }
        #endregion DataSource SMSMI
        
        #region DataSource SMRV
        public class SMRVDataSource : Stimulsoft.Report.Dictionary.StiDataTableSource
        {
            
            public SMRVDataSource() : 
                    base("data.SMRV", "SMRV")
            {
            }
            
            public virtual System.Guid U_ID
            {
                get
                {
                    return ((System.Guid)(StiReport.ChangeType(this["U_ID"], typeof(System.Guid), true)));
                }
            }
            
            public virtual string RESERVE_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["RESERVE_NO"], typeof(string), true)));
                }
            }
            
            public virtual string STATUS
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["STATUS"], typeof(string), true)));
                }
            }
            
            public virtual string GROUP_ID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["GROUP_ID"], typeof(string), true)));
                }
            }
            
            public virtual string CMP
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CMP"], typeof(string), true)));
                }
            }
            
            public virtual string DEP
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEP"], typeof(string), true)));
                }
            }
            
            public virtual string WS_CD
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["WS_CD"], typeof(string), true)));
                }
            }
            
            public virtual string REF_GATE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["REF_GATE"], typeof(string), true)));
                }
            }
            
            public virtual DateTime CALL_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["CALL_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime USE_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["USE_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime RESERVE_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["RESERVE_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual decimal RESERVE_FROM
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["RESERVE_FROM"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal HOUR
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["HOUR"], typeof(decimal), true)));
                }
            }
            
            public virtual string CNTR_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CNTR_NO"], typeof(string), true)));
                }
            }
            
            public virtual string TRUCKER
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRUCKER"], typeof(string), true)));
                }
            }
            
            public virtual string TRUCK_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRUCK_NO"], typeof(string), true)));
                }
            }
            
            public virtual string DRIVER
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DRIVER"], typeof(string), true)));
                }
            }
            
            public virtual string TEL
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TEL"], typeof(string), true)));
                }
            }
            
            public virtual string CREATE_CMP
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CREATE_CMP"], typeof(string), true)));
                }
            }
            
            public virtual string CREATE_DEP
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CREATE_DEP"], typeof(string), true)));
                }
            }
            
            public virtual string CREATE_EXT
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CREATE_EXT"], typeof(string), true)));
                }
            }
            
            public virtual string CREATE_BY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CREATE_BY"], typeof(string), true)));
                }
            }
            
            public virtual DateTime CREATE_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["CREATE_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string ORDER_BY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["ORDER_BY"], typeof(string), true)));
                }
            }
            
            public virtual DateTime ORDER_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ORDER_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string CONFIRM_BY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CONFIRM_BY"], typeof(string), true)));
                }
            }
            
            public virtual DateTime CONFIRM_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["CONFIRM_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string GATE_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["GATE_NO"], typeof(string), true)));
                }
            }
            
            public virtual string CNTY_TYPE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CNTY_TYPE"], typeof(string), true)));
                }
            }
            
            public virtual string SEAL_NO1
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["SEAL_NO1"], typeof(string), true)));
                }
            }
            
            public virtual string SEAL_NO2
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["SEAL_NO2"], typeof(string), true)));
                }
            }
            
            public virtual DateTime CUTPORT_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["CUTPORT_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime PICK_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["PICK_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime SEAL_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["SEAL_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime APORT_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["APORT_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime ATD
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ATD"], typeof(DateTime), true)));
                }
            }
            
            public virtual string CARRIER
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CARRIER"], typeof(string), true)));
                }
            }
            
            public virtual string CARRIER_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CARRIER_NM"], typeof(string), true)));
                }
            }
            
            public virtual string YARD
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["YARD"], typeof(string), true)));
                }
            }
            
            public virtual string YARD_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["YARD_NM"], typeof(string), true)));
                }
            }
            
            public virtual DateTime INYARD_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["INYARD_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime OUTYARD_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["OUTYARD_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string REMARK
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["REMARK"], typeof(string), true)));
                }
            }
            
            public virtual string MOVE_NUMBER
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["MOVE_NUMBER"], typeof(string), true)));
                }
            }
            
            public virtual string DN_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DN_NO"], typeof(string), true)));
                }
            }
            
            public virtual DateTime RESERVE_TDATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["RESERVE_TDATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string PRODUCT_LINE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["PRODUCT_LINE"], typeof(string), true)));
                }
            }
            
            public virtual string SHIPMENT_INFO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["SHIPMENT_INFO"], typeof(string), true)));
                }
            }
            
            public virtual decimal RESERVE_TO
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["RESERVE_TO"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal RESERVE_HOUR
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["RESERVE_HOUR"], typeof(decimal), true)));
                }
            }
            
            public virtual string TEMP_GATENO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TEMP_GATENO"], typeof(string), true)));
                }
            }
            
            public virtual string SEAL_BY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["SEAL_BY"], typeof(string), true)));
                }
            }
            
            public virtual string IN_BY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["IN_BY"], typeof(string), true)));
                }
            }
            
            public virtual string OUT_BY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["OUT_BY"], typeof(string), true)));
                }
            }
            
            public virtual DateTime IN_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["IN_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime OUT_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["OUT_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string TRUCK_CNTRNO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRUCK_CNTRNO"], typeof(string), true)));
                }
            }
            
            public virtual string TRUCK_SEALNO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRUCK_SEALNO"], typeof(string), true)));
                }
            }
            
            public virtual string S_CODE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["S_CODE"], typeof(string), true)));
                }
            }
            
            public virtual string TEMP_WSCD
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TEMP_WSCD"], typeof(string), true)));
                }
            }
            
            public virtual DateTime TEMP_RDATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["TEMP_RDATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual decimal TEMP_RFROM
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["TEMP_RFROM"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal TEMP_RH
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["TEMP_RH"], typeof(decimal), true)));
                }
            }
            
            public virtual string SHIPMENT_ID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["SHIPMENT_ID"], typeof(string), true)));
                }
            }
            
            public virtual string LTRUCK_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["LTRUCK_NO"], typeof(string), true)));
                }
            }
            
            public virtual string LDRIVER
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["LDRIVER"], typeof(string), true)));
                }
            }
            
            public virtual string LTEL
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["LTEL"], typeof(string), true)));
                }
            }
            
            public virtual decimal QTY
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["QTY"], typeof(decimal), true)));
                }
            }
            
            public virtual string QTYU
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["QTYU"], typeof(string), true)));
                }
            }
            
            public virtual decimal NW
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["NW"], typeof(decimal), true)));
                }
            }
            
            public virtual string NWU
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["NWU"], typeof(string), true)));
                }
            }
            
            public virtual decimal GW
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["GW"], typeof(decimal), true)));
                }
            }
            
            public virtual string GWU
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["GWU"], typeof(string), true)));
                }
            }
            
            public virtual decimal CBM
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["CBM"], typeof(decimal), true)));
                }
            }
            
            public virtual string LODING_FROM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["LODING_FROM"], typeof(string), true)));
                }
            }
            
            public virtual string LODING_TO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["LODING_TO"], typeof(string), true)));
                }
            }
            
            public virtual string TRUCKER_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRUCKER_NM"], typeof(string), true)));
                }
            }
            
            public virtual string IS_BATCH
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["IS_BATCH"], typeof(string), true)));
                }
            }
            
            public virtual string TRAN_TYPE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRAN_TYPE"], typeof(string), true)));
                }
            }
            
            public virtual string CARGO_TYPE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CARGO_TYPE"], typeof(string), true)));
                }
            }
            
            public virtual DateTime CUT_PORT_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["CUT_PORT_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual decimal CNT_NUMBER
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["CNT_NUMBER"], typeof(decimal), true)));
                }
            }
            
            public virtual string CNT_TYPE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CNT_TYPE"], typeof(string), true)));
                }
            }
            
            public virtual decimal TARE_WEIGHT
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["TARE_WEIGHT"], typeof(decimal), true)));
                }
            }
            
            public virtual string TWU
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TWU"], typeof(string), true)));
                }
            }
            
            public virtual decimal TTL_VGM
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["TTL_VGM"], typeof(decimal), true)));
                }
            }
            
            public virtual string DRIVER_ID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DRIVER_ID"], typeof(string), true)));
                }
            }
            
            public virtual DateTime PORT_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["PORT_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string BAT_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["BAT_NO"], typeof(string), true)));
                }
            }
            
            public virtual string LDRIVER_ID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["LDRIVER_ID"], typeof(string), true)));
                }
            }
            
            public virtual DateTime EPT_IDATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["EPT_IDATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime EPT_ODATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["EPT_ODATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime PUT_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["PUT_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string DIM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DIM"], typeof(string), true)));
                }
            }
            
            public virtual string SMCREATE_BY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["SMCREATE_BY"], typeof(string), true)));
                }
            }
            
            public virtual string MF_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["MF_NO"], typeof(string), true)));
                }
            }
            
            public virtual decimal CNTR_BE_DAY
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["CNTR_BE_DAY"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal FAC_HOLD_DAY
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["FAC_HOLD_DAY"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal CNTR_INFAC_DAY
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["CNTR_INFAC_DAY"], typeof(decimal), true)));
                }
            }
            
            public virtual string PLANT
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["PLANT"], typeof(string), true)));
                }
            }
            
            public virtual string LOT_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["LOT_NO"], typeof(string), true)));
                }
            }
            
            public virtual string RV_TYPE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["RV_TYPE"], typeof(string), true)));
                }
            }
            
            public virtual string CAR_TYPE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CAR_TYPE"], typeof(string), true)));
                }
            }
            
            public virtual string TRS_MODE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRS_MODE"], typeof(string), true)));
                }
            }
            
            public virtual DateTime CANCEL_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["CANCEL_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string PICK_AREA
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["PICK_AREA"], typeof(string), true)));
                }
            }
            
            public virtual string PICK_AREA_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["PICK_AREA_NM"], typeof(string), true)));
                }
            }
            
            public virtual string DLV_AREA
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DLV_AREA"], typeof(string), true)));
                }
            }
            
            public virtual string DLV_AREA_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DLV_AREA_NM"], typeof(string), true)));
                }
            }
            
            public virtual DateTime GATEIN_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["GATEIN_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string DLV_ADDR
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DLV_ADDR"], typeof(string), true)));
                }
            }
            
            public virtual string ADDR_CODE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["ADDR_CODE"], typeof(string), true)));
                }
            }
            
            public virtual string OUTER_FLAG
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["OUTER_FLAG"], typeof(string), true)));
                }
            }
            
            public virtual DateTime ARRIVAL_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ARRIVAL_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string TRAIN_FLIGHT
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRAIN_FLIGHT"], typeof(string), true)));
                }
            }
            
            public virtual string ORD_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["ORD_NO"], typeof(string), true)));
                }
            }
            
            public virtual string CALL_TYPE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CALL_TYPE"], typeof(string), true)));
                }
            }
            
            public virtual string ORD_INFO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["ORD_INFO"], typeof(string), true)));
                }
            }
            
            public virtual string TRUCK_RMK
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRUCK_RMK"], typeof(string), true)));
                }
            }
            
            public virtual string WS_RMK
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["WS_RMK"], typeof(string), true)));
                }
            }
            
            public virtual string NEW_SEAL
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["NEW_SEAL"], typeof(string), true)));
                }
            }
            
            public virtual string QUOT_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["QUOT_NO"], typeof(string), true)));
                }
            }
            
            public virtual string DEC_INFO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEC_INFO"], typeof(string), true)));
                }
            }
            
            public virtual string NEW_CNTRNO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["NEW_CNTRNO"], typeof(string), true)));
                }
            }
            
            public virtual decimal NIGHT_MOVE
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["NIGHT_MOVE"], typeof(decimal), true)));
                }
            }
        }
        #endregion DataSource SMRV
        
        #region DataSource SMBID
        public class SMBIDDataSource : Stimulsoft.Report.Dictionary.StiDataTableSource
        {
            
            public SMBIDDataSource() : 
                    base("data.SMBID", "SMBID")
            {
            }
            
            public virtual System.Guid U_ID
            {
                get
                {
                    return ((System.Guid)(StiReport.ChangeType(this["U_ID"], typeof(System.Guid), true)));
                }
            }
            
            public virtual string SHIPMENT_ID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["SHIPMENT_ID"], typeof(string), true)));
                }
            }
            
            public virtual string DEBIT_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEBIT_NO"], typeof(string), true)));
                }
            }
            
            public virtual string VAT_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["VAT_NO"], typeof(string), true)));
                }
            }
            
            public virtual string LSP_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["LSP_NO"], typeof(string), true)));
                }
            }
            
            public virtual string BILL_TO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["BILL_TO"], typeof(string), true)));
                }
            }
            
            public virtual string BL_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["BL_NO"], typeof(string), true)));
                }
            }
            
            public virtual string STATUS
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["STATUS"], typeof(string), true)));
                }
            }
            
            public virtual string CHG_CD
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CHG_CD"], typeof(string), true)));
                }
            }
            
            public virtual string CHG_DESCP
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CHG_DESCP"], typeof(string), true)));
                }
            }
            
            public virtual string QCUR
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["QCUR"], typeof(string), true)));
                }
            }
            
            public virtual decimal QUNIT_PRICE
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["QUNIT_PRICE"], typeof(decimal), true)));
                }
            }
            
            public virtual string QCHG_UNIT
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["QCHG_UNIT"], typeof(string), true)));
                }
            }
            
            public virtual decimal QQTY
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["QQTY"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal QAMT
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["QAMT"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal QTAX
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["QTAX"], typeof(decimal), true)));
                }
            }
            
            public virtual string CUR
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CUR"], typeof(string), true)));
                }
            }
            
            public virtual decimal UNIT_PRICE
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["UNIT_PRICE"], typeof(decimal), true)));
                }
            }
            
            public virtual string CHG_UNIT
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CHG_UNIT"], typeof(string), true)));
                }
            }
            
            public virtual decimal QTY
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["QTY"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal BAMT
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["BAMT"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal TAX
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["TAX"], typeof(decimal), true)));
                }
            }
            
            public virtual string REMARK
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["REMARK"], typeof(string), true)));
                }
            }
            
            public virtual string CHECK_DESCP
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CHECK_DESCP"], typeof(string), true)));
                }
            }
            
            public virtual string COST_CENTER
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["COST_CENTER"], typeof(string), true)));
                }
            }
            
            public virtual string PROFIT_CENTER
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["PROFIT_CENTER"], typeof(string), true)));
                }
            }
            
            public virtual System.Guid U_FID
            {
                get
                {
                    return ((System.Guid)(StiReport.ChangeType(this["U_FID"], typeof(System.Guid), true)));
                }
            }
            
            public virtual System.Guid QUOT_ID
            {
                get
                {
                    return ((System.Guid)(StiReport.ChangeType(this["QUOT_ID"], typeof(System.Guid), true)));
                }
            }
            
            public virtual string PARTY_TYPE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["PARTY_TYPE"], typeof(string), true)));
                }
            }
            
            public virtual string QTYU
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["QTYU"], typeof(string), true)));
                }
            }
            
            public virtual decimal EX_RATE
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["EX_RATE"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal LAMT
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["LAMT"], typeof(decimal), true)));
                }
            }
            
            public virtual string QT_DATA
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["QT_DATA"], typeof(string), true)));
                }
            }
            
            public virtual DateTime DEBIT_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["DEBIT_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual decimal QEX_RATE
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["QEX_RATE"], typeof(decimal), true)));
                }
            }
            
            public virtual string LSP_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["LSP_NM"], typeof(string), true)));
                }
            }
            
            public virtual string BILL_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["BILL_NM"], typeof(string), true)));
                }
            }
            
            public virtual string CHG_TYPE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CHG_TYPE"], typeof(string), true)));
                }
            }
            
            public virtual DateTime CREATE_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["CREATE_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string CREATE_BY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CREATE_BY"], typeof(string), true)));
                }
            }
            
            public virtual DateTime MODIFY_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["MODIFY_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string MODIFY_BY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["MODIFY_BY"], typeof(string), true)));
                }
            }
            
            public virtual string COST_TONM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["COST_TONM"], typeof(string), true)));
                }
            }
            
            public virtual string QUOT_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["QUOT_NO"], typeof(string), true)));
                }
            }
            
            public virtual string RFQ_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["RFQ_NO"], typeof(string), true)));
                }
            }
            
            public virtual decimal QLAMT
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["QLAMT"], typeof(decimal), true)));
                }
            }
            
            public virtual string GROUP_ID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["GROUP_ID"], typeof(string), true)));
                }
            }
            
            public virtual string CMP
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CMP"], typeof(string), true)));
                }
            }
            
            public virtual string STN
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["STN"], typeof(string), true)));
                }
            }
            
            public virtual string IS_SHARE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["IS_SHARE"], typeof(string), true)));
                }
            }
            
            public virtual string DEBIT_TO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEBIT_TO"], typeof(string), true)));
                }
            }
            
            public virtual string DEBIT_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEBIT_NM"], typeof(string), true)));
                }
            }
            
            public virtual decimal CNTR_STD_QTY
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["CNTR_STD_QTY"], typeof(decimal), true)));
                }
            }
            
            public virtual string IPART_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["IPART_NO"], typeof(string), true)));
                }
            }
            
            public virtual string FSTATUS
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["FSTATUS"], typeof(string), true)));
                }
            }
            
            public virtual string DOWNLOAD_USER
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DOWNLOAD_USER"], typeof(string), true)));
                }
            }
            
            public virtual DateTime DOWNLOAD_TIME
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["DOWNLOAD_TIME"], typeof(DateTime), true)));
                }
            }
            
            public virtual string BI_REMARK
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["BI_REMARK"], typeof(string), true)));
                }
            }
            
            public virtual string TRAN_TYPE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TRAN_TYPE"], typeof(string), true)));
                }
            }
            
            public virtual string APPROVE_BY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["APPROVE_BY"], typeof(string), true)));
                }
            }
            
            public virtual DateTime APPROVE_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["APPROVE_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string BOOKING_BY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["BOOKING_BY"], typeof(string), true)));
                }
            }
            
            public virtual string APPROVE_STATUS
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["APPROVE_STATUS"], typeof(string), true)));
                }
            }
            
            public virtual string UNAPPROVE_MSG
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["UNAPPROVE_MSG"], typeof(string), true)));
                }
            }
            
            public virtual string UPLOAD_USER
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["UPLOAD_USER"], typeof(string), true)));
                }
            }
            
            public virtual DateTime UPLOAD_TIME
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["UPLOAD_TIME"], typeof(DateTime), true)));
                }
            }
            
            public virtual string VOID_USER
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["VOID_USER"], typeof(string), true)));
                }
            }
            
            public virtual DateTime VOID_TIME
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["VOID_TIME"], typeof(DateTime), true)));
                }
            }
            
            public virtual string UNAPPROVE_DESCP
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["UNAPPROVE_DESCP"], typeof(string), true)));
                }
            }
            
            public virtual string DN_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DN_NO"], typeof(string), true)));
                }
            }
        }
        #endregion DataSource SMBID
        
        #region DataSource SMRCNTR
        public class SMRCNTRDataSource : Stimulsoft.Report.Dictionary.StiDataTableSource
        {
            
            public SMRCNTRDataSource() : 
                    base("data.SMRCNTR", "SMRCNTR")
            {
            }
            
            public virtual string U_ID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["U_ID"], typeof(string), true)));
                }
            }
            
            public virtual string SHIPMENT_ID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["SHIPMENT_ID"], typeof(string), true)));
                }
            }
            
            public virtual string CMP
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CMP"], typeof(string), true)));
                }
            }
            
            public virtual string CNTR_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CNTR_NO"], typeof(string), true)));
                }
            }
            
            public virtual string CNTR_TYPE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CNTR_TYPE"], typeof(string), true)));
                }
            }
            
            public virtual string SEAL_NO1
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["SEAL_NO1"], typeof(string), true)));
                }
            }
            
            public virtual string SEAL_NO2
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["SEAL_NO2"], typeof(string), true)));
                }
            }
            
            public virtual string DN_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DN_NO"], typeof(string), true)));
                }
            }
            
            public virtual string DIVISION_DESCP
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DIVISION_DESCP"], typeof(string), true)));
                }
            }
            
            public virtual int QTY
            {
                get
                {
                    return ((int)(StiReport.ChangeType(this["QTY"], typeof(int), true)));
                }
            }
            
            public virtual string QTYU
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["QTYU"], typeof(string), true)));
                }
            }
            
            public virtual decimal GW
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["GW"], typeof(decimal), true)));
                }
            }
            
            public virtual string GWU
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["GWU"], typeof(string), true)));
                }
            }
            
            public virtual decimal CBM
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["CBM"], typeof(decimal), true)));
                }
            }
            
            public virtual string IMPORT_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["IMPORT_NO"], typeof(string), true)));
                }
            }
            
            public virtual string DEC_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEC_NO"], typeof(string), true)));
                }
            }
            
            public virtual string CER_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CER_NO"], typeof(string), true)));
                }
            }
            
            public virtual DateTime DEC_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["DEC_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime REL_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["REL_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string INSPECTION
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["INSPECTION"], typeof(string), true)));
                }
            }
            
            public virtual string DEC_CUST
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEC_CUST"], typeof(string), true)));
                }
            }
            
            public virtual string DEC_REPLY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEC_REPLY"], typeof(string), true)));
                }
            }
            
            public virtual string TC_IMPORT_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_IMPORT_NO"], typeof(string), true)));
                }
            }
            
            public virtual string TC_DEC_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_DEC_NO"], typeof(string), true)));
                }
            }
            
            public virtual string TC_CER_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_CER_NO"], typeof(string), true)));
                }
            }
            
            public virtual DateTime TC_DEC_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["TC_DEC_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime TC_REL_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["TC_REL_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string TC_INSPECTION
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_INSPECTION"], typeof(string), true)));
                }
            }
            
            public virtual string TC_DEC_CUST
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_DEC_CUST"], typeof(string), true)));
                }
            }
            
            public virtual string TC_DEC_REPLY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_DEC_REPLY"], typeof(string), true)));
                }
            }
            
            public virtual string RESERVE_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["RESERVE_NO"], typeof(string), true)));
                }
            }
            
            public virtual string DLV_AREA
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DLV_AREA"], typeof(string), true)));
                }
            }
            
            public virtual string DLV_AREA_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DLV_AREA_NM"], typeof(string), true)));
                }
            }
            
            public virtual string ADDR_CODE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["ADDR_CODE"], typeof(string), true)));
                }
            }
            
            public virtual string DLV_ADDR
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DLV_ADDR"], typeof(string), true)));
                }
            }
            
            public virtual string ORD_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["ORD_NO"], typeof(string), true)));
                }
            }
            
            public virtual DateTime PICKUP_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["PICKUP_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime ARRIVAL_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ARRIVAL_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string WS_CD
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["WS_CD"], typeof(string), true)));
                }
            }
            
            public virtual string LOT_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["LOT_NO"], typeof(string), true)));
                }
            }
            
            public virtual string PICK_AREA
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["PICK_AREA"], typeof(string), true)));
                }
            }
            
            public virtual string PICK_AREA_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["PICK_AREA_NM"], typeof(string), true)));
                }
            }
            
            public virtual string CANCEL_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CANCEL_NO"], typeof(string), true)));
                }
            }
            
            public virtual string GROUP_ID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["GROUP_ID"], typeof(string), true)));
                }
            }
            
            public virtual string STN
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["STN"], typeof(string), true)));
                }
            }
            
            public virtual string DEP
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEP"], typeof(string), true)));
                }
            }
        }
        #endregion DataSource SMRCNTR
        
        #region DataSource SMRDN
        public class SMRDNDataSource : Stimulsoft.Report.Dictionary.StiDataTableSource
        {
            
            public SMRDNDataSource() : 
                    base("data.SMRDN", "SMRDN")
            {
            }
            
            public virtual string U_ID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["U_ID"], typeof(string), true)));
                }
            }
            
            public virtual string GROUP_ID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["GROUP_ID"], typeof(string), true)));
                }
            }
            
            public virtual string CMP
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CMP"], typeof(string), true)));
                }
            }
            
            public virtual string STN
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["STN"], typeof(string), true)));
                }
            }
            
            public virtual string DEP
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEP"], typeof(string), true)));
                }
            }
            
            public virtual string SHIPMENT_ID
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["SHIPMENT_ID"], typeof(string), true)));
                }
            }
            
            public virtual string DN_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DN_NO"], typeof(string), true)));
                }
            }
            
            public virtual string INV_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["INV_NO"], typeof(string), true)));
                }
            }
            
            public virtual decimal NW
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["NW"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal GW
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["GW"], typeof(decimal), true)));
                }
            }
            
            public virtual string GWU
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["GWU"], typeof(string), true)));
                }
            }
            
            public virtual decimal CBM
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["CBM"], typeof(decimal), true)));
                }
            }
            
            public virtual string CBMU
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CBMU"], typeof(string), true)));
                }
            }
            
            public virtual decimal QTY
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["QTY"], typeof(decimal), true)));
                }
            }
            
            public virtual string QTYU
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["QTYU"], typeof(string), true)));
                }
            }
            
            public virtual decimal PKG_NUM
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["PKG_NUM"], typeof(decimal), true)));
                }
            }
            
            public virtual string PKG_UNIT
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["PKG_UNIT"], typeof(string), true)));
                }
            }
            
            public virtual string PKG_UNIT_DESC
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["PKG_UNIT_DESC"], typeof(string), true)));
                }
            }
            
            public virtual decimal CNT20
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["CNT20"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal CNT40
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["CNT40"], typeof(decimal), true)));
                }
            }
            
            public virtual decimal CNT40HQ
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["CNT40HQ"], typeof(decimal), true)));
                }
            }
            
            public virtual string OTH_CNT_TYPE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["OTH_CNT_TYPE"], typeof(string), true)));
                }
            }
            
            public virtual decimal OTH_CNT_NUM
            {
                get
                {
                    return ((decimal)(StiReport.ChangeType(this["OTH_CNT_NUM"], typeof(decimal), true)));
                }
            }
            
            public virtual string IMPORT_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["IMPORT_NO"], typeof(string), true)));
                }
            }
            
            public virtual string DEC_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEC_NO"], typeof(string), true)));
                }
            }
            
            public virtual string CER_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CER_NO"], typeof(string), true)));
                }
            }
            
            public virtual DateTime DEC_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["DEC_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime REL_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["REL_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string INSPECTION
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["INSPECTION"], typeof(string), true)));
                }
            }
            
            public virtual string DEC_CUST
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEC_CUST"], typeof(string), true)));
                }
            }
            
            public virtual string DEC_REPLY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DEC_REPLY"], typeof(string), true)));
                }
            }
            
            public virtual string TC_IMPORT_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_IMPORT_NO"], typeof(string), true)));
                }
            }
            
            public virtual string TC_DEC_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_DEC_NO"], typeof(string), true)));
                }
            }
            
            public virtual string TC_CER_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_CER_NO"], typeof(string), true)));
                }
            }
            
            public virtual DateTime TC_DEC_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["TC_DEC_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime TC_REL_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["TC_REL_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string TC_INSPECTION
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_INSPECTION"], typeof(string), true)));
                }
            }
            
            public virtual string TC_DEC_CUST
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_DEC_CUST"], typeof(string), true)));
                }
            }
            
            public virtual string TC_DEC_REPLY
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["TC_DEC_REPLY"], typeof(string), true)));
                }
            }
            
            public virtual string DLV_AREA
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DLV_AREA"], typeof(string), true)));
                }
            }
            
            public virtual string DLV_AREA_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DLV_AREA_NM"], typeof(string), true)));
                }
            }
            
            public virtual string ADDR_CODE
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["ADDR_CODE"], typeof(string), true)));
                }
            }
            
            public virtual string DLV_ADDR
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["DLV_ADDR"], typeof(string), true)));
                }
            }
            
            public virtual string RESERVE_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["RESERVE_NO"], typeof(string), true)));
                }
            }
            
            public virtual string WS_CD
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["WS_CD"], typeof(string), true)));
                }
            }
            
            public virtual DateTime PICKUP_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["PICKUP_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual DateTime ARRIVAL_DATE
            {
                get
                {
                    return ((DateTime)(StiReport.ChangeType(this["ARRIVAL_DATE"], typeof(DateTime), true)));
                }
            }
            
            public virtual string ORD_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["ORD_NO"], typeof(string), true)));
                }
            }
            
            public virtual string LOT_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["LOT_NO"], typeof(string), true)));
                }
            }
            
            public virtual string ADD_POINT
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["ADD_POINT"], typeof(string), true)));
                }
            }
            
            public virtual string PICK_AREA
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["PICK_AREA"], typeof(string), true)));
                }
            }
            
            public virtual string PICK_AREA_NM
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["PICK_AREA_NM"], typeof(string), true)));
                }
            }
            
            public virtual string CANCEL_NO
            {
                get
                {
                    return ((string)(StiReport.ChangeType(this["CANCEL_NO"], typeof(string), true)));
                }
            }
        }
        #endregion DataSource SMRDN
        #endregion StiReport Designer generated code - do not modify
    }
}
</Script>
  <ScriptLanguage>CSharp</ScriptLanguage>
  <Styles isList="true" count="0" />
</StiSerializer>